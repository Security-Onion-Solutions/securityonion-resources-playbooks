name: ET WEB_SPECIFIC_APPS phpHoo3 SQL Injection Attempt -- admin.php ADMIN_PASS UNION SELECT
id: 1246805
description: |
  Detects SQL injection attempts targeting phpHoo3 admin.php with UNION SELECT queries via ADMIN_PASS parameter.
  May trigger on legitimate database queries or web application testing containing similar patterns.
type: detection
detection_id: 2003812
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the admin.php request?
    context: Reveals the exact UNION SELECT query attempting to exploit CVE-2007-2534.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access phpHoo3 admin interfaces?
    context: Determines if administrative access to this web application is typical.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to this web server around the same time?
    context: Identifies additional exploitation attempts or reconnaissance activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        filter:
          community_id|expand: '%community_id%'
        condition: selection and not filter
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - src_ip
  - question: Were there successful authentication attempts to admin.php before or after this request?
    context: Determines if the SQL injection was preceded or followed by successful logins.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "admin.php"
          http.status_code:
            - 200
            - 302
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - src_ip
  - question: What web application process was targeted by this SQL injection attempt?
    context: Identifies the specific web server or application handling the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are other hosts attempting similar SQL injection attacks against this server?
    context: Reveals if this is part of a coordinated attack campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "admin.php"
        union_select:
          http.uri|contains:
            - "UNION"
            - "SELECT"
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and union_select and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: Did the attacker access any files or directories after the SQL injection attempt?
    context: Determines if the exploitation led to unauthorized file access.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.status_code:
            - 200
            - 301
            - 302
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: What database-related files were accessed on the web server after this attack?
    context: Identifies potential data exfiltration or database compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        database_files:
          file.path|contains:
            - ".sql"
            - ".db"
            - ".mdb"
            - "database"
            - "backup"
        condition: selection and database_files
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Were any administrative users created or modified after the SQL injection?
    context: Detects potential privilege escalation through database manipulation.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "admin"
        user_operations:
          http.uri|contains:
            - "user"
            - "password"
            - "create"
            - "insert"
            - "update"
        condition: selection and user_operations
      fields:
        - http.method
        - http.uri
        - src_ip
        - http.status_code
  - question: Are other web applications on this server being targeted with SQL injection?
    context: Determines if this is part of broader web application scanning.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        sql_patterns:
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
        filter:
          http.uri|contains: "admin.php"
        condition: selection and sql_patterns and not filter
      fields:
        - http.uri
        - src_ip
        - http.user_agent
  - question: Did lateral movement occur from the compromised web server?
    context: Identifies potential network propagation after successful exploitation.
    range: +24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
