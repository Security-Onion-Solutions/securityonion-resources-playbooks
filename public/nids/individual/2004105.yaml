name: ET WEB_SPECIFIC_APPS cpCommerce SQL Injection Attempt -- manufacturer.php id_manufacturer ASCII
id: 1204801
description: |
  Detects SQL injection attempts against cpCommerce manufacturer.php targeting the id_manufacturer parameter.
  May trigger on legitimate application testing, security scanning, or unusual database queries containing ASCII functions.
type: detection
detection_id: 2004105
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the manufacturer.php request?
    context: Reveals the exact injection string and SQL commands being attempted.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive requests to manufacturer.php?
    context: Determines if this represents normal application usage or targeted exploitation.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted from this source IP?
    context: Identifies broader SQL injection campaign targeting multiple parameters or applications.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "DROP"
            - "ASCII"
            - "CHAR"
            - "OR 1=1"
            - "' OR '"
        condition: selection
      fields:
        - http.uri
        - http.user_agent
        - dst_ip
  - question: What web application processes are running on the targeted server?
    context: Identifies the application stack that may be vulnerable to SQL injection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What database-related activity occurred after the SQL injection attempt?
    context: Assesses whether the injection attempt resulted in database access or modification.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - "mysql"
            - "postgres"
            - "sqlcmd"
            - "sqlite"
            - "php"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any files created or modified on the web server after the injection attempt?
    context: Identifies potential web shell uploads or file system changes from successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts attempting similar SQL injection attacks against cpCommerce?
    context: Determines scope of coordinated attack campaign against this application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "manufacturer.php"
          http.uri|contains: "id_manufacturer"
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What is the user-agent pattern of requests containing SQL injection attempts?
    context: Reveals whether attacks originate from automated tools or manual testing.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains: "SELECT"
        condition: selection
      fields:
        - http.user_agent
        - http.uri
  - question: Did the source IP attempt to access other administrative or sensitive application pages?
    context: Identifies reconnaissance or privilege escalation attempts beyond SQL injection.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "admin"
            - "config"
            - "login"
            - "setup"
            - "install"
            - "phpinfo"
            - ".sql"
            - "backup"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Are there related SQL injection alerts across the organization?
    context: Determines if this is part of a broader campaign targeting multiple applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category