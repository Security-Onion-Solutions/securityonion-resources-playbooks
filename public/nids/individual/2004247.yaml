name: ET WEB_SPECIFIC_APPS Woltlab Burning Board SQL Injection Attempt -- usergroups.php SELECT
id: 1209456
description: |
  Detects SQL injection attempts targeting the usergroups.php page in Woltlab Burning Board forum software.
  May trigger on legitimate SELECT queries or security testing of web applications.
type: detection
detection_id: 2004247
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full payload and injection method used against usergroups.php.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Woltlab Burning Board application?
    context: Determines if HTTP access to this forum software is typical for this client.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection to the forum application?
    context: Identifies the browser or application making the SQL injection request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this HTTP request?
    context: Shows domain resolution that led to accessing the vulnerable forum.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other HTTP requests were made to the forum application from this host?
    context: Identifies additional enumeration or exploitation attempts against the same target.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: ".php"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did the forum application respond with database error messages?
    context: Determines if the SQL injection attempt was successful or generated error responses.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        error_indicators:
          http.response.body|contains:
            - "mysql"
            - "database"
            - "syntax error"
            - "SQL"
            - "ORA-"
            - "PostgreSQL"
        condition: selection and error_indicators
      fields:
        - http.status_code
        - http.response.body
  - question: What other external connections occurred from this host?
    context: Identifies additional attack infrastructure or data exfiltration channels.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting similar SQL injection attacks against web applications?
    context: Determines scope of web application targeting campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What files were accessed by the web server process during this timeframe?
    context: Identifies potential file system access resulting from SQL injection.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any administrative or configuration files accessed on the web server?
    context: Assesses potential privilege escalation or configuration disclosure.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        admin_files:
          file.path|contains:
            - "config"
            - "admin"
            - "password"
            - "database"
            - ".conf"
            - "settings"
        condition: selection and admin_files
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Did any processes attempt to establish database connections after the injection attempt?
    context: Identifies potential database access resulting from successful SQL injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        db_ports:
          dst_port:
            - 1433
            - 3306
            - 5432
            - 1521
            - 27017
        condition: selection and db_ports
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state