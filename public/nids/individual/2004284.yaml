name: ET WEB_SPECIFIC_APPS Koan Software Mega Mall SQL Injection Attempt -- product_review.php sk UNION SELECT
id: 1222201
description: |
  Detects SQL injection attempts targeting the sk parameter in Koan Software Mega Mall's product_review.php page.
  May trigger on legitimate database queries containing UNION SELECT statements or security testing activities.
type: detection
detection_id: 2004284
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the product_review.php request?
    context: Reveals the exact UNION SELECT statement and parameters used in the exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive requests to product_review.php?
    context: Determines if this represents normal application usage or targeted exploitation.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process handled the malformed product_review.php request?
    context: Identifies the specific web server or application processing the SQL injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests were made to this web server during the attack timeframe?
    context: Identifies reconnaissance activities or additional exploitation attempts.
    range: +/-30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip|expand: '%dst_ip%'\n    dst_port|expand: '%dst_port%'\n  filter:\n    http.uri|expand: '%http.uri%'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - http.method\n  - http.uri\n  - http.status_code\n  - http.user_agent\n  \n"
  - question: Did the web application create or modify any files after the SQL injection attempt?
    context: Assesses whether the injection resulted in file system changes or backdoor installation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts attempting SQL injection attacks against this web application?
    context: Determines if this is part of a coordinated attack campaign.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip|expand: '%dst_ip%'\n    http.uri|contains: \"product_review.php\"\n    http.uri|contains: \"UNION\"\n  filter:\n    src_ip|expand: '%src_ip%'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - http.uri\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: What database-related processes were active during the SQL injection attempt?
    context: Identifies database services that may have processed the malicious query.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - postgres.exe
          - sqlservr.exe
          - oracle.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Did the attacker establish any reverse connections after the SQL injection?
    context: Identifies potential command execution or data exfiltration channels.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there other alerts involving the same source IP address?
    context: Reveals broader attack patterns or campaign infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful based on HTTP response codes and content.
    range: +/-5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri