name: ET WEB_SPECIFIC_APPS PHP-Nuke SQL Injection Attempt -- mainfile.php lang INSERT
id: 1221705
description: |
  Detects SQL injection attempts targeting PHP-Nuke CMS mainfile.php lang parameter.
  May trigger on legitimate database administration or penetration testing activities.
type: detection
detection_id: 2004327
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full malicious payload and attack vector details.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access PHP-Nuke applications?
    context: Determines if HTTP access to this web application is typical behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies coordinated attacks targeting database vulnerabilities.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UPDATE"
            - "DELETE"
            - "UNION"
            - "DROP"
            - "'"
            - "OR 1=1"
            - "EXEC"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What other web applications on this server were targeted?
    context: Assesses the scope of web application attack attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        filter:
          http.uri|contains: "mainfile.php"
        condition: selection and not filter
      fields:
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Are other hosts targeting the same PHP-Nuke application?
    context: Determines if multiple attackers are exploiting the same vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What was the web server's response to the SQL injection attempt?
    context: Indicates if the attack was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
  - question: Did this source IP attempt other types of web attacks?
    context: Reveals broader attack patterns beyond SQL injection.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "../"
            - "passwd"
            - "etc/shadow"
            - "cmd="
            - "exec"
            - "<script"
            - "javascript:"
            - "php://"
        condition: selection
      fields:
        - dst_ip
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What files were accessed by the web server process after this request?
    context: Identifies potential file system access resulting from SQL injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any database-related processes spawned after the injection attempt?
    context: Detects command execution through SQL injection exploitation.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - "mysql"
            - "mysqld"
            - "psql"
            - "sqlcmd"
            - "php"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User
  - question: Are there similar SQL injection alerts across the organization?
    context: Identifies coordinated attacks targeting multiple web applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What user-agent patterns were used in these web application attacks?
    context: Reveals attack tool signatures and automation patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.user_agent
        - dst_ip
        - http.uri
        - http.method
  - question: Did any persistence mechanisms get established on the web server?
    context: Checks for backdoors or persistent access following successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|endswith:
          - schtasks.exe
          - taskeng.exe
          - taskhostw.exe
        condition: selection
      fields:
        - CommandLine
        - Image
        - ProcessGuid
        - User
        - ParentImage