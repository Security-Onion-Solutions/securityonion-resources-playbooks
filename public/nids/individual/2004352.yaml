name: ET WEB_SPECIFIC_APPS Grayscale Blog SQL Injection Attempt -- userdetail.php id DELETE
id: 1223531
description: |
  Detects SQL injection attempts targeting the Grayscale Blog application's userdetail.php script with DELETE operations.
  May trigger on legitimate database administration activities or security testing tools.
type: detection
detection_id: 2004352
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the userdetail.php request?
  context: Reveals the specific DELETE statement and parameters used in the injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the Grayscale Blog application?
  context: Determines if this represents unusual access to the vulnerable web application.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What user agent and source characteristics are associated with this request?
  context: Identifies the client making the SQL injection attempt and potential automation tools.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        http.uri|contains: userdetail.php
        src_ip|expand: '%src_ip%'
    fields:
    - http.user_agent
    - http.method
    - src_ip
    - http.uri
    logsource:
      category: network
      service: http
- question: What other SQL injection patterns were attempted from this source?
  context: Identifies broader SQL injection campaign targeting multiple applications or parameters.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - DELETE
        - SELECT
        - INSERT
        - UPDATE
        - UNION
        - OR 1=1
        - AND 1=1
        - ''' OR '''
        - ''' AND '''
        src_ip|expand: '%src_ip%'
    fields:
    - http.uri
    - http.virtual_host
    - dst_ip
    - http.method
    logsource:
      category: network
      service: http
- question: Are other hosts being targeted with similar Grayscale Blog exploitation attempts?
  context: Determines the scope of the SQL injection campaign across the organization.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What web applications on this server received requests after the SQL injection attempt?
  context: Identifies potential lateral movement to other web applications on the same server.
  range: +2h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        http.uri|contains: userdetail.php
      selection:
        dst_ip|expand: '%dst_ip%'
        src_ip|expand: '%src_ip%'
    fields:
    - http.uri
    - http.virtual_host
    - http.method
    - http.status_code
    logsource:
      category: network
      service: http
- question: What database-related processes were active during this timeframe?
  context: Identifies database services that may have processed the malicious SQL commands.
  range: +/-30m
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        Image|contains:
        - mysql.exe
        - mysqld.exe
        - postgres.exe
        - sqlservr.exe
        - oracle.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: Were any files created or modified on the web server after the SQL injection attempt?
  context: Assesses whether the injection resulted in file system changes or web shell deployment.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: What error responses or status codes were returned for these injection attempts?
  context: Determines if the injection was successful or blocked by security controls.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        http.uri|contains: userdetail.php
        src_ip|expand: '%src_ip%'
    fields:
    - http.status_code
    - http.status_msg
    - http.response.body.length
    - http.uri
    logsource:
      category: network
      service: http
- question: Did this source attempt to access database administration interfaces?
  context: Identifies attempts to access database management tools following SQL injection.
  range: +2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - phpmyadmin
        - adminer
        - phpMyAdmin
        - mysql
        - database
        - admin
        - dbadmin
        src_ip|expand: '%src_ip%'
    fields:
    - http.uri
    - http.virtual_host
    - dst_ip
    - http.status_code
    logsource:
      category: network
      service: http