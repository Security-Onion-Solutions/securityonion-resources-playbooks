name: ET WEB_SPECIFIC_APPS WordPress SQL Injection Attempt -- admin-functions.php SELECT
id: 1209007
description: |
  Detects SQL injection attempts targeting WordPress admin-functions.php with SELECT statements.
  May trigger on legitimate admin queries or security testing tools scanning for CVE-2007-1409.
type: detection
detection_id: 2004403
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection attempt in the admin-functions.php request?
    context: Reveals the exact payload and SQL syntax used in the exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress admin interfaces?
    context: Determines if admin access represents typical usage patterns for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled the admin-functions.php request?
    context: Identifies the WordPress installation and web server configuration.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other WordPress admin pages were accessed from this source?
    context: Identifies additional admin interface probing or legitimate admin activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "/wp-admin/"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: What other external connections occurred from this host after the SQL injection attempt?
    context: Identifies potential data exfiltration or additional attack infrastructure.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any database-related files or scripts created after this request?
    context: Assesses whether SQL injection resulted in file creation or database dumps.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other WordPress sites receiving similar SQL injection attempts?
    context: Determines if this is part of a broader WordPress scanning campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What was the response status and size for the admin-functions.php request?
    context: Indicates whether the SQL injection attempt was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
          http.uri|contains: "admin-functions.php"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
  - question: Did this source attempt SQL injection on other web applications?
    context: Reveals broader SQL injection scanning or targeting patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: What user-agent pattern was used for the admin-functions.php request?
    context: Identifies automated tools or browsers used for the SQL injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.user_agent
        - http.method
  - question: Were any WordPress database backup or export files accessed?
    context: Determines if the attacker attempted to access sensitive database information.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - ".sql"
            - "backup"
            - "dump"
            - "export"
            - "database"
        condition: selection
      fields:
        - http.uri
        - http.status_code
        - http.response.body.length