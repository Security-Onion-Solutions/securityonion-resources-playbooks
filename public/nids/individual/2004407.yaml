name: ET WEB_SPECIFIC_APPS WordPress SQL Injection Attempt -- admin-functions.php ASCII
id: 1223205
description: |
  Detects attempts to exploit CVE-2007-1409 in WordPress admin-functions.php using ASCII function with SELECT statements.
  May trigger on legitimate database administration or penetration testing activities.
type: detection
detection_id: 2004407
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete URI and payload in the admin-functions.php request?
    context: Reveals the exact SQL injection attempt and ASCII function usage pattern.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress admin pages?
    context: Determines if administrative access to WordPress is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to WordPress administrative interfaces from this source?
    context: Identifies additional exploitation attempts or reconnaissance activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "/wp-admin/"
            - "/wp-login.php"
            - "/wp-content/"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - http.status_code
  - question: Were there other SQL injection patterns in requests to this WordPress site?
    context: Reveals broader SQL injection campaign targeting the same application.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What was the server's response to the SQL injection attempt?
    context: Indicates whether the injection was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are there other hosts attempting similar WordPress exploits?
    context: Determines scope of WordPress-targeted attack campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "/wp-admin/admin-functions.php"
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: Did the source IP attempt to access other web applications on this server?
    context: Reveals broader web application reconnaissance or attack patterns.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        filter:
          http.uri|contains: "admin-functions.php"
        condition: selection and not filter
      fields:
        - http.virtual_host
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What user-agent was used for the SQL injection attempt?
    context: Identifies automation tools or browsers used in the attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.user_agent
        - http.method
  - question: Were there any successful authentication attempts from this source?
    context: Determines if the attacker gained legitimate access to WordPress.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "wp-login.php"
          http.status_code: [200, 302]
        condition: selection
      fields:
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Are there related alerts for this WordPress server or attacking source?
    context: Correlates with other security events involving the same infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip