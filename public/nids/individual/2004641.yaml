name: ET WEB_SPECIFIC_APPS Kartli Alisveris Sistemi SQL Injection Attempt
id: 1209951
description: |
  Detects SQL injection attempts against the Kartli Alisveris Sistemi application targeting the news.asp page.
  May trigger on legitimate queries containing SQL keywords or security testing activities.
type: detection
detection_id: 2004641
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full payload and injection technique used against the news.asp page.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Kartli Alisveris Sistemi application?
    context: Determines if this represents a change from normal application usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies additional exploitation attempts using different SQL injection techniques.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "CREATE"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: Were other pages on this web server targeted with SQL injection attempts?
    context: Assesses the scope of SQL injection testing against the application.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "'"
            - "\""
            - "OR 1=1"
            - "AND 1=1"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful based on HTTP response codes and patterns.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "news.asp"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Did the source IP attempt to access other vulnerable web applications?
    context: Identifies broader web application scanning or exploitation attempts.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - ".php"
            - ".asp"
            - ".jsp"
            - "admin"
            - "login"
            - "upload"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.user_agent
  - question: Are other hosts attempting similar SQL injection attacks against web servers?
    context: Determines if this is part of a coordinated campaign targeting web applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What user agent was used for the SQL injection attempt?
    context: Identifies the tool or browser used for the attack and potential automation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "news_id="
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: Did the source perform reconnaissance before the SQL injection attempt?
    context: Identifies scanning or enumeration activities that preceded the injection attempt.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        robots:
          http.uri|contains:
            - "robots.txt"
            - "sitemap"
            - ".git"
            - ".svn"
            - "backup"
        condition: selection and robots
      fields:
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Were there any successful file uploads or downloads after the SQL injection attempt?
    context: Assesses potential data exfiltration or web shell deployment following exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        uploads:
          http.method: "POST"
          http.status_code:
            - 200
            - 201
            - 302
        downloads:
          http.method: "GET"
          http.response.body.length|gt: 1000000
        condition: selection and (uploads or downloads)
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.response.body.length