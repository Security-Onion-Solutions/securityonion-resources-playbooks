name: ET WEB_SPECIFIC_APPS Wordpress 2.2 SQL Injection Attempt -- xmlrpc.php INSERT
id: 1223207
description: |
  Detects HTTP requests to Wordpress xmlrpc.php containing SQL INSERT statements that may indicate
  CVE-2007-3140 exploitation attempts. May trigger on legitimate XML-RPC usage or security testing.
type: detection
detection_id: 2004656
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL INSERT statement?
  context: Reveals the exact payload and parameters used in the potential SQL injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally receive requests to xmlrpc.php endpoints?
  context: Determines if XML-RPC access represents normal usage patterns for this Wordpress installation.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What process handled the incoming xmlrpc.php request?
  context: Identifies the web server or application responsible for processing the request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id|expand: '%community_id%'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What DNS queries occurred before this request was received?
  context: Shows how the client resolved the target domain before the attack attempt.
  range: -5m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip|expand: '%src_ip%'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: What other HTTP requests did this client send to the web server?
  context: Reveals additional reconnaissance or exploitation attempts from the same source.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        src_ip|expand: '%src_ip%'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Did the web server establish any external connections after receiving this request?
  context: Identifies potential data exfiltration or remote code execution results.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%src_ip%'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip|expand: '%public_ip%'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What files were created or modified by the web server process after this request?
  context: Detects potential webshells or malicious files created through successful exploitation.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        ProcessGuid|expand: '%ProcessGuid%'
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - User
- question: Are other Wordpress installations receiving similar SQL injection attempts?
  context: Determines if this is part of a broader campaign targeting Wordpress xmlrpc.php vulnerabilities.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      filter:
        src_ip|expand: '%src_ip%'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Were any database-related processes executed after this request?
  context: Identifies potential database interaction resulting from the SQL injection attempt.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        Image|contains:
        - mysql.exe
        - mysqld.exe
        - postgres.exe
        - sqlservr.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: Did this source IP attempt to access other web applications or admin interfaces?
  context: Reveals broader reconnaissance or exploitation attempts against web infrastructure.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - admin
        - login
        - wp-admin
        - phpmyadmin
        - cpanel
        - webmail
        src_ip|expand: '%src_ip%'
    fields:
    - dst_ip
    - http.method
    - http.uri
    - http.status_code
    logsource:
      category: network
      service: http
- question: Are there related alerts involving the same source IP across the organization?
  context: Identifies coordinated attacks or additional security events from this threat actor.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip|expand: '%related_ip%'
      filter:
        document_id|expand: '%document_id%'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip