name: ET WEB_SPECIFIC_APPS Simple PHP Forum SQL Injection Attempt -- logon_user.php username UPDATE
id: 1222949
description: |
  Detects SQL injection attempts targeting Simple PHP Forum's logon_user.php with UPDATE statements in the username parameter.
  May trigger on legitimate applications using UPDATE keywords or security testing tools.
type: detection
detection_id: 2004784
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the logon_user.php request?
    context: Reveals the specific UPDATE statement and SQL syntax used in the attack attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access Simple PHP Forum applications?
    context: Determines if HTTP requests to this web application are typical for this client.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What browser or tool initiated the SQL injection request?
    context: Identifies whether this originated from automated tools or manual browser activity.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies additional exploitation attempts targeting the same application.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip|expand: '%dst_ip%'\n    http.uri|contains:\n      - \"logon_user.php\"\n      - \"SELECT\"\n      - \"INSERT\"\n      - \"DELETE\"\n      - \"UNION\"\n      - \"DROP\"\n  condition: selection\nfields:\n  - src_ip\n  - http.uri\n  - http.user_agent\n  - http.method\n  \n"
  - question: What other web application attacks occurred from this source IP?
    context: Determines if this is part of broader web application scanning or exploitation.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: alert\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    rule.category|contains:\n      - \"web-application\"\n      - \"trojan-activity\"\n      - \"attempted-admin\"\n  condition: selection\nfields:\n  - dst_ip\n  - rule.name\n  - alert.severity_label\n  - rule.category\n  \n"
  - question: Are other hosts attempting SQL injection against the same PHP Forum application?
    context: Assesses whether multiple sources are targeting this vulnerable application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What response codes did the web server return for these SQL injection attempts?
    context: Indicates whether the injection attempts were successful or blocked.
    range: +/-30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    dst_ip|expand: '%dst_ip%'\n    http.uri|contains: \"logon_user.php\"\n  condition: selection\nfields:\n  - http.status_code\n  - http.uri\n  - http.method\n  - http.response.body.length\n  \n"
  - question: Did any files get created on the web server after these injection attempts?
    context: Identifies potential web shells or backdoors created through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there similar SQL injection alerts across other web applications?
    context: Determines scope of web application targeting campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category