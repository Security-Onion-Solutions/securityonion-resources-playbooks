name: ET WEB_SPECIFIC_APPS Sphider SQL Injection Attempt -- search.php category ASCII
id: 1222969
description: |
  Detects SQL injection attempts targeting Sphider search application via the category parameter.
  May trigger on legitimate database queries containing ASCII functions or security testing tools.
type: detection
detection_id: 2004820
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the search.php request?
  context: Reveals the exact injection string attempting to exploit CVE-2006-7057.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the Sphider search application?
  context: Determines if access to search.php represents normal application usage.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What web browser or tool submitted the SQL injection request?
  context: Identifies whether this originated from automated tools or manual attempts.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        http.uri|contains: /search.php
        src_ip|expand: '%src_ip%'
    fields:
    - http.user_agent
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: What other web application attacks occurred from this source IP?
  context: Identifies patterns of web application scanning or targeted exploitation.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        rule.category|contains: web-application-attack
        src_ip|expand: '%src_ip%'
    fields:
    - rule.name
    - dst_ip
    - http.uri
    logsource:
      category: alert
- question: Were there successful login attempts to the web application after the injection?
  context: Assesses whether the SQL injection may have bypassed authentication.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      filter:
        http.uri|contains:
        - login
        - admin
        - dashboard
      selection:
        dst_ip|expand: '%dst_ip%'
        http.status_code:
        - 200
        - 302
        - 301
        src_ip|expand: '%src_ip%'
    fields:
    - http.uri
    - http.status_code
    - http.method
    logsource:
      category: network
      service: http
- question: Did the web server process make any database connections after the injection attempt?
  context: Determines if the SQL injection reached the database layer.
  range: +15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_port:
        - 3306
        - 5432
        - 1433
        - 1521
        src_ip|expand: '%dst_ip%'
    fields:
    - dst_ip
    - dst_port
    - network.protocol
    logsource:
      category: network
      service: connection
- question: Are other hosts targeting the same Sphider application?
  context: Identifies coordinated attacks against the vulnerable search application.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection
      filter:
        src_ip|expand: '%src_ip%'
      selection:
        dst_ip|expand: '%dst_ip%'
        http.uri|contains:
        - category=
        - SELECT
        - ASCII
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What files were accessed by the web application after the SQL injection?
  context: Reveals potential data access or file system interaction from successful injection.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        Image|contains:
        - apache
        - nginx
        - httpd
        - php
        - w3wp
        host.ip|expand: '%dst_ip%'
    fields:
    - file.path
    - file.name
    - Image
    logsource:
      category: file_event
- question: Did any lateral movement occur from the web server after the injection attempt?
  context: Assesses whether successful exploitation enabled further network access.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%private_ip%'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Are there other alerts involving the same external IP address?
  context: Determines scope of activity from this potential attacker.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip|expand: '%related_ip%'
      filter:
        document_id|expand: '%document_id%'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip