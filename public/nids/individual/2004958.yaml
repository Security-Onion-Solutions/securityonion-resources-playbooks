name: ET WEB_SPECIFIC_APPS Neuron Blog SQL Injection Attempt -- addcomment2.php comment DELETE
id: 1221139
description: |
  Detects SQL injection attempts targeting Neuron Blog application through DELETE statements in comment parameters.
  May trigger on legitimate database administration or application testing containing SQL keywords.
type: detection
detection_id: 2004958
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the DELETE statement in the comment parameter?
    context: Reveals the full SQL injection payload targeting the Neuron Blog application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Neuron Blog application?
    context: Determines if access to addcomment2.php represents normal user behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or application submitted the request with SQL injection content?
    context: Identifies whether the request came from automated tools or manual browsing.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this HTTP request to the web server?
    context: Reveals how the attacker discovered or accessed the vulnerable application.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other HTTP requests were made to the web server from this source?
    context: Identifies additional reconnaissance or exploitation attempts against the web application.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were other SQL injection patterns attempted against the same web application?
    context: Determines if this is part of a broader SQL injection attack campaign.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "UNION"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
  - question: Are other hosts attempting similar SQL injection attacks against web applications?
    context: Assesses whether this represents coordinated scanning or exploitation activity.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What external connections were established by the web server after receiving this request?
    context: Identifies potential data exfiltration or reverse shell connections from successful exploitation.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created or modified on the web server following this request?
    context: Reveals web shells, uploaded files, or other artifacts from successful SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any database-related processes or commands executed after this HTTP request?
    context: Identifies database interactions that may indicate successful SQL injection execution.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - "mysql"
            - "mysqld"
            - "sqlcmd"
            - "osql"
            - "postgres"
            - "psql"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Did any privilege escalation attempts occur on the web server after this request?
    context: Identifies attempts to gain elevated access following potential SQL injection success.
    range: +2h
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip|expand: '%dst_ip%'\n  escalation:\n    - Image|endswith: \n        - \"\\\\net.exe\"\n        - \"\\\\whoami.exe\"\n        - \"\\\\sc.exe\"\n        - \"\\\\reg.exe\"\n    - CommandLine|contains:\n        - \"net user\"\n        - \"net localgroup\"\n        - \"whoami /priv\"\n        - \"sc create\"\n  condition: selection and escalation\nfields:\n  - Image\n  - CommandLine\n  - User\n  - ParentImage"