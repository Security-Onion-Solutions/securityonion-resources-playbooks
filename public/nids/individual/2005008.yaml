name: ET WEB_SPECIFIC_APPS Ublog Reload SQL Injection Attempt -- badword.asp UPDATE
id: 1204247
description: |
  Detects HTTP requests to badword.asp containing UPDATE keywords that match SQL injection patterns.
  May indicate exploitation attempts against Ublog applications or legitimate administrative updates.
type: detection
detection_id: 2005008
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the UPDATE SQL keyword?
    context: Reveals the exact SQL injection payload and parameters used in the attack attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the badword.asp application?
    context: Determines if this represents normal administrative activity or an anomalous access pattern.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What application or process initiated the connection to badword.asp?
    context: Identifies whether the request originated from a web browser, script, or automated tool.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests were made to this web server around the same time?
    context: Reveals additional reconnaissance or exploitation attempts against the same target.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What other external connections occurred from this source host?
    context: Identifies additional attack infrastructure or lateral movement attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting similar SQL injection attacks against badword.asp?
    context: Determines if this is part of a coordinated scanning or exploitation campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "/badword.asp"
          http.uri|contains: "UPDATE"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What files were created on the web server after the SQL injection attempt?
    context: Identifies potential web shells, backdoors, or other files created through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any database-related processes show unusual activity after the request?
    context: Reveals whether the SQL injection attempt affected backend database systems.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - "mysql"
            - "sqlservr"
            - "postgres"
            - "oracle"
            - "mssql"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Were there other SQL injection patterns attempted against this web application?
    context: Identifies broader SQL injection testing or exploitation attempts beyond UPDATE statements.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "SELECT"
            - "INSERT"
            - "DELETE"
            - "DROP"
            - "UNION"
            - "'"
            - "--"
            - "/*"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: Are there related alerts for web application attacks from the same source?
    context: Reveals patterns of web application testing or exploitation attempts.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful based on HTTP status codes and response patterns.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri