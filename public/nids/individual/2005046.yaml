name: ET WEB_SPECIFIC_APPS EasyMoblog SQL Injection Attempt -- add_comment.php post_id UNION SELECT
id: 1209558
description: |
  Detects SQL injection attempts targeting EasyMoblog's add_comment.php script using UNION SELECT statements.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2005046
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the add_comment.php request?
    context: Reveals the specific UNION SELECT statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive requests to add_comment.php?
    context: Determines if EasyMoblog usage is typical for this web server.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled the SQL injection request?
    context: Identifies the specific web application processing the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source IP?
    context: Identifies additional web application attacks or reconnaissance attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Are there other SQL injection attempts against this web server?
    context: Determines if this is part of a broader SQL injection campaign.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: What files were accessed by the web server process after the injection attempt?
    context: Identifies database files or configuration files that may have been compromised.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid|expand: '%ProcessGuid%'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Are other hosts targeting EasyMoblog applications in the environment?
    context: Assesses the scope of SQL injection attempts against web applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "add_comment.php"
          http.uri|contains: "UNION"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
  - question: Did the web server establish any new database connections after the injection attempt?
    context: Determines if the SQL injection resulted in unauthorized database access.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_port:
            - 3306
            - 5432
            - 1433
            - 1521
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - network.bytes_sent
        - network.bytes_received
  - question: What is the pattern of requests from this source IP?
    context: Analyzes the timing and frequency of requests to identify automated attacks.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Are there related alerts involving the same source IP?
    context: Identifies other security events that may be part of the same attack campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip