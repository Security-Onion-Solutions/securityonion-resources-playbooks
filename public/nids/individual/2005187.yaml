name: ET WEB_SPECIFIC_APPS W2B Online Banking SQL Injection Attempt -- DocPay.w2b listDocPay UNION SELECT
id: 1200474
description: |
  Detects SQL injection attempts targeting the W2B Online Banking application's DocPay.w2b endpoint.
  May trigger on legitimate database queries or security testing of the banking application.
type: detection
detection_id: 2005187
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the DocPay.w2b request?
    context: Reveals the exact UNION SELECT statement and parameters used in the injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this banking server normally receive DocPay.w2b requests from external sources?
    context: Determines if access to this banking endpoint represents normal usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process handled the DocPay.w2b request?
    context: Identifies the specific banking application component that processed the SQL injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What database queries were executed after the UNION SELECT request?
    context: Assesses whether the SQL injection attempt resulted in database access or data extraction.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - "sqlcmd"
            - "mysql"
            - "psql"
            - "SELECT"
            - "DATABASE"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
  - question: What other external connections occurred from the banking server after the injection attempt?
    context: Identifies potential data exfiltration or additional attack vectors following the SQL injection.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any sensitive files accessed by the web application process after the injection attempt?
    context: Determines if the SQL injection led to unauthorized file system access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid|expand: '%ProcessGuid%'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Are other hosts receiving similar SQL injection attempts against DocPay.w2b?
    context: Determines if this is part of a coordinated attack against W2B banking infrastructure.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the source IP's history of accessing banking applications?
    context: Analyzes whether this IP has legitimate banking access patterns or represents suspicious activity.
    range: -30d
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "banking"
            - "DocPay"
            - "w2b"
            - "financial"
        condition: selection
      fields:
        - http.uri
        - http.virtual_host
        - http.user_agent
  - question: Did the SQL injection attempt result in any database files being modified?
    context: Identifies potential data tampering or unauthorized database changes.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.name|endswith:
            - ".mdb"
            - ".db"
            - ".sqlite"
            - ".frm"
            - ".ibd"
            - ".mdf"
            - ".ldf"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: What user accounts were accessed or enumerated following the injection attempt?
    context: Determines if the SQL injection led to unauthorized access to banking customer data.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - "net user"
            - "query user"
            - "whoami"
            - "SELECT * FROM users"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
  - question: Were any persistence mechanisms established on the banking server after the injection?
    context: Identifies attempts to maintain access to the compromised banking application.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%related_ip%'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: Did any lateral movement occur from the banking server to other financial systems?
    context: Assesses whether the SQL injection was used as a pivot point for broader financial network compromise.
    range: +6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport