name: ET WEB_SPECIFIC_APPS Easebay Resources Login Manager SQL Injection Attempt
id: 1221962
description: |
  Detects SQL injection attempts targeting Easebay Resources Login Manager memberlist.php with INSERT INTO statements.
  May trigger on legitimate database administration tools or security testing activities.
type: detection
detection_id: 2005276
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full payload and parameters used in the memberlist.php attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Easebay Login Manager application?
    context: Determines if this represents typical administrative access or external targeting.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled this SQL injection request?
    context: Identifies the specific web application that processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this SQL injection attempt?
    context: Shows how the attacker discovered or reached the vulnerable application.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other HTTP requests were made to this web server after the injection attempt?
    context: Identifies follow-up requests that may indicate successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Were any database-related files created or modified on the web server?
    context: Assesses whether the SQL injection resulted in file system changes.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        file_filter:
          file.name|contains:
            - ".sql"
            - ".db"
            - ".mdb"
            - "database"
            - "backup"
        condition: selection and file_filter
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Did the web server establish any new external connections after the injection attempt?
    context: Identifies potential data exfiltration or command and control communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting similar SQL injection attacks against memberlist.php?
    context: Determines if this is part of a coordinated campaign targeting this vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "memberlist.php"
        injection_pattern:
          http.uri|contains:
            - "init_row="
            - "INSERT"
            - "INTO"
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and injection_pattern and not filter
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What is the pattern of requests from this source IP to web applications?
    context: Reveals whether this IP is conducting broader web application reconnaissance.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        attack_indicators:
          http.uri|contains:
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "UNION"
            - "OR 1=1"
            - "../"
            - "<script"
        condition: selection and attack_indicators
      fields:
        - dst_ip
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Were any administrative accounts accessed after the SQL injection attempt?
    context: Identifies potential privilege escalation following successful injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        admin_access:
          http.uri|contains:
            - "admin"
            - "login"
            - "dashboard"
            - "control"
            - "manage"
        condition: selection and admin_access
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Are there related alerts involving the same source IP across the organization?
    context: Determines the scope of potential compromise or attack campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip