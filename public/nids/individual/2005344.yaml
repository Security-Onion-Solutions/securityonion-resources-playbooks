name: ET WEB_SPECIFIC_APPS Just For Fun Network Management System SQL Injection Attempt
id: 1223566
description: |
  Detects SQL injection attempts against JFFNMS auth.php targeting the pass parameter with INSERT statements.
  May trigger on legitimate database operations or security testing against JFFNMS installations.
type: detection
detection_id: 2005344
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the auth.php request?
    context: Reveals the exact INSERT statement and injection technique used against JFFNMS.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access JFFNMS or similar network management applications?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled the malicious auth.php request?
    context: Identifies the specific web application that processed the SQL injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this SQL injection attempt?
    context: Shows how the attacker discovered or targeted the JFFNMS installation.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other HTTP requests occurred from this source after the injection attempt?
    context: Identifies follow-up exploitation attempts or data extraction activities.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did the web server create or modify any database files after the injection attempt?
    context: Assesses whether the SQL injection successfully altered database contents.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        database_files:
          file.name|contains:
            - ".db"
            - ".sqlite"
            - ".mdb"
            - "database"
            - "jffnms"
        condition: selection and database_files
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Are other hosts attempting similar SQL injection attacks against this server?
    context: Determines if this is part of a coordinated attack against the JFFNMS installation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "auth.php"
        sql_injection:
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UPDATE"
            - "DELETE"
            - "UNION"
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and sql_injection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What other web applications on this server are being targeted?
    context: Identifies broader web application attack patterns against the same server.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        filter:
          http.uri|contains: "auth.php"
        condition: selection and not filter
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - http.status_code
  - question: Did any lateral movement occur from the web server after the injection attempt?
    context: Assesses whether successful exploitation led to network propagation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Were any scheduled tasks or services created on the web server?
    context: Identifies persistence mechanisms that may have been established through SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|endswith:
          - schtasks.exe
          - taskeng.exe
          - taskhostw.exe
        condition: selection
      fields:
        - CommandLine
        - Image
        - ProcessGuid
        - User
        - ParentImage
  - question: Are there other alerts involving this source IP across the organization?
    context: Reveals the scope of the attack campaign targeting web applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip