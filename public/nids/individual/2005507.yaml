name: ET WEB_SPECIFIC_APPS Virtuemart SQL Injection Attempt -- virtuemart_parser.php category_id INSERT
id: 1206453
description: |
  Detects SQL injection attempts targeting VirtueMart's virtuemart_parser.php script via category_id parameter.
  May trigger on legitimate database operations or penetration testing activities.
type: detection
detection_id: 2005507
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the virtuemart_parser.php request?
    context: Reveals the exact INSERT statement and injection technique used against VirtueMart.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access VirtueMart applications?
    context: Determines if HTTP access to this VirtueMart installation is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled the VirtueMart SQL injection request?
    context: Identifies the web application server that processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from the web server after this request?
    context: Identifies potential data exfiltration or additional attack vectors following the injection.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created by the web server process after the SQL injection attempt?
    context: Detects web shells, backdoors, or other files created through successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other VirtueMart installations receiving similar SQL injection attempts?
    context: Determines if this is part of a broader campaign targeting VirtueMart vulnerabilities.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did the attacker attempt other SQL injection techniques against this VirtueMart installation?
    context: Reveals the scope of SQL injection testing and attack methodology.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          src_ip|expand: '%src_ip%'
          http.uri|contains: "virtuemart"
        injection_patterns:
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "DROP"
            - "UPDATE"
            - "DELETE"
            - "INSERT"
            - "'"
            - "--"
            - "/*"
        condition: selection and injection_patterns
      fields:
        - http.uri
        - http.method
        - http.user_agent
  - question: What is the timing pattern of requests to this VirtueMart installation?
    context: Analyzes attack timing to distinguish automated tools from manual exploitation.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did the source IP attempt to access VirtueMart administrative interfaces?
    context: Identifies attempts to access admin panels following the SQL injection.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        admin_paths:
          http.uri|contains:
            - "/administrator"
            - "/admin"
            - "/wp-admin"
            - "/phpmyadmin"
            - "/mysql"
            - "/backend"
        condition: selection and admin_paths
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: What other database-related files were accessed by the web server process?
    context: Identifies database configuration files or backups that may have been compromised.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        database_files:
          file.name|contains:
            - ".sql"
            - "config"
            - "database"
            - ".db"
            - "mysql"
            - "connection"
        condition: selection and database_files
      fields:
        - file.path
        - file.name
        - Image