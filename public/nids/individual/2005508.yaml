name: ET WEB_SPECIFIC_APPS Virtuemart SQL Injection Attempt -- virtuemart_parser.php category_id DELETE
id: 1223027
description: |
  Detects SQL injection attempts against Virtuemart virtuemart_parser.php containing DELETE statements in the category_id parameter.
  May trigger on legitimate administrative operations or security testing tools.
type: detection
detection_id: 2005508
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the virtuemart_parser.php request?
    context: Reveals the exact DELETE statement and injection technique used against the vulnerable parameter.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Virtuemart application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other HTTP requests preceded this SQL injection attempt?
    context: Identifies reconnaissance or enumeration activity that may have occurred before the attack.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were there other attempts to access Virtuemart administrative or parser files?
    context: Reveals broader targeting of the Virtuemart application beyond the specific vulnerability.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "virtuemart"
            - "parser"
            - "admin"
            - ".php"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful based on HTTP response codes and patterns.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "virtuemart_parser.php"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
  - question: Are other hosts attempting SQL injection against the same Virtuemart application?
    context: Identifies if multiple sources are targeting the same vulnerable web application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "virtuemart_parser.php"
          http.uri|contains: "DELETE"
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: Did this source attempt other SQL injection techniques against web applications?
    context: Reveals broader SQL injection campaign activity beyond the specific Virtuemart vulnerability.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        sql_patterns:
          http.uri|contains:
            - "DELETE"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "UNION"
            - "DROP"
            - "ALTER"
        condition: selection and sql_patterns
      fields:
        - dst_ip
        - http.uri
        - http.method
  - question: What files were accessed on the web server after the SQL injection attempt?
    context: Identifies potential file access or creation resulting from successful database manipulation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there related alerts indicating successful compromise of this web server?
    context: Correlates with other security events that may indicate successful exploitation.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did any web application processes exhibit unusual behavior after this request?
    context: Identifies process execution that may result from successful SQL injection exploitation.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        web_processes:
          Image|contains:
            - "apache"
            - "nginx"
            - "php"
            - "mysql"
            - "httpd"
        condition: selection and web_processes
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - ParentImage