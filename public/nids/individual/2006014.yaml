name: ET WEB_SPECIFIC_APPS The Address Book SQL Injection Attempt -- user.php firstname UPDATE
id: 1220328
description: |
  Detects SQL injection attempts targeting The Address Book application's user.php script through firstname parameter manipulation.
  May trigger on legitimate database administration activities or security testing tools.
type: detection
detection_id: 2006014
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload and injection technique targeting the firstname parameter.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access The Address Book application?
    context: Determines if this represents unauthorized access to the web application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies if this is part of a broader SQL injection attack campaign.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip|expand: '%dst_ip%'\n    http.uri|contains:\n      - \"UPDATE\"\n      - \"INSERT\"\n      - \"DELETE\"\n      - \"SELECT\"\n      - \"UNION\"\n      - \"OR 1=1\"\n      - \"' OR '\"\n      - \"CONCAT\"\n  condition: selection\nfields:\n  - src_ip\n  - http.uri\n  - http.user_agent\n  - http.method\n  \n"
  - question: What other parameters in user.php were targeted for injection?
    context: Reveals the scope of SQL injection testing against the application.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip|expand: '%dst_ip%'\n    http.uri|contains: \"/user.php\"\n  sql_patterns:\n    http.uri|contains:\n      - \"UPDATE\"\n      - \"INSERT\"\n      - \"SELECT\"\n      - \"DELETE\"\n      - \"UNION\"\n      - \"' OR\"\n  condition: selection and sql_patterns\nfields:\n  - src_ip\n  - http.uri\n  - http.user_agent\n  \n"
  - question: Did the web server return error messages indicating successful SQL injection?
    context: Assesses whether the injection attempt revealed database structure or errors.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%dst_ip%'\n    dst_ip|expand: '%src_ip%'\n  error_responses:\n    http.status_code: [500, 400, 403]\n  condition: selection and error_responses\nfields:\n  - http.status_code\n  - http.response.body.length\n  \n"
  - question: What user-agent was used for the SQL injection attempt?
    context: Identifies the tool or browser used to conduct the attack.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    dst_ip|expand: '%dst_ip%'\n    community_id|expand: '%community_id%'\n  condition: selection\nfields:\n  - http.user_agent\n  - http.method\n  - http.uri\n  \n"
  - question: Are other hosts attempting similar SQL injection attacks against web applications?
    context: Determines if this is part of a coordinated attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What other web applications on this server were targeted for SQL injection?
    context: Reveals the breadth of the attack against the web server infrastructure.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    dst_ip|expand: '%dst_ip%'\n  sql_injection:\n    http.uri|contains:\n      - \"UPDATE\"\n      - \"INSERT\"\n      - \"SELECT\"\n      - \"DELETE\"\n      - \"UNION\"\n      - \"' OR '\"\n      - \"1=1\"\n  condition: selection and sql_injection\nfields:\n  - http.uri\n  - http.virtual_host\n  - http.user_agent\n  \n"
  - question: Did any database-related processes show unusual activity after the injection attempt?
    context: Identifies potential impact on the backend database server.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - postgres.exe
          - sqlservr.exe
          - oracle.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Were any files created on the web server following the SQL injection attempt?
    context: Assesses whether the injection led to file creation or web shell deployment.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What was the response size and status code for the SQL injection request?
    context: Indicates whether the injection was successful or blocked by security controls.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.request.body.length