name: ET WEB_SPECIFIC_APPS The Address Book SQL Injection Attempt -- user.php defaultLetter ASCII
id: 1222986
description: |
  Detects SQL injection attempts targeting The Address Book application's user.php page with ASCII function abuse.
  May trigger on legitimate database queries containing ASCII functions or security testing activities.
type: detection
detection_id: 2006043
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the user.php request?
    context: Reveals the exact injection string and ASCII function usage pattern.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access The Address Book application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection attempts occurred from this source IP?
    context: Identifies broader SQL injection scanning or attack patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "DELETE"
            - "UPDATE"
            - "DROP"
        condition: selection
      fields:
        - http.uri
        - http.method
        - dst_ip
        - dst_port
  - question: Were other vulnerable Address Book parameters targeted besides defaultLetter?
    context: Assesses scope of testing against The Address Book application.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains: "user.php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - dst_ip
  - question: What web application processes responded to these SQL injection attempts?
    context: Identifies the specific server handling The Address Book application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Did the application generate any database error responses?
    context: Reveals whether the SQL injection attempts triggered database errors.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          src_ip|expand: '%dst_ip%'
          http.status_code:
            - 500
            - 400
            - 403
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - src_ip
        - dst_ip
  - question: Are other hosts targeting The Address Book application with similar attacks?
    context: Determines if multiple sources are exploiting this vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "user.php"
          http.uri|contains: "defaultLetter"
          http.uri|contains: "SELECT"
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - dst_ip
  - question: What web application files were accessed after the SQL injection attempt?
    context: Identifies potential file access resulting from successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any database backup or configuration files accessed?
    context: Assesses whether the attack progressed to sensitive file access.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.name|contains:
            - ".sql"
            - ".db"
            - ".bak"
            - "config"
            - "database"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did any lateral movement occur from the web server after this attack?
    context: Determines if successful exploitation led to network propagation.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts indicating successful web application compromise?
    context: Correlates with other security events suggesting exploitation success.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip