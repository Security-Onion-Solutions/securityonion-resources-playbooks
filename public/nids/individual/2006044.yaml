name: ET WEB_SPECIFIC_APPS The Address Book SQL Injection Attempt -- user.php defaultLetter UPDATE
id: 1222987
description: |
  Detects SQL injection attempts targeting The Address Book application's user.php file with UPDATE statements in the defaultLetter parameter.
  May trigger on legitimate database administration or security testing activities.
type: detection
detection_id: 2006044
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact SQL payload and injection technique used against the Address Book application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access The Address Book application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled this SQL injection request?
    context: Identifies the web application service processing the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source around the same time?
    context: Identifies additional web application attacks or reconnaissance activity.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any database-related files accessed after this SQL injection attempt?
    context: Assesses whether the injection resulted in unauthorized database file access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts attempting similar SQL injection attacks against web applications?
    context: Determines if this is part of a coordinated web application attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did this source attempt other SQL injection patterns against web applications?
    context: Reveals broader SQL injection attack patterns from the same source.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "DELETE"
            - "DROP"
            - "CREATE"
        condition: selection
      fields:
        - http.uri
        - http.method
        - dst_ip
        - dst_port
  - question: What is the pattern of requests to user.php from this source?
    context: Analyzes the specific targeting of The Address Book application's user management functionality.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains: "user.php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
  - question: Did any lateral movement occur from the web server after this injection attempt?
    context: Determines if successful SQL injection led to further network compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Were any new user accounts or database entries created after this attack?
    context: Assesses whether the SQL injection resulted in unauthorized data modification.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        mysql_commands:
          CommandLine|contains:
            - "CREATE USER"
            - "INSERT INTO"
            - "GRANT"
        web_processes:
          Image|endswith:
            - "mysql.exe"
            - "mysqld.exe"
            - "php.exe"
        condition: selection and (mysql_commands or web_processes)
      fields:
        - CommandLine
        - Image
        - User