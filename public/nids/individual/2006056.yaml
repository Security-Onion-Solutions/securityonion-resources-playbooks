name: ET WEB_SPECIFIC_APPS The Address Book SQL Injection Attempt -- user.php newuserType UPDATE
id: 1206813
description: |
  Detects SQL injection attempts targeting The Address Book application via user.php with UPDATE statements.
  May trigger on legitimate database administration or application debugging activities.
type: detection
detection_id: 2006056
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the exact payload and parameters used in the potential exploit attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access The Address Book application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What web browser or tool was used to send this request?
  context: Identifies whether this originated from a standard browser or automated tool.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        http.uri|contains: user.php
        src_ip|expand: '%src_ip%'
    fields:
    - http.user_agent
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: What other web application attacks originated from this source?
  context: Determines if this is part of broader web application scanning or exploitation.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        rule.category: web-application-attack
        src_ip|expand: '%src_ip%'
    fields:
    - rule.name
    - dst_ip
    - http.uri
    logsource:
      category: alert
- question: Did the web server respond with database error messages?
  context: Indicates whether the SQL injection attempt was successful or generated errors.
  range: +5m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        http.status_code:
        - 500
        - 400
        - 403
        src_ip|expand: '%src_ip%'
    fields:
    - http.status_code
    - http.response.body.length
    - http.uri
    logsource:
      category: network
      service: http
- question: Are other hosts attempting SQL injection against the same application?
  context: Determines scope of potential campaign targeting this web application.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What database-related processes were active on the web server?
  context: Identifies database activity that may correlate with the injection attempt.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        Image|contains:
        - mysql
        - postgres
        - sqlite
        - sqlserver
        host.ip|expand: '%dst_ip%'
    fields:
    - Image
    - CommandLine
    - User
    logsource:
      category: process_creation
- question: Did any authentication bypass or privilege escalation occur on the web server?
  context: Assesses whether the SQL injection led to unauthorized access.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        rule.category:
        - attempted-admin
        - successful-admin
        - policy-violation
    fields:
    - rule.name
    - src_ip
    - alert.severity_label
    logsource:
      category: alert
- question: What files were accessed or modified on the web server after this request?
  context: Identifies potential file system changes resulting from successful exploitation.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        file.name|endswith:
        - .doc
        - .docx
        - .xls
        - .xlsx
        - .pdf
        - .rtf
        - .ppt
        - .pptx
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Were any new user accounts or database entries created?
  context: Determines if the UPDATE statement was used to create unauthorized access.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        CommandLine|contains:
        - CREATE USER
        - INSERT INTO
        - GRANT
        - ALTER USER
        host.ip|expand: '%dst_ip%'
    fields:
    - CommandLine
    - Image
    - User
    logsource:
      category: process_creation