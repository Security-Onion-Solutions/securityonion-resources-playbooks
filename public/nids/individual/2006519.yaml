name: ET WEB_SPECIFIC_APPS PHPAccounts SQL Injection Attempt -- index.php Outgoing_ID DELETE
id: 1220334
description: |
  Detects HTTP requests targeting PHPAccounts index.php with SQL injection patterns containing DELETE statements in the Outgoing_ID parameter.
  May trigger on legitimate database administration through web interfaces or security testing activities.
type: detection
detection_id: 2006519
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the Outgoing_ID parameter?
    context: Reveals the exact DELETE statement and injection technique used in the attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access PHPAccounts or similar web applications?
    context: Determines if HTTP access to this web application is typical for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool was used to send this SQL injection request?
    context: Identifies whether this came from automated tools or manual browser activity.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "index.php"
          http.uri|contains: "Outgoing_ID"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other SQL injection attempts occurred from this source?
    context: Identifies broader SQL injection campaign activity or systematic probing.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "DELETE"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "UNION"
            - "DROP"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.user_agent
  - question: What other web applications on this server received requests from the same source?
    context: Assesses the scope of web application targeting from this IP address.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        filter:
          dst_ip|expand: '%dst_ip%'
        condition: selection and filter
      fields:
        - http.virtual_host
        - http.uri
        - http.method
        - http.status_code
  - question: Did the web server return any error responses to these injection attempts?
    context: Indicates whether the SQL injection was successful or blocked by the application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "Outgoing_ID"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are other hosts targeting the same PHPAccounts application?
    context: Determines if multiple sources are exploiting this vulnerability simultaneously.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "index.php"
          http.uri|contains: "Outgoing_ID"
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What database-related processes were active on the web server during this timeframe?
    context: Identifies database processes that may have processed the malicious SQL commands.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - postgres.exe
          - sqlservr.exe
          - php.exe
          - httpd.exe
          - apache2
          - nginx
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Were any database files accessed or modified after the injection attempt?
    context: Reveals potential data manipulation or extraction following successful SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.name|endswith:
            - ".sql"
            - ".db"
            - ".mdb"
            - ".frm"
            - ".ibd"
            - ".log"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Did any lateral movement occur from the web server after this injection attempt?
    context: Determines if successful exploitation led to further network compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving SQL injection across the organization?
    context: Identifies coordinated SQL injection campaigns targeting multiple applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip