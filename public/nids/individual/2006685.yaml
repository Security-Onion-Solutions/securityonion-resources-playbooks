name: ET WEB_SPECIFIC_APPS Invision Community Blog Mod SQL Injection Attempt
id: 1220838
description: |
  Detects SQL injection attempts targeting Invision Community Blog Mod entry_reply_entry.php with ASCII function calls.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2006685
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full payload and parameters used in the CVE-2006-6369 exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this Invision Community application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted from this source?
    context: Identifies additional exploitation attempts targeting database functions.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "ASCII("
            - "CHAR("
            - "CONCAT("
            - "SUBSTRING("
            - "UNION SELECT"
            - "ORDER BY"
        condition: selection
      fields:
        - http.uri
        - http.method
        - dst_ip
        - dst_port
  - question: What web application files were accessed after the SQL injection attempt?
    context: Reveals additional application components that may have been targeted.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: ".php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: Are other hosts attempting SQL injection against the same web server?
    context: Determines if this is part of a coordinated attack against the application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What database-related error responses were returned by the web server?
    context: Identifies information disclosure that may assist further exploitation.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.status_code:
            - 500
            - 502
            - 503
        error_patterns:
          http.response.body|contains:
            - "mysql"
            - "sql"
            - "database"
            - "error"
            - "warning"
        condition: selection or error_patterns
      fields:
        - src_ip
        - http.status_code
        - http.response.body
  - question: What user-agent patterns are associated with these SQL injection attempts?
    context: Reveals tools or scripts used for automated vulnerability scanning.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "eid="
            - "ASCII("
            - "SELECT"
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - dst_ip
  - question: Are there related alerts indicating successful web application compromise?
    context: Identifies follow-up activities suggesting successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the timing pattern of requests to this vulnerable endpoint?
    context: Distinguishes between automated scanning and targeted manual exploitation.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description