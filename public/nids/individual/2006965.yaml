name: ET WEB_SPECIFIC_APPS dev4u CMS SQL Injection Attempt -- index.php go_target INSERT
id: 1246606
description: |
  Detects SQL injection attempts targeting dev4u CMS through the go_target parameter in index.php.
  May trigger on legitimate database operations or security testing activities.
type: detection
detection_id: 2006965
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the full payload and injection technique used against the dev4u CMS.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access this web application?
  context: Determines if HTTP access to this web server represents normal usage patterns.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled this SQL injection request?
  context: Identifies the specific web application service processing the malicious request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id|expand: '%community_id%'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests were made to this web server from the same source?
  context: Reveals additional exploitation attempts or reconnaissance activity.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        dst_port|expand: '%dst_port%'
        src_ip|expand: '%src_ip%'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: What files were accessed by the web server process during this timeframe?
  context: Identifies database files or configuration files that may have been compromised.
  range: +/-30m
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        ProcessGuid|expand: '%ProcessGuid%'
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - User
- question: Are other hosts attempting similar SQL injection attacks against web applications?
  context: Determines if this is part of a broader web application attack campaign.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What database-related processes were executed after the SQL injection attempt?
  context: Identifies database operations that may indicate successful exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        Image|contains:
        - mysql.exe
        - mysqld.exe
        - postgres.exe
        - sqlservr.exe
        - oracle.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: Did this host perform any lateral movement attempts after the SQL injection?
  context: Assesses whether successful exploitation led to further network compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%private_ip%'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: What other SQL injection patterns were attempted against this web server?
  context: Reveals the scope of SQL injection techniques used in this attack.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
        dst_port|expand: '%dst_port%'
      sql_patterns:
        http.uri|contains:
          - "INSERT"
          - "SELECT"
          - "UNION"
          - "DROP"
          - "UPDATE"
          - "DELETE"
          - "CREATE"
          - "ALTER"
      condition: selection and sql_patterns
    fields:
      - src_ip
      - http.method
      - http.uri
      - http.user_agent
- question: Were any script files created on the web server after the SQL injection attempt?
  context: Identifies web shells or backdoors that may have been uploaded through SQL injection.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
