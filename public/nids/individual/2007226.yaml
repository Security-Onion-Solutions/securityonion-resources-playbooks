name: ET WEB_SPECIFIC_APPS ClickTech Click Blog SQL Injection Attempt -- displayCalendar.asp date DELETE
id: 1201961
description: |
  Detects SQL injection attempts against ClickTech Click Blog's displayCalendar.asp script using DELETE statements in the date parameter.
  May trigger on legitimate database administration tools or security testing activities.
type: detection
detection_id: 2007226
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the displayCalendar.asp request?
    context: Reveals the exact DELETE statement and injection technique used against the vulnerable parameter.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access ClickTech Click Blog applications?
    context: Determines if HTTP access to this web application represents normal usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection attempts occurred against this web server?
    context: Identifies broader attack patterns targeting database vulnerabilities.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "UNION"
            - "DROP"
            - "'"
            - "OR 1=1"
            - "AND 1=1"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: What web application processes are running on the targeted server?
    context: Identifies the web server software handling the SQL injection attempts.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any database files modified after the SQL injection attempt?
    context: Assesses whether the injection resulted in unauthorized database changes.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.name|endswith:
            - ".mdb"
            - ".accdb"
            - ".sql"
            - ".db"
            - ".sqlite"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Are other hosts attempting SQL injection against web applications?
    context: Determines if this is part of a coordinated attack against multiple targets.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other web applications are being targeted from the same source?
    context: Reveals the scope of web application attack attempts from this source.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - ".asp"
            - ".php"
            - ".jsp"
            - ".cgi"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.method
  - question: Did any script execution occur on the web server after the injection attempt?
    context: Identifies potential web shell deployment or command execution following SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there related alerts involving the same source or destination?
    context: Correlates this SQL injection attempt with other security events.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What authentication attempts occurred against this web application?
    context: Determines if SQL injection is combined with authentication bypass attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
          rule.category|contains:
            - "POLICY"
            - "ATTACK"
          rule.name|contains:
            - "authentication"
            - "login"
            - "credential"
            - "brute"
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip
        - alert.severity_label