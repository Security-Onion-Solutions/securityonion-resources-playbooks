name: ET WEB_SPECIFIC_APPS Doug Luxem Liberum Help Desk SQL Injection Attempt
id: 1217401
description: |
  Detects SQL injection attempts targeting the forgotpass.asp page in Doug Luxem Liberum Help Desk application.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2007307
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the forgotpass.asp request?
    context: Reveals the exact UNION SELECT statement used in the exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Liberum Help Desk application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to the Help Desk application around this time?
    context: Identifies additional exploitation attempts or reconnaissance activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains: "forgotpass.asp"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What other SQL injection patterns were attempted from this source?
    context: Reveals the scope of SQL injection testing or exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        sql_patterns:
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "OR 1=1"
            - "AND 1=1"
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.method
        - dst_ip
        - dst_port
  - question: Are other hosts attempting SQL injection against the same application?
    context: Determines if multiple sources are targeting the Help Desk application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "forgotpass.asp"
        sql_injection:
          http.uri|contains:
            - "UNION"
            - "SELECT"
        condition: selection and sql_injection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What was the web server's response to the SQL injection attempt?
    context: Indicates whether the injection was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri
  - question: Did the attacker establish any other connections to web services on this network?
    context: Identifies broader web application reconnaissance or attack activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        web_ports:
          dst_port:
            - 80
            - 443
            - 8080
            - 8443
        filter:
          dst_ip|expand: '%dst_ip%'
        condition: selection and web_ports and not filter
      fields:
        - dst_ip
        - dst_port
        - http.virtual_host
        - http.uri
        - http.user_agent
  - question: Are there related alerts indicating successful database compromise?
    context: Determines if the SQL injection attempt was part of a successful breach.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What user agent was used in the SQL injection attempt?
    context: Reveals the tool or browser used for the attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - src_ip
        - dst_ip
  - question: Were any administrative or sensitive pages accessed after the injection attempt?
    context: Identifies potential privilege escalation or data access following exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        admin_paths:
          http.uri|contains:
            - "admin"
            - "manager"
            - "config"
            - "setup"
            - "install"
            - "backup"
            - "database"
        condition: selection and admin_paths
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: Did any authentication bypass attempts occur from this source?
    context: Reveals attempts to circumvent login mechanisms following SQL injection.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        auth_bypass:
          http.uri|contains:
            - "login"
            - "auth"
            - "signin"
            - "logon"
        condition: selection and auth_bypass
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.request.body.length