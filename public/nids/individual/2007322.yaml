name: ET WEB_SPECIFIC_APPS Doug Luxem Liberum Help Desk SQL Injection Attempt
id: 1221156
description: |
  Detects SQL injection attempts targeting Doug Luxem Liberum Help Desk's update.asp with ASCII-based SQL injection patterns.
  May trigger on legitimate database queries containing ASCII functions or security testing tools.
type: detection
detection_id: 2007322
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the HTTP request to update.asp?
    context: Reveals the exact ASCII-based SQL injection pattern used against the Liberum Help Desk application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive requests to the Liberum Help Desk application?
    context: Determines if access to this specific web application is typical for this environment.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process handled the SQL injection request?
    context: Identifies the specific web server or application instance processing the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were there additional HTTP requests from the same source targeting other web applications?
    context: Assesses whether this is part of broader web application reconnaissance or attack.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    dst_ip|expand: '%dst_ip%'\n    http.uri|contains:\n      - \".asp\"\n      - \".php\" \n      - \".jsp\"\n      - \"admin\"\n      - \"login\"\n  filter:\n    http.uri|contains: \"update.asp\"\n  condition: selection and not filter\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.status_code\n"
  - question: What database-related files were accessed after the SQL injection attempt?
    context: Identifies potential database file access or backup creation following the attack.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other web servers receiving similar SQL injection attempts?
    context: Determines if this represents a coordinated campaign targeting multiple systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did the web server establish any outbound database connections after the injection attempt?
    context: Assesses whether the SQL injection may have triggered database connectivity changes.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_port:
            - 1433  # SQL Server
            - 3306  # MySQL
            - 5432  # PostgreSQL
            - 1521  # Oracle
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: Were there other SQL injection patterns detected from the same source?
    context: Reveals broader SQL injection attack patterns and techniques used by the same attacker.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "web-application-attack"
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - dst_ip
        - http.uri
        - alert.severity_label
  - question: What was the response pattern from the web server to these injection attempts?
    context: Determines if the application is vulnerable based on response codes and timing.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "update.asp"
        condition: selection
      fields:
        - http.status_code
        - http.method
        - http.response.body.length
        - http.uri