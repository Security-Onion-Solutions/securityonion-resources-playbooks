name: ET WEB_SPECIFIC_APPS Doug Luxem Liberum Help Desk SQL Injection Attempt
id: 1206949
description: |
  Detects SQL injection attempts targeting the Doug Luxem Liberum Help Desk application via details.asp.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2007333
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the specific SQL payload and injection technique used against details.asp.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Liberum Help Desk application?
    context: Determines if this represents unusual access to the vulnerable application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies additional exploitation attempts targeting the same application.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "details.asp"
        sql_patterns:
          http.uri|contains:
            - "DELETE"
            - "INSERT"
            - "UPDATE"
            - "SELECT"
            - "UNION"
            - "DROP"
            - "ALTER"
        condition: selection and sql_patterns
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What web application process handled the malicious request?
    context: Identifies the web server or application service processing the SQL injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were there successful authentication events before this SQL injection attempt?
    context: Determines if the attacker had valid credentials or was attempting unauthenticated access.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        success_indicators:
          http.status_code:
            - 200
            - 302
        condition: selection and success_indicators
      fields:
        - http.uri
        - http.status_code
        - http.user_agent
  - question: What other external connections occurred from this web server?
    context: Identifies potential data exfiltration or additional compromise indicators.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting SQL injection against web applications?
    context: Determines if this is part of a broader SQL injection campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What database-related processes were executed after the injection attempt?
    context: Identifies database activity that may indicate successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        db_processes:
          Image|contains:
            - "sqlcmd"
            - "mysql"
            - "psql"
            - "oracle"
            - "osql"
            - "isql"
        condition: selection and db_processes
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Were any database files accessed or modified after the SQL injection attempt?
    context: Identifies potential database tampering or data access following exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        db_files:
          file.name|endswith:
            - ".mdb"
            - ".accdb"
            - ".db"
            - ".sqlite"
            - ".sql"
            - ".bak"
        condition: selection and db_files
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did any lateral movement occur from the web server after the injection attempt?
    context: Assesses whether successful exploitation led to further network compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What error responses did the web application return to injection attempts?
    context: Reveals application behavior and potential information disclosure.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "details.asp"
        error_codes:
          http.status_code:
            - 400
            - 500
            - 503
            - 404
        condition: selection and error_codes
      fields:
        - http.status_code
        - http.uri
        - http.response.body.length
  - question: Are there other vulnerabilities being exploited against this web server?
    context: Identifies additional attack vectors targeting the same infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        web_attacks:
          rule.category|contains:
            - "web-application-attack"
            - "attempted-user"
            - "attempted-admin"
        filter:
          document_id|expand: '%document_id%'
        condition: selection and web_attacks and not filter
      fields:
        - rule.name
        - src_ip
        - alert.severity_label