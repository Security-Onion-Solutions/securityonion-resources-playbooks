name: ET WEB_SPECIFIC_APPS 20/20 Auto Gallery SQL Injection Attempt -- vehiclelistings.asp year INSERT
id: 1209714
description: |
  Detects SQL injection attempts targeting the 20/20 Auto Gallery application's vehiclelistings.asp page.
  May trigger on legitimate database operations or security testing of auto gallery applications.
type: detection
detection_id: 2007548
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the vehiclelistings.asp request?
    context: Reveals the specific INSERT statement and parameters used in the injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access auto gallery or vehicle listing applications?
    context: Determines if HTTP access to vehicle listing applications is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled the SQL injection request?
    context: Identifies the web application server that processed the malicious vehiclelistings.asp request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source after the SQL injection attempt?
    context: Identifies follow-up requests that may indicate successful exploitation or continued probing.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were other vehicle listing or auto gallery applications targeted from the same source?
    context: Reveals broader targeting of automotive web applications beyond this specific instance.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "vehicle"
            - "auto"
            - "car"
            - "dealer"
            - "inventory"
            - "listing"
        condition: selection
      fields:
        - http.uri
        - http.method
        - dst_ip
        - http.user_agent
  - question: Are other hosts attempting SQL injection against the same vehiclelistings.asp application?
    context: Determines if multiple sources are targeting the same vulnerable auto gallery application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What database-related files were accessed on the web server after the injection attempt?
    context: Identifies database files that may have been affected by the SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.name|contains:
            - ".mdb"
            - ".accdb"
            - ".sql"
            - ".db"
            - ".sqlite"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did any lateral movement occur from the web server host after the SQL injection?
    context: Assesses whether successful exploitation led to internal network reconnaissance or access.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Were similar SQL injection patterns attempted against other web applications?
    context: Identifies coordinated SQL injection campaigns targeting multiple web applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UNION"
            - "DROP"
            - "UPDATE"
        asp_files:
          http.uri|contains: ".asp"
        condition: selection and asp_files
      fields:
        - http.uri
        - dst_ip
        - http.user_agent
        - http.method
  - question: Are there related web application attack alerts from the same source?
    context: Reveals broader web application attack patterns beyond this specific SQL injection.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip