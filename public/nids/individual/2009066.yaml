name: ET WEB_SPECIFIC_APPS PHP-Daily delete.php id Parameter SQL Injection
id: 1201983
description: |
  Detects SQL injection attempts targeting the id parameter in PHP-Daily's delete.php script using UNION SELECT queries.
  May trigger on legitimate database queries or security testing tools scanning for SQL injection vulnerabilities.
type: detection
detection_id: 2009066
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the delete.php request?
    context: Reveals the exact UNION SELECT statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the PHP-Daily application?
    context: Determines if this represents normal application usage or external targeting.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to delete.php or similar PHP scripts?
    context: Identifies broader SQL injection attack patterns against the web application.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "delete.php"
            - ".php?id="
            - "mode=postit"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: What web application process handled the SQL injection request?
    context: Identifies the specific web server or PHP process that processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any database files modified after the SQL injection attempt?
    context: Assesses whether the injection successfully altered database contents.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.name|endswith:
            - ".db"
            - ".sql"
            - ".mdb"
            - ".sqlite"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Did any processes attempt to access sensitive system files after the injection?
    context: Identifies potential file system access through SQL injection file operations.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.path|contains:
            - "/etc/passwd"
            - "/etc/shadow"
            - "web.config"
            - "config.php"
            - "database.php"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Are other hosts targeting the same PHP-Daily application with similar injection attempts?
    context: Determines scope of coordinated SQL injection campaign against this application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other SQL injection patterns were attempted against this web server?
    context: Reveals broader SQL injection attack methodology and technique variations.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "' OR "
            - "1=1"
            - "DROP TABLE"
            - "INSERT INTO"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: Did the web server establish any new outbound database connections after the injection?
    context: Identifies potential database server compromise or lateral movement attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there related alerts indicating successful database compromise?
    context: Correlates with other security events that may indicate successful SQL injection.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip