name: ET WEB_SPECIFIC_APPS CMScontrol 7.x SQL Injection Vulnerability
id: 1246041
description: |
  Detects SQL injection attempts targeting CVE-2009-3326 in CMScontrol 7.x through the id_menu parameter.
  May trigger on legitimate database administration or security testing activities.
type: detection
detection_id: 2009977
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the specific payload and injection technique used against the CMScontrol application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive requests to index.php with parameters?
    context: Determines if CMScontrol usage patterns match normal application access.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled this SQL injection request?
    context: Identifies the specific web application and configuration processing the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were there follow-up requests from the same source after the SQL injection attempt?
    context: Assesses whether the injection was successful and led to further exploitation attempts.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "index.php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - http.status_code
  - question: Did the web server establish any external database connections after this request?
    context: Identifies potential data exfiltration or external database access attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What database-related files were accessed by the web server process?
    context: Reveals potential database file access or configuration changes following the injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.name|contains:
            - ".db"
            - ".sql"
            - ".mdb"
            - "database"
            - "config"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
  - question: Are other CMScontrol installations receiving similar SQL injection attempts?
    context: Determines if this is part of a broader campaign targeting CMScontrol vulnerabilities.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains:
            - "id_menu="
            - "index.php"
        sql_keywords:
          http.uri|contains:
            - "DELETE"
            - "FROM"
            - "SELECT"
            - "UNION"
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and sql_keywords and not filter
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
  - question: What is the pattern of requests from this source IP to web applications?
    context: Analyzes the broader attack pattern and potential automated scanning behavior.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - ".php"
            - ".asp"
            - ".jsp"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - dst_ip
  - question: Did any processes execute database commands after this web request?
    context: Identifies potential command execution or database manipulation following the injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - "mysql"
            - "sqlite"
            - "psql"
            - "sqlcmd"
            - "DELETE"
            - "DROP"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
  - question: Are there alerts for successful SQL injection or data extraction from this server?
    context: Correlates with other detection rules that may indicate successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
