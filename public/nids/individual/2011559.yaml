name: ET WEB_SPECIFIC_APPS Joomla com_zoomportfolio component UPDATE SET SQL Injection Attempt
id: 1208887
description: |
  Detects SQL injection attempts targeting the Joomla com_zoomportfolio component via UPDATE SET queries.
  May trigger on legitimate database maintenance activities or security testing.
type: detection
detection_id: 2011559
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the full payload and parameters used in the com_zoomportfolio exploitation attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access this Joomla application?
  context: Determines if HTTP requests to this server represent typical user behavior.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What other Joomla component requests occurred from this source?
  context: Identifies broader enumeration or exploitation attempts against the Joomla installation.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - option=com_
        - index.php?
        src_ip|expand: '%src_ip%'
    fields:
    - http.uri
    - http.method
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Were there additional SQL injection patterns in requests from this source?
  context: Reveals systematic SQL injection testing beyond the specific com_zoomportfolio vulnerability.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - UPDATE
        - INSERT
        - DELETE
        - SELECT
        - UNION
        - OR 1=
        - ''' OR '''
        src_ip|expand: '%src_ip%'
    fields:
    - http.uri
    - http.method
    - dst_ip
    logsource:
      category: network
      service: http
- question: What user-agent was used for the com_zoomportfolio exploitation attempt?
  context: Identifies automated tools or specific attack frameworks targeting this vulnerability.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - option=com_zoomportfolio
        src_ip|expand: '%src_ip%'
    fields:
    - http.user_agent
    - http.method
    logsource:
      category: network
      service: http
- question: Are other hosts attempting to exploit the same Joomla component?
  context: Determines if this represents a coordinated campaign targeting com_zoomportfolio vulnerabilities.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip|expand: '%src_ip%'
      selection:
        http.uri|contains:
        - option=com_zoomportfolio
        - UPDATE
        - SET
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What web application processes are running on the targeted server?
  context: Identifies the specific Joomla installation and related services that may be vulnerable.
  range: +/-30m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id|expand: '%community_id%'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Were any files created on the web server after the SQL injection attempt?
  context: Assesses whether the exploitation resulted in file uploads or shell creation.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did any database-related processes show unusual activity after the request?
  context: Identifies potential database compromise or data extraction attempts.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        Image|contains:
        - mysql
        - mysqld
        - mariadb
        - postgres
        - sqlservr
        host.ip|expand: '%dst_ip%'
    fields:
    - Image
    - CommandLine
    - User
    logsource:
      category: process_creation
- question: Are there related web application attack alerts from the same source?
  context: Reveals broader attack patterns beyond this specific SQL injection attempt.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip|expand: '%related_ip%'
      filter:
        document_id|expand: '%document_id%'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What other external connections occurred from the web server after the attack?
  context: Identifies potential data exfiltration or reverse shell connections following successful exploitation.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%src_ip%'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip|expand: '%public_ip%'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description