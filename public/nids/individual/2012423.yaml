name: ET WEB_SPECIFIC_APPS SOPHIA CMS SQL Injection Attempt -- dsp_page.cfm pageid DELETE
id: 1206847
description: |
  Detects SQL injection attempts targeting SOPHIA CMS dsp_page.cfm endpoint with DELETE statements in pageid parameter.
  May trigger on legitimate database administration through the CMS or security testing activities.
type: detection
detection_id: 2012423
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the dsp_page.cfm request?
  context: Reveals the exact DELETE statement and SQL syntax used in the injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access SOPHIA CMS applications?
  context: Determines if HTTP access to CMS endpoints represents normal application usage.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What application or process handled the request to dsp_page.cfm?
  context: Identifies the web server or CMS process that received the SQL injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id|expand: '%community_id%'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests occurred from the same source during this timeframe?
  context: Reveals additional web application testing or attack patterns beyond the SQL injection.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip|expand: '%src_ip%'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were there other SQL injection attempts against different CMS endpoints?
  context: Identifies broader SQL injection scanning or exploitation attempts.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - SELECT
        - DELETE
        - INSERT
        - UPDATE
        - UNION
        - DROP
        src_ip|expand: '%src_ip%'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What other external connections occurred from this host?
  context: Identifies additional external communications that may indicate data exfiltration.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%src_ip%'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip|expand: '%public_ip%'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts receiving similar SQL injection attempts?
  context: Determines if this is part of a coordinated campaign targeting SOPHIA CMS installations.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      filter:
        src_ip|expand: '%src_ip%'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Were any database-related files accessed after the SQL injection attempt?
  context: Identifies potential database file access or backup creation following the attack.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.name|contains:
        - .sql
        - .db
        - .mdb
        - .bak
        - database
        host.ip|expand: '%src_ip%'
    fields:
    - file.path
    - file.name
    - Image
    - User
    logsource:
      category: file_event
- question: Did any lateral movement occur from this host?
  context: Assesses whether successful SQL injection led to further network compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%private_ip%'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Are there related alerts involving the same source IP across the organization?
  context: Provides broader context of attack patterns and campaign scope.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip|expand: '%related_ip%'
      filter:
        document_id|expand: '%document_id%'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip