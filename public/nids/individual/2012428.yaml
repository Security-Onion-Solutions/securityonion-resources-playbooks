name: ET WEB_SPECIFIC_APPS WordPress XCloner Plugin index2.php option Parameter Cross Site Scripting Attempt
id: 1220339
description: |
  Detects cross-site scripting attempts targeting the WordPress XCloner Plugin's index2.php file through the option parameter.
  May trigger on legitimate administrative access or security testing of WordPress installations.
type: detection
detection_id: 2012428
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete XSS payload in the HTTP request to the XCloner plugin?
  context: Reveals the specific cross-site scripting attempt targeting the WordPress plugin.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access WordPress administrative interfaces?
  context: Determines if HTTP access to WordPress admin areas is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What web browser or application made the request containing the XSS attempt?
  context: Identifies the client application that submitted the malicious request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id|expand: '%community_id%'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests occurred from this source around the same time?
  context: Identifies additional web application attacks or reconnaissance activity.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%src_ip%'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip|expand: '%public_ip%'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts attempting similar XSS attacks against WordPress plugins?
  context: Determines if this is part of a coordinated campaign against WordPress installations.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      filter:
        src_ip|expand: '%src_ip%'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What other WordPress-related alerts occurred during this timeframe?
  context: Identifies related attacks against WordPress installations across the organization.
  range: +/-6h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: Did the source IP attempt to access other WordPress plugin directories?
  context: Reveals broader WordPress plugin enumeration or exploitation attempts.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - /wp-content/plugins/
        - /wp-admin/
        - /wp-includes/
        src_ip|expand: '%src_ip%'
    fields:
    - http.uri
    - http.method
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were any files uploaded or modified on the WordPress server after this request?
  context: Assesses whether the XSS attempt led to file system changes or backdoor installation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did this source attempt authentication against WordPress login pages?
  context: Identifies attempts to gain administrative access to WordPress installations.
  range: +/-4h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.method: POST
        http.uri|contains:
        - wp-login.php
        - wp-admin
        src_ip|expand: '%src_ip%'
    fields:
    - http.uri
    - http.status_code
    - http.request.body.length
    logsource:
      category: network
      service: http
- question: Are there other alerts involving the same source IP across different services?
  context: Reveals broader attack patterns or reconnaissance from the same source.
  range: +/-12h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip|expand: '%related_ip%'
      filter:
        document_id|expand: '%document_id%'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip