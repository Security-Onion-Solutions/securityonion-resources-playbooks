name: ET WEB_SPECIFIC_APPS Flash Gallery wordpress plugin folder.php type Parameter Cross Site Scripting Attempt
id: 1209325
description: |
  Detects XSS attempts targeting the Flash Gallery WordPress plugin through the type parameter in folder.php.
  May trigger on legitimate plugin usage or security scanning of WordPress installations.
type: detection
detection_id: 2012476
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete XSS payload in the Flash Gallery plugin request?
    context: Reveals the specific cross-site scripting attempt and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress plugin directories?
    context: Determines if WordPress plugin access represents normal administrative activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What user-agent submitted the request containing the XSS payload?
    context: Identifies the browser or tool used for the cross-site scripting attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "/wp-content/plugins/1-flash-gallery/folder.php"
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - http.method
  - question: Are there other XSS attempts targeting WordPress plugins from this source?
    context: Identifies broader WordPress exploitation attempts or plugin vulnerability scanning.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains: "/wp-content/plugins/"
        xss_patterns:
          http.uri|contains:
            - "script"
            - "onmouse"
            - "onclick"
            - "onload"
            - "javascript"
        condition: selection and xss_patterns
      fields:
        - http.uri
        - dst_ip
        - http.method
  - question: What other external connections occurred from this host?
    context: Assesses whether the WordPress server established outbound connections after the XSS attempt.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same WordPress infrastructure?
    context: Determines scope of potential WordPress exploitation campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What process handled the HTTP request to the WordPress plugin?
    context: Identifies the web server process that processed the XSS attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any files created in WordPress directories after this request?
    context: Detects potential webshell uploads or malicious file creation following XSS.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.path|contains:
            - "/wp-content/"
            - "/wp-admin/"
            - "/wp-includes/"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Are there related WordPress exploitation alerts across the organization?
    context: Identifies coordinated attacks against WordPress installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did this source attempt to access WordPress admin interfaces?
    context: Reveals attempts to access administrative functions after XSS injection.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "/wp-admin/"
            - "/wp-login.php"
            - "/xmlrpc.php"
        condition: selection
      fields:
        - http.uri
        - dst_ip
        - http.method
        - http.status_code
  - question: What was the timing pattern of requests to this WordPress plugin?
    context: Analyzes request frequency to distinguish between automated scanning and targeted exploitation.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description