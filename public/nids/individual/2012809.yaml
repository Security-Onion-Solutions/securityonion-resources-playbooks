name: ET WEB_SPECIFIC_APPS WordPress DB XML dump successful leakage
id: 1223058
description: |
  Detects successful WordPress XML export file downloads, indicating potential database content leakage.
  May trigger on legitimate WordPress site backups or migrations by authorized administrators.
type: detection
detection_id: 2012809
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the WordPress XML export header?
    context: Reveals the full response that indicates successful WordPress database export access.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress administrative functions on this server?
    context: Determines if WordPress export access represents normal administrative activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What WordPress administrative URLs were accessed before the XML export?
    context: Identifies the sequence of requests that led to the database export.
    range: -30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    dst_ip|expand: '%dst_ip%'\n    http.uri|contains:\n      - wp-admin\n      - wp-login\n      - export.php\n      - admin.php\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.status_code\n  - http.user_agent\n  \n"
  - question: What other sensitive WordPress files were requested from this IP address?
    context: Assesses whether this is part of broader WordPress reconnaissance or data extraction.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    http.uri|contains:\n      - wp-config\n      - wp-content/uploads\n      - wp-includes\n      - readme.html\n      - license.txt\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.status_code\n  - dst_ip\n  \n"
  - question: Are other hosts attempting to access WordPress export functionality?
    context: Determines if this represents coordinated WordPress database extraction attempts.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip|expand: '%dst_ip%'\n    http.uri|contains:\n      - export.php\n      - wp-admin/export\n  filter:\n    src_ip|expand: '%src_ip%'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - http.method\n  - http.uri\n  - http.status_code\n  - http.user_agent\n  \n"
  - question: What user authentication activity occurred before the XML export?
    context: Identifies whether legitimate credentials were used or if unauthorized access occurred.
    range: -1h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    dst_ip|expand: '%dst_ip%'\n    http.uri|contains:\n      - wp-login\n      - xmlrpc.php\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.status_code\n  - http.request.body.length\n  - http.user_agent\n  \n"
  - question: What is the size and pattern of data transferred during the XML export?
    context: Assesses the volume of WordPress database content that was successfully extracted.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    dst_ip|expand: '%dst_ip%'\n    http.content_type|contains: text/plain\n  condition: selection\nfields:\n  - http.response.body.length\n  - http.status_code\n  - http.method\n  - http.uri\n  \n"
  - question: Did this IP address access multiple WordPress sites with similar patterns?
    context: Identifies potential automated WordPress database extraction across multiple targets.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    http.uri|contains:\n      - wp-admin\n      - export.php\n  filter:\n    dst_ip|expand: '%dst_ip%'\n  condition: selection and not filter\nfields:\n  - dst_ip\n  - http.method\n  - http.uri\n  - http.status_code\n  - http.virtual_host\n  \n"
  - question: Were there any WordPress plugin vulnerabilities exploited before the export?
    context: Determines if plugin exploitation provided the access path to database export functionality.
    range: -2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    dst_ip|expand: '%dst_ip%'\n    http.uri|contains:\n      - wp-content/plugins\n      - wp-content/themes\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.status_code\n  - http.request.body.length\n  - http.user_agent\n  \n"
  - question: Are there related WordPress security alerts from this source IP?
    context: Correlates with other WordPress-targeted security events to assess campaign scope.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip