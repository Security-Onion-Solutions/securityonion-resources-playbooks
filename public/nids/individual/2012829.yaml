name: ET WEB_SPECIFIC_APPS Joomla Component com_hello SELECT FROM SQL Injection Attempt
id: 1222090
description: |
  Detects SQL injection attempts targeting the Joomla com_hello component through GET requests containing SELECT FROM keywords.
  May trigger on legitimate database queries or security testing against Joomla applications.
type: detection
detection_id: 2012829
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the com_hello request?
    context: Reveals the specific injection attempt targeting the Joomla component vulnerability.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this Joomla application?
    context: Determines if this represents unusual access patterns to the web application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What process or service handled the malicious com_hello request?
    context: Identifies the web server or application processing the SQL injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source IP around the same time?
    context: Identifies additional web application attacks or reconnaissance attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were any suspicious files created on the web server after this request?
    context: Assesses whether the SQL injection led to file uploads or webshell deployment.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the web server establish any new external connections after the injection attempt?
    context: Identifies potential data exfiltration or command and control communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other Joomla sites receiving similar com_hello injection attempts?
    context: Determines if this is part of a broader campaign targeting Joomla installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What database-related processes were active during this timeframe?
    context: Identifies database activity that may indicate successful SQL injection.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - postgres.exe
          - sqlservr.exe
          - php.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Did this source IP attempt other SQL injection patterns against web applications?
    context: Reveals broader web application attack patterns from the same source.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "CREATE"
            - "ALTER"
        condition: selection
      fields:
        - dst_ip
        - http.method
        - http.uri
        - http.virtual_host
        - http.status_code
  - question: What was the pattern of database errors or responses following the injection attempt?
    context: Analyzes server responses that may indicate successful or failed injection attempts.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.status_code:
            - 200
            - 500
            - 503
        condition: selection
      fields:
        - http.status_code
        - http.uri
        - http.request.body.length
        - http.response.body.length