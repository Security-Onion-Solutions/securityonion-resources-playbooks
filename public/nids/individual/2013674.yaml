name: ET WEB_SPECIFIC_APPS WordPress Tune Library Plugin letter parameter DELETE FROM SQL Injection Attempt
id: 1209233
description: |
  Detects GET requests to WordPress Tune Library Plugin with SQL injection patterns in the letter parameter.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2013674
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the letter parameter?
  context: Reveals the specific injection attempt targeting the WordPress Tune Library Plugin.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access WordPress administrative interfaces?
  context: Determines if this represents typical WordPress management activity.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What other requests to WordPress admin or plugin endpoints occurred from this source?
  context: Identifies broader WordPress enumeration or exploitation attempts.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - /wp-admin/
        - /wp-content/plugins/
        - wp-login.php
        - .php?
        src_ip|expand: '%src_ip%'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - dst_ip
    logsource:
      category: network
      service: http
- question: What other external connections occurred from this host?
  context: Identifies additional attack infrastructure or data movement.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%src_ip%'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip|expand: '%public_ip%'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts being targeted with similar WordPress plugin exploitation attempts?
  context: Determines scope of WordPress-focused attack campaign.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What web application process handled this SQL injection attempt?
  context: Identifies the specific WordPress instance that processed the malicious request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id|expand: '%community_id%'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Were any database-related files accessed after this SQL injection attempt?
  context: Reveals potential database compromise or data extraction.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.name|contains:
        - .sql
        - .db
        - .sqlite
        - database
        - backup
        - dump
        host.ip|expand: '%dst_ip%'
    fields:
    - file.path
    - file.name
    - Image
    - User
    logsource:
      category: file_event
- question: Did this source attempt SQL injection against other web applications?
  context: Identifies broader SQL injection campaign beyond WordPress targets.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        dst_ip|expand: '%dst_ip%'
      selection:
        http.uri|contains:
        - DELETE
        - INSERT
        - UPDATE
        - SELECT
        - UNION
        - DROP
        - CREATE
        src_ip|expand: '%src_ip%'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - dst_ip
    logsource:
      category: network
      service: http
- question: What is the pattern of requests from this source IP?
  context: Analyzes attack methodology and timing patterns.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%related_ip%'
        dst_ip|expand: '%related_ip%'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: Were any PHP or web-related files created on the target server?
  context: Identifies potential web shell installation or file uploads.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.name|endswith:
        - .php
        - .jsp
        - .asp
        - .aspx
        host.ip|expand: '%dst_ip%'
    fields:
    - file.path
    - file.name
    - Image
    - ProcessGuid
    logsource:
      category: file_event
- question: Are there related alerts involving the same source IP or WordPress targets?
  context: Correlates with other security events in the attack timeline.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip|expand: '%related_ip%'
      filter:
        document_id|expand: '%document_id%'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip