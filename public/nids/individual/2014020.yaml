name: ET WEB_SERVER Wordpress Login Bruteforcing Detected
id: 1209073
description: |
  Detects multiple WordPress login attempts from the same source IP within a short timeframe.
  May indicate automated brute force attacks or legitimate users with password difficulties.
type: detection
detection_id: 2014020
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What were the complete POST requests to wp-login.php from this source?
    context: Reveals the exact login attempts and patterns in the brute force activity.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this source IP normally access WordPress login pages on these servers?
    context: Determines if this represents a change from normal access patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other external connections occurred from the WordPress servers during this activity?
    context: Identifies potential data exfiltration or additional attack vectors.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other WordPress sites receiving login attempts from the same source?
    context: Determines the scope of the brute force campaign across multiple targets.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What usernames were attempted in the WordPress login requests?
    context: Reveals targeted accounts and common username patterns in the attack.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.method: "POST"
          http.uri|contains: "/wp-login.php"
        condition: selection
      fields:
        - http.request_body
        - http.uri
        - http.user_agent
  - question: Did any WordPress login attempts from this source succeed?
    context: Determines if the brute force attack achieved unauthorized access.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains: "/wp-admin"
          http.status_code: [200, 302]
        condition: selection
      fields:
        - http.uri
        - http.status_code
        - http.user_agent
  - question: What other web applications are being targeted by this source IP?
    context: Identifies broader attack patterns beyond WordPress targeting.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.method: "POST"
        login_paths:
          http.uri|contains:
            - "/login"
            - "/admin"
            - "/wp-admin"
            - "/administrator"
        condition: selection and login_paths
      fields:
        - http.uri
        - http.virtual_host
        - http.user_agent
  - question: Are there related brute force alerts from other source IPs?
    context: Determines if this is part of a coordinated distributed attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the timing pattern of the WordPress login attempts?
    context: Reveals automation characteristics and attack tool signatures.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did any processes on the WordPress servers create new files after the login attempts?
    context: Identifies potential web shell uploads or file modifications from successful compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any scheduled tasks or persistence mechanisms created on the WordPress servers?
    context: Assesses whether successful login attempts led to persistence establishment.
    range: +6h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|endswith:
          - schtasks.exe
          - taskeng.exe
          - taskhostw.exe
        condition: selection
      fields:
        - CommandLine
        - Image
        - ProcessGuid
        - User
        - ParentImage