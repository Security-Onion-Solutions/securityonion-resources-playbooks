name: ET MALWARE Backdoor.Win32.Riern.K Checkin Off Port
id: 1252700
description: |
  Detects specific network traffic patterns associated with Backdoor.Win32.Riern.K malware check-in communications.
  This signature matches a unique binary pattern in outbound connections that indicates malware command and control activity.
type: detection
detection_id: 2014358
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete network payload that triggered this malware detection?
    context: Reveals the full binary pattern and communication structure used by Riern.K malware.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally establish connections to this destination?
    context: Determines if this represents new command and control infrastructure for this endpoint.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated this connection containing the Riern.K signature?
    context: Identifies the malware executable or compromised application responsible for C2 communications.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What is the timing pattern of connections to this C2 server?
    context: Analyzes beacon intervals and communication patterns typical of Riern.K malware.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What other external connections occurred from this host?
    context: Identifies additional C2 channels or data exfiltration activities by the malware.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same C2 infrastructure?
    context: Determines the scope of Riern.K malware deployment across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created by the process making these connections?
    context: Identifies malware components, dropped files, or secondary payloads created by Riern.K.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid|expand: '%ProcessGuid%'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: What persistence mechanisms were established on this host?
    context: Reveals how Riern.K malware maintains access through registry modifications.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%related_ip%'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: Were any scheduled tasks created to maintain malware persistence?
    context: Identifies task scheduler abuse for maintaining Riern.K malware execution.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|endswith:
          - schtasks.exe
          - taskeng.exe
          - taskhostw.exe
        condition: selection
      fields:
        - CommandLine
        - Image
        - ProcessGuid
        - User
        - ParentImage
  - question: Did any lateral movement occur from this compromised host?
    context: Assesses whether Riern.K malware attempted to spread to other systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there other Riern.K malware detections across the organization?
    context: Identifies the full scope of this malware campaign and affected systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "Riern"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - alert.severity_label
  - question: What domains did this C2 server resolve from?
    context: Identifies domain infrastructure associated with Riern.K command and control operations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dns.resolved_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - src_ip
  - question: What is the pattern of this malware's network activity over time?
    context: Reveals communication schedules and operational patterns of the Riern.K infrastructure.
    range: +/-48h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - connection.bytes_sent
        - connection.bytes_received
