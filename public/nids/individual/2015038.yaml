name: ET WEB_SPECIFIC_APPS WordPress Count Per Day Plugin page parameter Cross-Site Scripting Attempt
id: 1209645
description: |
  Detects XSS attempts against WordPress Count Per Day plugin through the page parameter.
  May trigger on legitimate web application testing or security scanning activities.
type: detection
detection_id: 2015038
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete XSS payload in the Count Per Day plugin request?
    context: Reveals the exact script injection attempt and its potential impact.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress administration areas?
    context: Determines if HTTP access to WordPress admin plugins is typical behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What browser or tool generated the XSS request to the WordPress plugin?
    context: Identifies whether this originated from legitimate browsing or automated scanning.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host around the same time?
    context: Identifies additional web requests or data movement that may be related.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting XSS attacks against the same WordPress plugin?
    context: Determines if this is part of a coordinated attack against the Count Per Day plugin.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created on the WordPress server after this XSS attempt?
    context: Identifies potential web shells or malicious files created through exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were there other attempts to exploit WordPress plugins from this source?
    context: Reveals broader WordPress exploitation patterns beyond Count Per Day plugin.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "/wp-content/plugins/"
            - "/wp-admin/"
          http.uri|re: ".*(<script|javascript:|onload=|onerror=).*"
        condition: selection
      fields:
        - http.uri
        - http.user_agent
        - http.method
  - question: Did this source attempt SQL injection against the WordPress site?
    context: Determines if XSS is part of broader web application attack patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "union select"
            - "' or 1=1"
            - "' and 1=1"
            - "information_schema"
            - "concat("
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Was any WordPress user session activity detected during this timeframe?
    context: Identifies if XSS attempts coincided with legitimate or hijacked user sessions.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "wp-login.php"
            - "wp-admin"
          http.method: "POST"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Are there related XSS alerts across other web applications?
    context: Determines if this is part of a broader web application attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category