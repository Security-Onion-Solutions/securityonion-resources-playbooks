name: ET WEB_SPECIFIC_APPS LogAnalyzer asktheoracle.php file XSS Attempt
id: 1222725
description: |
  Detects XSS attempts targeting LogAnalyzer's asktheoracle.php with malicious JavaScript event handlers.
  May trigger on legitimate application usage or security testing activities.
type: detection
detection_id: 2016122
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete XSS payload in the LogAnalyzer request?
    context: Reveals the specific JavaScript injection attempt and attack vector.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access LogAnalyzer applications?
    context: Determines if access to LogAnalyzer represents normal administrative activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool submitted the XSS request to LogAnalyzer?
    context: Identifies whether this was manual testing, automated scanning, or exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other web applications were accessed from this source?
    context: Determines if this is part of broader web application reconnaissance.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are similar XSS attempts being made against other LogAnalyzer instances?
    context: Assesses whether this represents a coordinated attack campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any administrator credentials used during this session?
    context: Determines if legitimate admin access preceded the XSS attempt.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "login"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Did the target LogAnalyzer application respond with any error codes?
    context: Indicates whether the XSS attempt was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
          http.status_code: [400, 403, 404, 500, 502, 503]
        condition: selection
      fields:
        - http.status_code
        - http.uri
  - question: Are there other web vulnerability scanning patterns from this source?
    context: Identifies whether this is part of systematic web application testing.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        scanner_patterns:
          http.user_agent|contains:
            - "sqlmap"
            - "nikto"
            - "nessus"
            - "burp"
            - "owasp"
            - "zap"
        xss_patterns:
          http.uri|contains:
            - "script"
            - "alert"
            - "javascript"
            - "onclick"
            - "onerror"
        condition: selection and (scanner_patterns or xss_patterns)
      fields:
        - http.user_agent
        - http.uri
        - http.virtual_host
  - question: What is the geographic location and hosting provider of the source IP?
    context: Provides attribution context for the XSS attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - source.geo.country_name
        - source.as.organization.name
        - destination.port
  - question: Are there alerts for other web-based attacks from this source?
    context: Identifies broader patterns of web application targeting.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip