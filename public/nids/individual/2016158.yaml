name: ET WEB_SPECIFIC_APPS Wordpress Google Doc Embedder plugin Local File Inclusion Attempt
id: 1221290
description: |
  Detects attempts to exploit the Google Document Embedder WordPress plugin through the file parameter.
  May trigger on legitimate file access requests or security testing tools scanning for this vulnerability.
type: detection
detection_id: 2016158
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the LFI attempt?
    context: Reveals the exact payload and file path being accessed through the vulnerability.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress administrative interfaces?
    context: Determines if HTTP access to WordPress plugins is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other WordPress plugin paths were accessed from this source?
    context: Identifies broader WordPress reconnaissance or exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains: "/wp-content/plugins/"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - dst_ip
  - question: Were any other file inclusion patterns attempted against this server?
    context: Assesses scope of directory traversal and LFI exploitation attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "../"
            - "..%2f"
            - "..%5c"
            - "%2e%2e%2f"
            - "file="
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.status_code
  - question: What files were accessed by the web server process after this request?
    context: Determines if the LFI attempt resulted in unauthorized file access.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other WordPress servers receiving similar LFI attempts?
    context: Determines if this is part of a coordinated campaign targeting WordPress sites.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other external connections occurred from the targeted server?
    context: Identifies potential data exfiltration or additional attack vectors.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did any processes execute with web server privileges after this request?
    context: Assesses whether the LFI led to code execution or privilege escalation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|contains:
          - php
          - apache2
          - nginx
          - httpd
          - w3wp.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Were any configuration files accessed through file inclusion attempts?
    context: Identifies attempts to access sensitive WordPress configuration data.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "wp-config"
            - "passwd"
            - "hosts"
            - ".conf"
            - ".ini"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.status_code
  - question: Are there related alerts involving the same source IP across the organization?
    context: Correlates this activity with other security events from the same attacker.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip