name: ET EXPLOIT_KIT Plugin-Detect with global % replace on unescaped string (Sakura)
id: 1243290
description: |
  Detects Sakura exploit kit activity using PluginDetect with global percentage replacement patterns.
  May trigger on legitimate JavaScript obfuscation techniques or development tools using similar patterns.
type: detection
detection_id: 2017271
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the PluginDetect pattern?
    context: Reveals the full exploit kit payload and obfuscation techniques used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access websites with JavaScript obfuscation?
    context: Determines if this represents unusual web content for this user.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What browser process was accessing the site containing the exploit kit code?
    context: Identifies the application that received the potentially malicious JavaScript.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded the connection to this exploit kit site?
    context: Reveals the domain resolution that led to this malicious content.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What executable files were created after accessing the exploit kit content?
    context: Identifies malware dropped through successful exploit kit execution.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What other external connections occurred from this host after the exploit kit contact?
    context: Identifies potential malware communication or additional exploit kit activity.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same exploit kit infrastructure?
    context: Determines the scope of the exploit kit campaign across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What browser plugins or extensions were detected during this activity?
    context: Identifies plugin enumeration that may have guided exploit selection.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.response.body|contains:
            - "PluginDetect"
            - "plugin"
            - "version"
            - "browser"
        condition: selection
      fields:
        - http.uri
        - http.response.body
        - http.user_agent
  - question: Were any scheduled tasks or services created following the exploit kit contact?
    context: Identifies persistence mechanisms established through successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|endswith:
          - schtasks.exe
          - taskeng.exe
          - taskhostw.exe
        condition: selection
      fields:
        - CommandLine
        - Image
        - ProcessGuid
        - User
        - ParentImage
  - question: Did any lateral movement occur from this host after the exploit kit exposure?
    context: Determines if successful exploitation led to network propagation.
    range: +24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What is the pattern of connections to this exploit kit infrastructure?
    context: Analyzes the timing and frequency of communications with the malicious site.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Are there related alerts involving the same exploit kit domains or IPs?
    context: Identifies other security events associated with this exploit kit campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What JavaScript files were accessed that contain similar obfuscation patterns?
    context: Reveals additional exploit kit components or related malicious JavaScript.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.response.body|contains:
            - "unescape"
            - "replace"
            - "eval"
        obfuscation:
          http.response.body|re: ".*replace\(.*\/.*\/g.*"
        condition: selection and obfuscation
      fields:
        - http.uri
        - http.virtual_host
        - http.response.body
