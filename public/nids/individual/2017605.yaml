name: ET WEB_SERVER PHP WebShell Embedded In JPG (OUTBOUND)
id: 1220383
description: |
  Detects outbound HTTP responses containing PHP code embedded within JPEG image files.
  May indicate webshell deployment or legitimate PHP code accidentally included in image metadata.
type: detection
detection_id: 2017605
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the embedded PHP code?
    context: Reveals the full webshell payload and JPEG structure for malware analysis.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally serve image files to external clients?
    context: Determines if outbound image delivery is typical for this server's function.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process delivered the image file containing PHP code?
    context: Identifies the specific web application responsible for serving the suspicious file.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What image files were recently created or modified on the web server?
    context: Identifies when and how the weaponized JPEG file was placed on the server.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          file.name|endswith:
            - ".jpg"
            - ".jpeg"
            - ".png"
            - ".gif"
            - ".bmp"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: What other external connections occurred from this web server?
    context: Identifies additional communication channels that may be part of the compromise.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other web servers delivering similar image files with embedded code?
    context: Determines the scope of webshell deployment across the infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What PHP or script files were created on the web server recently?
    context: Identifies additional webshells or malicious scripts beyond the embedded JPEG.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Was this image file accessed via web requests before being served externally?
    context: Reveals how the webshell was initially accessed or tested by the threat actor.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%src_ip%'
          http.uri|contains:
            - ".jpg"
            - ".jpeg"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: Did any processes execute after the image file was accessed?
    context: Determines if the embedded PHP webshell was successfully executed.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          Image|contains:
            - "php"
            - "cmd"
            - "powershell"
            - "sh"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User
  - question: Are there other alerts related to webshell activity from this server?
    context: Identifies additional security events that may be part of the same compromise.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the pattern of image file requests to this web server?
    context: Establishes baseline behavior for detecting anomalous image access patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%src_ip%'
          http.uri|re: .*\.(jpg|jpeg|png|gif|bmp).*
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
        - http.status_code