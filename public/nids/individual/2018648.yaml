name: ET WEB_SPECIFIC_APPS Possible WP Plug-in MailPoet Arbitrary File Upload/Auth Bypass Vulnerability
id: 1222748
description: |
  Detects POST requests to MailPoet WordPress plugin endpoints containing ZIP file uploads with style.css files.
  May trigger on legitimate plugin installations or theme uploads through the MailPoet interface.
type: detection
detection_id: 2018648
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the MailPoet plugin parameters?
    context: Reveals the full request structure and uploaded file content for the potential vulnerability exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress admin interfaces?
    context: Determines if WordPress administration activity is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection to the WordPress MailPoet endpoint?
    context: Identifies the application or browser responsible for the file upload attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host after the upload attempt?
    context: Identifies potential command and control communications following successful exploitation.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created on the system after the MailPoet request?
    context: Identifies uploaded files or payloads that may have been written to disk.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts targeting the same WordPress server with MailPoet requests?
    context: Determines if this is part of a coordinated campaign against the WordPress installation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any ZIP or archive files created by web server processes?
    context: Identifies uploaded archive files that may contain malicious payloads.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.name|contains:
            - ".zip"
            - ".rar"
            - ".tar"
            - ".gz"
        web_process:
          Image|contains:
            - "apache"
            - "nginx"
            - "httpd"
            - "php"
            - "w3wp"
        condition: selection and web_process
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Did any web application processes execute system commands after the upload?
    context: Detects potential code execution through uploaded files or plugin vulnerabilities.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          ParentImage|contains:
            - "apache"
            - "nginx"
            - "httpd"
            - "php"
            - "w3wp"
        system_commands:
          Image|contains:
            - "cmd.exe"
            - "powershell"
            - "bash"
            - "sh"
            - "python"
            - "perl"
        condition: selection and system_commands
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User
  - question: Are there other alerts involving the same WordPress server?
    context: Reveals additional security events that may be related to this exploitation attempt.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the pattern of HTTP requests to WordPress admin endpoints from this source?
    context: Analyzes the sequence of administrative actions that may indicate reconnaissance or exploitation.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "/wp-admin/"
            - "/wp-content/"
            - "/wp-includes/"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code