name: ET SCAN Possible WordPress xmlrpc.php BruteForce in Progress - Response
id: 1201810
description: |
  Detects WordPress xmlrpc.php brute force attacks by identifying multiple failed authentication responses.
  May trigger on legitimate login failures or security testing of WordPress installations.
type: detection
detection_id: 2018755
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP response containing the authentication failure message?
  context: Reveals the specific WordPress xmlrpc.php error response pattern indicating failed login attempts.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally receive xmlrpc.php requests from external sources?
  context: Determines if WordPress xmlrpc.php access represents normal usage patterns for this server.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What is the pattern of xmlrpc.php requests preceding these failed authentication responses?
  context: Identifies the frequency and timing of brute force attempts against WordPress.
  range: -30m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%related_ip%'
        dst_ip|expand: '%related_ip%'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: What process is handling the WordPress xmlrpc.php requests on this server?
  context: Identifies the web server or application processing the authentication attempts.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id|expand: '%community_id%'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Are there successful authentication responses mixed with the failed attempts?
  context: Determines if any brute force attempts may have succeeded against WordPress accounts.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        http.response.body|contains:
        - faultCode
        - Incorrect username or password
      selection:
        dst_ip|expand: '%dst_ip%'
        http.uri|contains: xmlrpc.php
    fields:
    - http.method
    - http.uri
    - http.status_code
    - http.user_agent
    - http.response.body
    logsource:
      category: network
      service: http
- question: What usernames are being targeted in the xmlrpc.php brute force attempts?
  context: Identifies specific WordPress user accounts being targeted for compromise.
  range: +/-1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        http.request.body|contains: wp.getUsersBlogs
        http.uri|contains: xmlrpc.php
    fields:
    - http.method
    - http.uri
    - http.request.body
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Are other WordPress installations receiving similar xmlrpc.php brute force attempts?
  context: Determines if this is part of a broader campaign targeting WordPress sites.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What other WordPress-related requests occurred from the same source?
  context: Identifies additional WordPress enumeration or exploitation attempts.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - wp-admin
        - wp-login
        - wp-content
        - wp-includes
        - wordpress
        src_ip|expand: '%src_ip%'
    fields:
    - http.method
    - http.uri
    - http.status_code
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Did any WordPress configuration files get accessed after the brute force attempts?
  context: Assesses whether attackers gained access to sensitive WordPress files.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.path|contains:
        - wp-config.php
        - .htaccess
        - functions.php
        - wp-admin
        host.ip|expand: '%dst_ip%'
    fields:
    - file.path
    - file.name
    - Image
    - ProcessGuid
    logsource:
      category: file_event
- question: Were any new user accounts or administrative changes made to WordPress?
  context: Identifies potential privilege escalation following successful authentication.
  range: +2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        http.method: POST
        http.uri|contains:
        - wp-admin/user-new.php
        - wp-admin/users.php
        - wp-admin/admin.php
    fields:
    - http.method
    - http.uri
    - http.status_code
    - http.request.body
    logsource:
      category: network
      service: http
- question: Did the host establish any unexpected external connections during the brute force period?
  context: Identifies potential data exfiltration or backdoor installation following WordPress compromise.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%src_ip%'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip|expand: '%public_ip%'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description