name: ET EXPLOIT Possible CVE-2014-3704 Drupal SQLi attempt URLENCODE 2
id: 1212073
description: |
  Detects URL-encoded SQL injection attempts targeting CVE-2014-3704 in Drupal forms.
  May trigger on legitimate form submissions using arrays or security testing tools.
type: detection
detection_id: 2019423
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request body containing the URL-encoded payload?
  context: Reveals the specific SQL injection pattern targeting Drupal form arrays.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally submit POST requests to this Drupal application?
  context: Determines if this represents unusual interaction with the web application.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What user-agent submitted the request with the URL-encoded array syntax?
  context: Identifies the client application or tool making the potentially malicious request.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        http.method: POST
        http.request.body|contains: name%5b
        src_ip|expand: '%src_ip%'
    fields:
    - http.user_agent
    - http.uri
    - src_ip
    logsource:
      category: network
      service: http
- question: Did the Drupal application return database errors or unusual responses?
  context: Assesses whether the SQL injection attempt was successful or caused errors.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      errors:
        http.status_code:
        - 500
        - 501
        - 502
        - 503
      selection:
        dst_ip|expand: '%dst_ip%'
        src_ip|expand: '%src_ip%'
    fields:
    - http.status_code
    - http.response.body.length
    logsource:
      category: network
      service: http
- question: What other POST requests were made to Drupal endpoints from this source?
  context: Identifies additional form submission attempts that may be part of exploitation.
  range: +/-1h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        src_ip|expand: '%src_ip%'
        http.method: POST
      filter:
        community_id|expand: '%community_id%'
      condition: selection and not filter
    fields:
      - http.uri
      - http.request.body.length
      - http.status_code
- question: Are other hosts attempting similar URL-encoded array injections?
  context: Determines if this is part of a broader scanning campaign targeting Drupal sites.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
        http.request.body|contains: "name%5b"
      filter:
        src_ip|expand: '%src_ip%'
      condition: selection and not filter
    fields:
      - src_ip
      - http.user_agent
      - http.uri
- question: What web server process handled the malformed POST request?
  context: Identifies the application server processing potentially malicious input.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id|expand: '%community_id%'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Were any database connections established after the injection attempt?
  context: Assesses whether the SQL injection resulted in database interaction.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_port:
        - 3306
        - 5432
        - 1521
        - 1433
        src_ip|expand: '%dst_ip%'
    fields:
    - dst_ip
    - dst_port
    - network.transport
    logsource:
      category: network
      service: connection
- question: Did any file operations occur on the web server after the injection attempt?
  context: Identifies potential file system access resulting from successful exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Are there related alerts involving the same source IP across the organization?
  context: Reveals broader attack patterns targeting multiple web applications.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip|expand: '%related_ip%'
      filter:
        document_id|expand: '%document_id%'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What is the geographic origin and reputation of the source IP?
  context: Provides context about the likely nature of the traffic source.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip|expand: '%dst_ip%'
        src_ip|expand: '%src_ip%'
    fields:
    - src_ip
    - dst_ip
    - network.transport
    logsource:
      category: network
      service: connection
- question: Did the source attempt to access Drupal administrative endpoints?
  context: Determines if the attacker attempted to access sensitive administrative functions.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        src_ip|expand: '%src_ip%'
        dst_ip|expand: '%dst_ip%'
        http.uri|contains:
          - "/admin"
          - "/user/login"
          - "/?q=admin"
          - "/?q=user"
      condition: selection
    fields:
      - http.uri
      - http.method
      - http.status_code