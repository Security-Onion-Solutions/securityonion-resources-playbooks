name: ET MALWARE Possible Linux.Mirai Login Attempt (888888)
id: 1241506
description: |
  Detects connection attempts containing the password "888888" commonly used by Mirai botnet for IoT device compromise.
  May trigger on legitimate authentication attempts using this weak password or penetration testing activities.
type: detection
detection_id: 2023435
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete authentication attempt containing the password "888888"?
    context: Reveals the full login sequence and identifies the specific protocol being targeted.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: \ndetection:\n  selection:\n    community_id|expand: '%community_id%'\n  condition: selection\nfields:\n  - src_ip\n  - dst_ip\n  - dst_port"
  - question: Does this host normally receive external connections on telnet ports?
    context: Determines if telnet access represents a deviation from normal network patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What other weak passwords were attempted against this host?
    context: Identifies broader brute force patterns targeting IoT devices with default credentials.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: [23, 2323]
        condition: selection
      fields:
        - src_ip
        - dst_port
        - network.bytes
  - question: What other external connections occurred to this host?
    context: Identifies additional attack vectors or successful compromise indicators.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts receiving similar Mirai botnet login attempts?
    context: Determines the scope of the botnet scanning campaign across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did any processes start after the authentication attempt?
    context: Identifies potential compromise through successful credential usage.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
  - question: Were any executable files created on this host after the login attempt?
    context: Detects malware installation following successful IoT device compromise.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did this host establish outbound connections after the authentication attempt?
    context: Identifies C2 communications indicating successful botnet recruitment.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        private_filter:
          dst_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
        condition: selection and not private_filter
      fields:
        - dst_ip
        - dst_port
        - network.bytes
  - question: What is the geographic origin of the IP address attempting these logins?
    context: Provides attribution context for the botnet scanning activity.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - geoip.country_name
        - geoip.asn
  - question: Are there related alerts involving the same source IP?
    context: Reveals broader attack patterns and infrastructure reuse by the threat actor.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did the source IP attempt connections to other telnet services?
    context: Maps the full scope of the botnet's IoT device targeting campaign.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: [23, 2323, 22, 80, 8080, 443]
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state