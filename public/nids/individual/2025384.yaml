name: ET MALWARE Mirai/OMG Proxy Variant CnC in DNS Lookup (ccnew.mm.my)
id: 1219648
description: |
  Detects DNS queries to ccnew.mm.my domain associated with Mirai/OMG botnet C2 infrastructure.
  This domain is used by IoT botnet variants that turn infected devices into proxy servers.
type: detection
detection_id: 2025384
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete DNS query that triggered this alert?
    context: Reveals the exact query details and response for the Mirai C2 domain.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Does this host normally perform DNS queries to similar domains?
    context: Determines if this represents unusual DNS query behavior for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name|expand: '%dns.query.name%'
        condition: selection
      fields:
        - dns.query.name
  - question: What IP addresses did ccnew.mm.my resolve to?
    context: Identifies the C2 server infrastructure being contacted by the botnet.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dns.query.name|contains: "ccnew.mm.my"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: What other external connections occurred from this host?
    context: Identifies additional C2 channels or proxy activity indicative of botnet infection.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same C2 infrastructure?
    context: Determines the scope of potential Mirai botnet infections across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What is the timing pattern of DNS queries to this domain?
    context: Reveals C2 communication patterns characteristic of Mirai beaconing behavior.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did any lateral movement occur from this host?
    context: Assesses whether the infected device is being used to spread the botnet internally.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving Mirai or botnet activity?
    context: Identifies coordinated botnet campaign activity across the organization.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did this host query other domains associated with Mirai variants?
    context: Reveals additional C2 infrastructure used by this botnet family.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dns.query.name|contains:
            - ".mm.my"
            - "mirai"
            - "omgproxy"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: What network services are running on this potentially infected device?
    context: Identifies services that may be exploited for proxy operations or further compromise.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: Is this host attempting to establish proxy connections on unusual ports?
    context: Detects proxy server activity characteristic of OMG variant functionality.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port:
            - 1080
            - 3128
            - 8080
            - 8888
            - 9050
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state