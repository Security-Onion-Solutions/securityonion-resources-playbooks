name: ET PHISHING Successful iTunes Connect Phish M1 2016-12-13
id: 1211112
description: |
  Detects POST requests to PHP endpoints with specific parameter patterns used in iTunes Connect phishing attacks.
  May trigger on legitimate web applications that use similar POST parameter structures.
type: detection
detection_id: 2032663
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete POST request with the iTunes Connect phishing parameters?
    context: Reveals the full credential harvesting attempt including all submitted data.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally submit POST requests to PHP endpoints on external sites?
    context: Determines if web form submissions to external domains represent typical user behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What browser or application submitted the iTunes Connect phishing form?
    context: Identifies the process responsible for the credential submission attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries occurred before accessing the iTunes Connect phishing site?
    context: Reveals the domain resolution path that led to the phishing site.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other external web requests occurred from this host around the same time?
    context: Identifies additional suspicious web activity or redirects in the attack chain.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts submitting credentials to the same phishing infrastructure?
    context: Determines the scope of users affected by this iTunes Connect phishing campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were downloaded to this host before or after the credential submission?
    context: Identifies potential malware payloads delivered through the phishing attack.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there other iTunes Connect phishing alerts across the organization?
    context: Reveals the broader impact of this credential harvesting campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did this host access any Apple or iTunes-related domains before the phishing attempt?
    context: Determines if the user was redirected from legitimate Apple services.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dns.query.name|contains:
            - apple.com
            - itunes.com
            - icloud.com
            - appleid.apple.com
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: What is the hosting pattern of the phishing domain infrastructure?
    context: Analyzes the DNS resolution and hosting characteristics of the phishing site.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.resolved_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - src_ip
  - question: Were any authentication-related files or cookies modified after the credential submission?
    context: Identifies potential session hijacking or credential storage following the phishing attempt.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          file.path|contains:
            - cookies
            - credential
            - password
            - keychain
            - login
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User