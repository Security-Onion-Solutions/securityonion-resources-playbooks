name: ET EXPLOIT HTTP POST Request With ysoserial In Request Body (BeanShell1/Click1/CommonsCollections1/CommonsCollections4) M2
id: 1212781
description: |
  Detects HTTP POST requests containing ysoserial payloads that exploit Java deserialization vulnerabilities.
  These payloads target BeanShell1, Click1, CommonsCollections1, and CommonsCollections4 gadget chains.
  May trigger on security testing tools or legitimate applications handling serialized Java objects.
type: detection
detection_id: 2033549
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP POST request containing the ysoserial payload?
  context: Reveals the full exploitation attempt including headers and payload structure.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally receive HTTP POST requests from external sources?
  context: Determines if POST requests to this application are typical behavior.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What Java application process received the request with the ysoserial payload?
  context: Identifies the specific Java service that may be vulnerable to deserialization attacks.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id|expand: '%community_id%'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other external connections occurred from this host after the ysoserial request?
  context: Identifies potential command execution or data exfiltration following exploitation.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%src_ip%'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip|expand: '%public_ip%'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts connecting to the same infrastructure as the source of this attack?
  context: Determines scope of potential campaign targeting Java deserialization vulnerabilities.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      filter:
        src_ip|expand: '%src_ip%'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What Java-related files were created after the ysoserial request was processed?
  context: Identifies files that may have been created through successful deserialization exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did any lateral movement occur from this host following the deserialization attempt?
  context: Assesses whether successful exploitation led to network propagation.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%private_ip%'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Were any persistence mechanisms established after the ysoserial payload was received?
  context: Identifies registry modifications that could maintain access after exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: registry_event
    detection:
      selection:
        host.ip|expand: '%related_ip%'
        TargetObject|contains:
        - Run
        - RunOnce
        - Services
        - Startup
        - Winlogon
        - Explorer
        - Shell
        - AppInit_DLLs
        - Image File Execution Options
        - Class
        - ContextMenuHandlers
        - ShellExecuteHooks
      condition: selection
    fields:
      - User
      - Image
      - ProcessGuid
      - TargetObject
      - Details
- question: Are other Java applications receiving similar requests with ysoserial payloads?
  context: Determines if this is part of a broader campaign targeting Java deserialization flaws.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: Did the host attempt to resolve any new domains after processing the ysoserial request?
  context: Reveals DNS queries that may indicate callback attempts or additional payload retrieval.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip|expand: '%src_ip%'
      baseline_filter:
        dns.query.name|expand: '%dns.query.name%'
      condition: selection and not baseline_filter
    fields:
      - dns.query.name
      - dns.resolved_ip
      - dns.query.type_name
- question: What is the pattern of HTTP requests from the source IP over the past 24 hours?
  context: Analyzes attack patterns and identifies systematic exploitation attempts.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip|expand: '%src_ip%'
    fields:
    - dst_ip
    - dst_port
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were any Java processes spawned with suspicious command-line arguments after the request?
  context: Identifies process execution that may result from successful deserialization exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip|expand: '%dst_ip%'
      java_processes:
        Image|contains: 'java'
      suspicious_args:
        CommandLine|contains:
          - 'Runtime.getRuntime'
          - 'ProcessBuilder'
          - 'bash'
          - 'cmd'
          - 'powershell'
          - 'wget'
          - 'curl'
      condition: selection and (java_processes or suspicious_args)
    fields:
      - Image
      - CommandLine
      - ParentImage
      - User