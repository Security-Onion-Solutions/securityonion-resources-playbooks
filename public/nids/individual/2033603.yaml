name: ET EXPLOIT GraphQL Introspection Query Attempt
id: 1212315
description: |
  Detects GraphQL introspection queries that expose API schema information.
  May trigger on legitimate development activities or API documentation tools.
type: detection
detection_id: 2033603
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete GraphQL introspection query that triggered this alert?
    context: Reveals the specific query structure and requested schema information.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive GraphQL API requests?
    context: Determines if GraphQL usage represents normal application behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What application processed the GraphQL introspection request?
    context: Identifies the GraphQL API service that may be exposing schema information.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this GraphQL introspection attempt?
    context: Reveals reconnaissance activity before the schema enumeration.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Did the same source IP perform additional GraphQL queries after introspection?
    context: Assesses whether schema discovery led to further API exploitation attempts.
    range: +2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    dst_ip|expand: '%dst_ip%'\n    http.method: \"POST\"\n    http.request_body|contains: \"query\"\n  filter:\n    community_id|expand: '%community_id%'\n  condition: selection and not filter\nfields:\n  - http.uri\n  - http.user_agent\n  - http.request_body\n  - http.status_code\n  \n"
  - question: Are other hosts being targeted with similar GraphQL introspection queries?
    context: Determines if this is part of a broader GraphQL enumeration campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What GraphQL mutations or queries were attempted after schema discovery?
    context: Identifies follow-up queries that may attempt to exploit the exposed schema.
    range: +6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    http.method: \"POST\"\n    http.request_body|contains:\n      - \"mutation\"\n      - \"subscription\"\n      - \"fragment\"\n  condition: selection\nfields:\n  - dst_ip\n  - dst_port\n  - http.uri\n  - http.user_agent\n  - http.request_body\n  - http.status_code\n  \n"
  - question: Did any lateral movement occur from this host after the GraphQL introspection?
    context: Assesses whether schema discovery facilitated network traversal.
    range: +24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What files were created by the application handling GraphQL requests?
    context: Identifies potential backdoors or data files created through API exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid|expand: '%ProcessGuid%'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Are there other alerts involving the same source IP or GraphQL endpoints?
    context: Correlates with other security events to establish attack timeline.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What authentication patterns were observed with these GraphQL requests?
    context: Determines if introspection was performed with or without valid credentials.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.method: "POST"
        condition: selection
      fields:
        - http.user_agent
        - http.request_headers
        - http.status_code
        - http.uri