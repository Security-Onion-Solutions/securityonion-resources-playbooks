name: ET EXPLOIT Apache log4j RCE Attempt - AWS Access Key Disclosure (CVE-2021-44228)
id: 1204340
description: |
  Detects Log4j exploitation attempts specifically targeting AWS credentials through environment variable disclosure.
  May trigger on legitimate applications that process JNDI strings or security testing tools scanning for Log4j vulnerabilities.
type: detection
detection_id: 2034699
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the AWS credential disclosure attempt?
    context: Reveals the full payload attempting to extract AWS_ACCESS_KEY_ID through Log4j JNDI.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive HTTP traffic from external sources?
    context: Determines if external web requests to this server are typical for this environment.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What Java process handled the request containing the AWS credential extraction attempt?
    context: Identifies the specific Java application vulnerable to this Log4j exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries occurred before this credential extraction attempt?
    context: Reveals reconnaissance or infrastructure setup preceding the exploitation attempt.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Did the targeted host establish outbound connections after receiving this request?
    context: Assesses whether the Log4j vulnerability led to successful data exfiltration or callback connections.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts receiving similar AWS credential extraction attempts?
    context: Determines the scope of this Log4j exploitation campaign across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created by Java processes after this exploitation attempt?
    context: Identifies potential backdoors, shells, or malicious payloads dropped through Log4j RCE.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid|expand: '%ProcessGuid%'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Were any AWS-related configuration files accessed after this request?
    context: Determines if the exploitation attempt successfully accessed AWS credential files.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.path|contains:
            - ".aws"
            - "credentials"
            - "config"
            - "AWS_ACCESS_KEY"
            - "AWS_SECRET"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did any processes attempt to access environment variables after this request?
    context: Reveals attempts to enumerate environment variables containing AWS credentials.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - "env"
            - "printenv"
            - "AWS_ACCESS_KEY"
            - "AWS_SECRET"
            - "$AWS"
        condition: selection
      fields:
        - CommandLine
        - Image
        - ParentImage
        - User
  - question: Are there other Log4j exploitation attempts with different payloads targeting this host?
    context: Identifies the full scope of Log4j attack patterns against this vulnerable application.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains:
            - "${jndi:"
            - "${env:"
            - "${sys:"
            - "${lower:j}"
            - "${upper:j}"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What is the pattern of requests from the source IP attempting this exploitation?
    context: Analyzes the broader attack campaign and methodology from this threat actor.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.user_agent
        - http.method
  - question: Did any lateral movement occur from this host after the exploitation attempt?
    context: Determines if successful Log4j exploitation led to internal network compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport