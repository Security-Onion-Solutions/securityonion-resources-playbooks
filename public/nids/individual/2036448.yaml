name: ET WEB_SERVER Possible SSRF Attempt Inbound Using Common Dork M21
id: 1245963
description: |
  Detects HTTP requests containing port parameters followed by URL or IP patterns that may indicate Server-Side Request Forgery (SSRF) attempts.
  May trigger on legitimate applications using port parameters for configuration or proxy functionality.
type: detection
detection_id: 2036448
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the port parameter and URL pattern?
    context: Reveals the specific URI structure and parameters used in the potential SSRF attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive requests with port parameters?
    context: Determines if requests with port parameters are typical for this application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web application processed this request with the port parameter?
    context: Identifies the specific service that may be vulnerable to SSRF attacks.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Did the web server establish new external connections after receiving this request?
    context: Assesses whether the request resulted in server-side connections to external resources.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What DNS queries were made by the web server after processing this request?
    context: Identifies domain resolution attempts that may indicate SSRF exploitation.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - dns.query.type_name
  - question: Are other web servers receiving similar requests with port parameters?
    context: Determines if this is part of a broader SSRF scanning campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What internal IP addresses or services were referenced in the request parameters?
    context: Identifies potential internal targets of SSRF attempts.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.uri|contains: "?port="
        private_targets:
          http.uri|re: ".*(?:192\.168\.|10\.|172\.1[6-9]\.|172\.2[0-9]\.|172\.3[0-1]\.|127\.|localhost).*"
        condition: selection and private_targets
      fields:
        - http.uri
        - http.method
        - http.user_agent
  - question: Did the web application attempt to connect to any internal services after this request?
    context: Reveals successful SSRF exploitation targeting internal infrastructure.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        internal_targets:
          dst_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
            - "127.0.0.0/8"
        filter:
          dst_ip|expand: '%dst_ip%'
        condition: selection and internal_targets and not filter
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state
  - question: Are there other requests from the same source attempting different SSRF techniques?
    context: Identifies broader SSRF exploitation attempts from the same source.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        ssrf_patterns:
          http.uri|contains:
            - "url="
            - "target="
            - "host="
            - "redirect="
            - "proxy="
            - "callback="
        condition: selection and ssrf_patterns
      fields:
        - http.uri
        - http.method
        - dst_ip
        - http.virtual_host
