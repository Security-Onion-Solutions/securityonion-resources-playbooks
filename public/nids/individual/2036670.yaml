name: ET MALWARE Python CTX Library Backdoor Domain in DNS Lookup (anti-theft-web .herokuapp .com)
id: 1250254
description: |
  Detects DNS queries for the backdoored Python CTX library's malicious domain anti-theft-web.herokuapp.com.
  May indicate presence of the compromised CTX library or legitimate research/testing activities.
type: detection
detection_id: 2036670
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete DNS query for the backdoored CTX library domain?
    context: Reveals the exact DNS request pattern and response details.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Does this host normally query .herokuapp.com domains?
    context: Determines if Heroku app queries represent typical development or deployment activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name|expand: '%dns.query.name%'
        condition: selection
      fields:
        - dns.query.name
  - question: What process initiated the DNS query for the backdoored domain?
    context: Identifies the specific Python application or script using the compromised CTX library.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host?
    context: Identifies additional network activity that may be related to the backdoor functionality.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts querying the same backdoored CTX library domain?
    context: Determines the scope of systems potentially affected by the compromised library.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What Python scripts or applications were executed on this host?
    context: Identifies Python processes that may be using the backdoored CTX library.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|contains:
          - python.exe
          - python3.exe
          - python
          - python3
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: What files were created by Python processes during this timeframe?
    context: Reveals artifacts that may have been created by the backdoored library.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid|expand: '%ProcessGuid%'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did any lateral movement occur from this host?
    context: Assesses whether the backdoor was used for network propagation or internal reconnaissance.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts indicating Python library or supply chain compromise?
    context: Identifies coordinated activity suggesting broader supply chain attack campaigns.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What IP addresses did the backdoored domain resolve to?
    context: Identifies the infrastructure being used by the CTX library backdoor.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: dns\ndetection:\n  selection:\n    dns.query.name|expand: '%dns.query.name%'\n    dns.resolved_ip|exists: true\n  condition: selection\nfields:\n  - dns.query.name\n  - dns.resolved_ip\n  - dns.query.type_name\n  \n"
  - question: Did this host attempt to download or install Python packages during this timeframe?
    context: Reveals package installation activity that may have introduced the backdoored library.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip|expand: '%src_ip%'\n    CommandLine|contains:\n      - \"pip install\"\n      - \"pip3 install\"\n      - \"python -m pip\"\n      - \"setup.py install\"\n      - \"ctx\"\n  condition: selection\nfields:\n  - Image\n  - CommandLine\n  - User\n  - CurrentDirectory\n  \n"
  - question: What is the timing pattern of connections to the backdoored infrastructure?
    context: Analyzes communication patterns that may indicate beacon behavior or data exfiltration.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
