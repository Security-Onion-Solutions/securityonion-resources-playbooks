name: ET PHISHING PyPI Successful Credential Harvesting Attempt
id: 1223969
description: |
  Detects HTTP GET requests to PyPI credential harvesting endpoints indicating successful credential theft.
  May trigger on legitimate security research or analysis of compromised PyPI packages.
type: detection
detection_id: 2038621
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request to the PyPI credential harvesting endpoint?
    context: Reveals the full request details including headers and parameters for the credential theft attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access PyPI package installation endpoints?
    context: Determines if HTTP access to package repositories is typical for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection to the credential harvesting endpoint?
    context: Identifies the application or tool that made the request to the malicious PyPI endpoint.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this credential harvesting request?
    context: Reveals domain resolution patterns that led to the malicious PyPI endpoint access.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other external connections occurred from this host during the incident?
    context: Identifies additional network activity that may be related to the credential theft.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts accessing the same credential harvesting infrastructure?
    context: Determines the scope of the PyPI credential theft campaign across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What Python-related files were accessed before this credential harvesting attempt?
    context: Identifies package installation or configuration files that may have contained malicious code.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any credential or configuration files accessed after the harvesting request?
    context: Assesses potential data access following the credential theft attempt.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          file.name|contains:
            - ".pypirc"
            - "pip.conf"
            - "credentials"
            - "config"
            - ".env"
            - "token"
            - "password"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
  - question: Did any lateral movement occur from this host following the credential theft?
    context: Determines if the compromised credentials were used for further network access.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there other alerts related to PyPI or package repository threats?
    context: Identifies related security events that may be part of the same supply chain attack.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip|expand: '%related_ip%'
        filter:
          document_id|expand: '%document_id%'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the pattern of requests to PyPI-related domains from this host?
    context: Analyzes the timing and frequency of package repository access for anomalies.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dns.query.name|contains:
            - "pypi"
            - "python"
            - "pip"
            - "package"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip