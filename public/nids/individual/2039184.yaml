name: ET RETIRED MSSQL maggie backdoor ls Query Observed
id: 1225674
description: |
  Detects SQL Server traffic containing patterns consistent with the Maggie backdoor's directory listing functionality.
  May trigger on legitimate SQL queries containing similar Unicode-encoded strings or database administration tools.
type: detection
detection_id: 2039184
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL query containing the Maggie backdoor pattern?
    context: Reveals the exact backdoor command structure and any additional parameters.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally receive SQL Server connections from this source?
    context: Determines if the connection represents unusual database access patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What SQL Server process handled the connection containing the backdoor pattern?
    context: Identifies the database service that received the potential backdoor command.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this SQL Server connection?
    context: Reveals how the attacker located or referenced the target database server.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other SQL Server connections occurred from this source host?
    context: Identifies additional database interactions that may be part of the attack sequence.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 1433
        filter:
          community_id|expand: '%community_id%'
        condition: selection and not filter
      fields:
        - dst_ip
        - dst_port
        - connection.state_description
        - connection.history
        - network.bytes
  - question: Are other SQL servers receiving connections from the same source?
    context: Determines if this represents lateral movement between database servers.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created on the SQL server after the backdoor query?
    context: Identifies files that may have been created through backdoor file system access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any scheduled tasks or services created after the backdoor activity?
    context: Assesses whether the Maggie backdoor established persistence mechanisms.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          Image|endswith:
          - schtasks.exe
          - taskeng.exe
          - taskhostw.exe
        condition: selection
      fields:
        - CommandLine
        - Image
        - ProcessGuid
        - User
        - ParentImage
  - question: Did lateral movement occur from this SQL server to other internal systems?
    context: Determines if the compromised database server was used as a pivot point.
    range: +6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there similar Maggie backdoor patterns detected across other database servers?
    context: Identifies the scope of potential backdoor deployment across the SQL infrastructure.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the timing pattern of connections to this SQL server?
    context: Reveals whether connections follow automated backdoor communication intervals.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did any database administration tools connect around the same timeframe?
    context: Distinguishes between legitimate admin activity and backdoor usage.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - sqlcmd.exe
            - ssms.exe
            - isql.exe
            - osql.exe
            - bcp.exe
            - sqlservr.exe
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Were there any registry modifications related to SQL Server configuration after the backdoor query?
    context: Identifies configuration changes that may have been made through the backdoor.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          TargetObject|contains:
            - \Microsoft SQL Server\
            - \MSSQL\
            - \SQLServer\
        condition: selection
      fields:
        - TargetObject
        - Details
        - EventType
        - Image
        - User