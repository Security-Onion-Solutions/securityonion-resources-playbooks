name: ET MALWARE Win32/Plugx CnC Activity (CONNECT)
id: 1233970
description: |
  Detects HTTP CONNECT requests with specific PlugX malware characteristics including unique URI patterns and user-agent strings.
  May trigger on legitimate proxy traffic or applications using similar HTTP CONNECT patterns.
type: detection
detection_id: 2044311
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP CONNECT request with the PlugX characteristics?
    context: Reveals the full C2 communication pattern including headers and payload structure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally make HTTP CONNECT requests to external servers?
    context: Determines if proxy-based communication patterns are typical for this endpoint.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the HTTP CONNECT request with PlugX indicators?
    context: Identifies the application or malware responsible for the C2 communication.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this PlugX C2 communication?
    context: Reveals domain resolution patterns that may indicate C2 infrastructure.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other external connections occurred from this host around the same time?
    context: Identifies additional C2 channels or data exfiltration attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts communicating with the same PlugX C2 infrastructure?
    context: Determines the scope of potential PlugX infections across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What is the timing pattern of HTTP CONNECT requests to this C2 server?
    context: Analyzes beacon intervals and communication frequency typical of PlugX malware.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What executable files were created by the process making PlugX connections?
    context: Identifies malware components, downloaded payloads, or persistence mechanisms.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any persistence mechanisms established around the time of PlugX activity?
    context: Detects registry modifications that maintain malware presence across reboots.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%related_ip%'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: Did any lateral movement occur from this potentially infected host?
    context: Assesses whether PlugX was used for network propagation or credential harvesting.
    range: +24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%private_ip%'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there other alerts related to PlugX or similar malware families?
    context: Correlates with broader campaign activity or related threat indicators.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did any hosts access domains or IPs associated with this PlugX C2 infrastructure?
    context: Identifies related infrastructure or campaign components across the organization.
    range: +/-24h
    query: "aggregation: false  \nlogsource:\n  category: network\ndetection:\n  c2_connection:\n    dst_ip|expand: '%dst_ip%'\n  exclude_source:\n    src_ip|expand: '%src_ip%'\n  condition: c2_connection and not exclude_source\nfields:\n  - src_ip\n  - dst_ip\n  - dst_port\n  - network.transport\n  - network.protocol\n"
  - question: Are there other HTTP requests with similar PlugX user-agent patterns from any host?
    context: Hunts for additional PlugX infections using the same malware variant.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        plugx_ua:
          http.user_agent|contains: "Mozilla/4.0 (compatible; MSIE "
          http.method: "CONNECT"
        exclude_this_host:
          src_ip|expand: '%src_ip%'
        condition: plugx_ua and not exclude_this_host
      fields:
        - src_ip
        - dst_ip
        - http.user_agent
        - http.uri
        - http.method