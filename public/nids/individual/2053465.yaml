name: ET WEB_SERVER Possible SQL Injection SELECT CONCAT in HTTP Request Body
id: 1221075
description: |
  Detects HTTP requests containing SQL SELECT and CONCAT keywords in the request body.
  May trigger on legitimate database queries, web application testing, or automated vulnerability scanners.
type: detection
detection_id: 2053465
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-06-11
questions:
  - question: What was the complete HTTP request body containing the SQL keywords?
    context: Reveals the full SQL injection payload and injection point.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web application normally receive database queries in request bodies?
    context: Determines if SQL keywords in HTTP requests are typical for this application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process handled this request with SQL keywords?
    context: Identifies the specific web server or application that processed the request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests with SQL keywords were sent to this server?
    context: Identifies additional SQL injection attempts or enumeration activity.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip|expand: '%dst_ip%'\n    http.request.body|contains:\n      - \"SELECT\"\n      - \"UNION\"\n      - \"INSERT\"\n      - \"UPDATE\"\n      - \"DELETE\"\n      - \"DROP\"\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.request.body\n  \n"
  - question: What database-related files were accessed after this request?
    context: Determines if the SQL injection attempt accessed database files or configurations.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: file_event\ndetection:\n  selection:\n    host.ip|expand: '%dst_ip%'\n    file.name|contains:\n      - \".db\"\n      - \".sql\"\n      - \".mdb\"\n      - \"database\"\n      - \"mysql\"\n      - \"postgres\"\n      - \"oracle\"\n  condition: selection\nfields:\n  - file.path\n  - file.name\n  - Image\n  - ProcessGuid\n  \n"
  - question: Are other web servers receiving similar SQL injection attempts?
    context: Determines if this is part of a broader SQL injection campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What external connections occurred from this web server after the SQL request?
    context: Identifies potential data exfiltration or command and control communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What is the pattern of HTTP requests from this source IP?
    context: Analyzes the broader attack pattern and methodology used.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.status_code\n  - dst_ip\n  \n"
  - question: Did this source IP attempt to access database administration interfaces?
    context: Reveals attempts to access database management tools or admin panels.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip|expand: '%src_ip%'\n    http.uri|contains:\n      - \"phpmyadmin\"\n      - \"adminer\"\n      - \"mysql\"\n      - \"postgres\"\n      - \"oracle\"\n      - \"mssql\"\n      - \"database\"\n      - \"admin\"\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.status_code\n  - dst_ip\n  \n"
  - question: Was this SQL injection attempt successful based on response patterns?
    context: Analyzes HTTP response codes and sizes to determine injection success.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.status_code: [200, 500, 302]
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.response.body.length
        - http.user_agent