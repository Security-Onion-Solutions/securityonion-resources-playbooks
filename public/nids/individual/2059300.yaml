name: ET WEB_SPECIFIC_APPS phpGACL assign_group group_id Parameter Reflected Cross-Site Scripting (CVE-2020-13563)
id: 1209812
description: |
  Detects GET requests to phpGACL assign_group.php containing script-related parameters that could indicate XSS exploitation attempts.
  May trigger on legitimate administrative access or security scanning of phpGACL installations.
type: detection
detection_id: 2059300
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2025-01-17
questions:
  - question: What was the complete HTTP request containing the XSS payload to assign_group.php?
    context: Reveals the exact script injection attempt and payload structure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access phpGACL administrative interfaces?
    context: Determines if access to phpGACL admin functions is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What browser or application made the request to the phpGACL interface?
    context: Identifies the client application attempting the XSS exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source after the XSS attempt?
    context: Assesses follow-up activity that may indicate successful exploitation.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there other attempts to exploit phpGACL or similar web applications?
    context: Identifies broader web application attack patterns across the organization.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did this source attempt to access other phpGACL administrative functions?
    context: Reveals reconnaissance or exploitation attempts against other phpGACL features.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "admin/"
            - "phpgacl"
            - "assign_group"
            - "assign_user"
            - "group_admin"
            - "user_admin"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - dst_ip
  - question: Were any files created on web servers during this timeframe?
    context: Identifies potential file uploads or web shells that may have been created.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts targeting the same phpGACL installation?
    context: Determines if multiple sources are attacking the same vulnerable application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did this source attempt other web application attack patterns?
    context: Reveals broader attack methodology beyond phpGACL exploitation.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "script"
            - "javascript"
            - "onload"
            - "onclick"
            - "onerror"
            - "alert("
            - "<script"
            - "eval("
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - dst_ip
  - question: Were there any DNS queries for domains associated with XSS payloads?
    context: Identifies external resources that XSS payloads may attempt to load.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip