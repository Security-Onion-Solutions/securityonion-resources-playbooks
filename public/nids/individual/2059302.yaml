name: ET WEB_SPECIFIC_APPS WordPress Limit Login Attempts Plugin Stored Cross Site Scripting (CVE-2023-1861)
id: 1202145
description: |
  Detects XSS attempts targeting WordPress Limit Login Attempts plugin via malicious cookie values.
  May trigger on legitimate WordPress administrative activity or security testing tools.
type: detection
detection_id: 2059302
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2025-01-17
questions:
  - question: What was the complete HTTP request containing the malicious cookie payload?
    context: Reveals the exact XSS payload and cookie structure used in the exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress administrative areas?
    context: Determines if WordPress admin access represents normal user behavior patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What browser or user-agent initiated the request with the XSS payload?
    context: Identifies the application responsible for generating the malicious cookie request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other WordPress-related requests occurred from this source?
    context: Reveals additional WordPress enumeration or exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains: "/wp-"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did this source attempt to access other WordPress plugins or admin functions?
    context: Identifies broader WordPress attack patterns beyond the Limit Login Attempts plugin.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.uri|contains:
            - "/wp-admin/"
            - "/wp-content/plugins/"
            - "/wp-login.php"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What other external connections occurred from this host after the XSS attempt?
    context: Identifies potential data exfiltration or additional malicious communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same WordPress infrastructure?
    context: Determines if multiple sources are targeting the same WordPress installation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created on the WordPress server after this request?
    context: Identifies potential web shells or malicious files uploaded through XSS exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts receiving similar WordPress XSS exploitation attempts?
    context: Determines if this is part of a coordinated campaign targeting WordPress sites.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of requests containing JavaScript event handlers from this source?
    context: Reveals the scope and sophistication of XSS attack attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.cookie|contains:
            - "onmouse"
            - "onkey"
            - "onerror"
            - "onload"
            - "onclick"
            - "script"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.cookie
        - http.user_agent
  - question: Did any WordPress processes exhibit unusual behavior after receiving these requests?
    context: Identifies potential server-side compromise resulting from successful XSS exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - "wordpress"
            - "wp-"
            - "php"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User