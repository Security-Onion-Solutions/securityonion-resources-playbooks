name: GPL RPC portmap proxy attempt TCP
id: 1227180
description: |
  Detects attempts to use RPC portmap service as a proxy for TCP connections.
  May indicate reconnaissance activity or legitimate RPC service discovery.
type: detection
detection_id: 2101922
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What is the complete RPC portmap request that triggered this alert?
    context: Reveals the specific RPC procedure call and parameters used in the proxy attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally receive RPC portmap requests from external sources?
    context: Determines if external RPC access represents normal network activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
  - question: What process is listening on port 111 for RPC requests?
    context: Identifies the RPC service daemon handling portmap requests.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id|expand: '%community_id%'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other RPC services were accessed from this external host?
    context: Identifies additional RPC service enumeration or access attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: [111, 135, 2049, 32771, 32772, 32773, 32774, 32775]
        condition: selection
      fields:
        - dst_port
        - network.protocol
        - connection.state
        - connection.history
  - question: What other external hosts are attempting RPC portmap connections?
    context: Identifies coordinated RPC scanning or reconnaissance activity.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        filter:
          src_ip|expand: '%src_ip%'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any files accessed through NFS or other RPC services after this connection?
    context: Determines if the portmap request led to successful RPC service access.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%private_ip%'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did this host establish any outbound connections after the RPC request?
    context: Identifies potential compromise or lateral movement attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip|expand: '%public_ip%'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there related RPC portmap attempts across the organization?
    context: Determines scope of RPC-based reconnaissance or attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%public_ip%'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of connection attempts from this external host?
    context: Analyzes the frequency and timing of RPC portmap proxy attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%related_ip%'
          dst_ip|expand: '%related_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Were any RPC services successfully accessed following the portmap request?
    context: Identifies successful RPC service connections that may indicate compromise.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          connection.state: "SF"
        rpc_ports:
          dst_port: [135, 2049, 32771, 32772, 32773, 32774, 32775]
        condition: selection and rpc_ports
      fields:
        - dst_port
        - connection.state
        - connection.history
        - network.bytes_transferred