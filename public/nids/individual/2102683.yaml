name: GPL SQL mdsys.md2.sdo_code_size buffer overflow attempt
id: 1216037
description: |
  Detects attempts to exploit a buffer overflow vulnerability in Oracle's mdsys.md2.sdo_code_size function.
  May trigger on legitimate Oracle Spatial operations or database administration activities using large string parameters.
type: detection
detection_id: 2102683
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL statement containing the mdsys.md2.sdo_code_size function call?
  context: Reveals the exact payload and parameter structure used in the potential exploitation attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        community_id|expand: '%community_id%'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
- question: Does this client normally connect to Oracle database services?
  context: Determines if database connections from this source represent typical access patterns.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip|expand: '%dst_ip%'
      condition: selection
    fields:
      - dst_ip
- question: What database process handled this connection with the large parameter string?
  context: Identifies the specific Oracle service that processed the potentially malicious query.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id|expand: '%community_id%'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other Oracle database connections occurred from this client?
  context: Identifies additional database access attempts that may be part of the same attack sequence.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_port:
        - 1521
        - 1522
        - 1525
        - 1526
        - 1527
        - 1528
        - 1529
        - 1530
        src_ip|expand: '%src_ip%'
    fields:
    - dst_ip
    - dst_port
    - connection.state_description
    - network.bytes
    logsource:
      category: network
      service: connection
- question: Are other clients attempting similar Oracle database exploits?
  context: Determines if this is part of a coordinated attack against Oracle infrastructure.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip|expand: '%public_ip%'
      filter:
        src_ip|expand: '%src_ip%'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What files were created on the database server after this connection?
  context: Identifies potential backdoors or malicious files created through successful exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did any Oracle database processes create scheduled tasks after this attempt?
  context: Checks for persistence mechanisms established through database compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip|expand: '%private_ip%'
        Image|endswith:
        - schtasks.exe
        - taskeng.exe
        - taskhostw.exe
      condition: selection
    fields:
      - CommandLine
      - Image
      - ProcessGuid
      - User
      - ParentImage
- question: Were there any lateral movement attempts from the database server?
  context: Assesses whether successful exploitation led to further network compromise.
  range: +4h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip|expand: '%private_ip%'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: What registry modifications occurred on the database server following this connection?
  context: Identifies potential persistence or configuration changes made through exploitation.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: registry_event
    detection:
      selection:
        host.ip|expand: '%related_ip%'
        TargetObject|contains:
        - Run
        - RunOnce
        - Services
        - Startup
        - Winlogon
        - Explorer
        - Shell
        - AppInit_DLLs
        - Image File Execution Options
        - Class
        - ContextMenuHandlers
        - ShellExecuteHooks
      condition: selection
    fields:
      - User
      - Image
      - ProcessGuid
      - TargetObject
      - Details
- question: Are there other alerts involving the same client IP across the organization?
  context: Provides broader context about the source of the potential attack.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip|expand: '%related_ip%'
      filter:
        document_id|expand: '%document_id%'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip