# VALIDATION ERRORS:
# YAML Syntax Errors:
#   - Invalid syntax at line 1, column 35: mapping values are not allowed here
#
# ORIGINAL PLAYBOOK CONTENT:
name: ET JA3 Hash - sqlmap (tested: v1.0-dev kali)
id: 22028467
description: |
  Detects TLS connections with JA3 hash associated with sqlmap SQL injection testing tool.
  Legitimate when used by authorized penetration testers for security assessments.
  May indicate unauthorized SQL injection attacks against web applications.
type: detection
detection_id: 2028467
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What is the complete TLS fingerprint for this sqlmap session?
    context: JA3 hash confirms sqlmap usage and specific version characteristics.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - tls.client.ja3
        - tls.client.server_name
        - tls.version
        - src_ip
        - dst_ip
        - dst_port

  - question: Is this SQL injection testing from an authorized penetration tester?
    context: Legitimate sqlmap usage should originate from known security testing infrastructure.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 80
            - 443
            - 8080
            - 8443
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - bytes_out
        - connection_state

  - question: What HTTP requests are being sent during SQL injection testing?
    context: sqlmap generates specific HTTP patterns with SQL injection payloads.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - user_agent.original

  - question: Are there SQL injection payloads in the HTTP traffic?
    context: Identifying specific injection attempts helps assess attack sophistication and intent.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.request.body.content|contains:
            - 'UNION SELECT'
            - 'OR 1=1'
            - 'DROP TABLE'
            - 'INFORMATION_SCHEMA'
        condition: selection
      fields:
        - url.path
        - http.request.body.content
        - http.response.status_code

  - question: What is the target application and database technology?
    context: sqlmap adapts techniques based on detected database management systems.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - url.path
        - http.response.headers
        - http.response.status_code

  - question: Are there successful SQL injection indicators in responses?
    context: Database errors or unexpected data in responses indicate successful injection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.response.body.content
        - http.response.status_code
        - http.response.headers

  - question: What process launched sqlmap on the source system?
    context: Understanding the execution context helps determine if usage is authorized.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          Hostname|expand: '%src_ip%'
          CommandLine|contains:
            - 'sqlmap'
            - 'python'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid

  - question: Are there file operations related to sqlmap execution?
    context: sqlmap creates output files and may download database content.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetFilename|contains:
            - 'sqlmap'
            - '.sql'
            - 'dump'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessName

  - question: Has data exfiltration occurred following SQL injection?
    context: Successful attacks may lead to database dumping and data theft.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - bytes_in
        - bytes_out
        - duration
        - dst_port

  - question: Are there other SQL injection tools being used?
    context: Multiple injection tools may indicate comprehensive database attack campaign.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'sql'
            - 'injection'
            - 'database'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - dst_port

  - question: Are other web applications being targeted from this source?
    context: Attackers often scan multiple applications for SQL injection vulnerabilities.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.request.method
        - user_agent.original