# VALIDATION ERRORS:
# YAML Syntax Errors:
#   - Invalid syntax at line 1, column 35: mapping values are not allowed here
#
# ORIGINAL PLAYBOOK CONTENT:
name: ET JA3 Hash - WPScan (tested: 2.9 Kali)
id: 22028556
description: |
  Detects TLS connections with JA3 hash associated with WPScan WordPress vulnerability scanner.
  Legitimate when used by authorized security teams for WordPress security assessments.
  May indicate unauthorized reconnaissance or attack preparation against WordPress sites.
type: detection
detection_id: 2028556
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What is the TLS fingerprint for this WPScan session?
    context: JA3 hash confirms WPScan v2.9 usage and specific scanning methodology.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - tls.client.ja3
        - tls.client.server_name
        - tls.version
        - src_ip
        - dst_ip
        - dst_port

  - question: Is this WordPress scanning from an authorized security assessment?
    context: Legitimate WPScan usage should be part of documented security testing programs.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 80
            - 443
            - 8080
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - bytes_out
        - connection_state

  - question: What WordPress-specific HTTP requests are being made?
    context: WPScan generates characteristic HTTP patterns for WordPress enumeration.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.path
        - user_agent.original

  - question: Are there WordPress enumeration attempts in the HTTP traffic?
    context: WPScan systematically enumerates WordPress themes, plugins, and users.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - '/wp-content/themes/'
            - '/wp-content/plugins/'
            - '/wp-admin/'
            - '/wp-json/'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code
        - http.response.headers

  - question: What WordPress version and components are being fingerprinted?
    context: Understanding enumeration scope helps assess whether scanning is authorized or malicious.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'readme.html'
            - 'wp-includes/version.php'
            - 'wp-content'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.response.body.content

  - question: Are there brute force attempts against WordPress login?
    context: WPScan includes password attack capabilities against WordPress authentication.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - 'wp-login.php'
            - 'xmlrpc.php'
          http.request.method: 'POST'
        condition: selection
      fields:
        - url.path
        - http.request.body.content
        - http.response.status_code

  - question: What process executed WPScan on the source system?
    context: Process analysis helps determine if WPScan usage is authorized or malicious.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          Hostname|expand: '%src_ip%'
          CommandLine|contains:
            - 'wpscan'
            - 'ruby'
            - '/usr/bin/wpscan'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid

  - question: Are there file operations related to WPScan output?
    context: WPScan creates output files containing WordPress vulnerability scan results.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetFilename|contains:
            - 'wpscan'
            - '.log'
            - 'wordpress'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessName

  - question: Has vulnerability exploitation followed the WordPress reconnaissance?
    context: Malicious actors may use WPScan for initial reconnaissance before launching attacks.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'wordpress'
            - 'exploit'
            - 'attack'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - dst_port

  - question: Are there other WordPress security tools being used?
    context: Multiple WordPress testing tools may indicate comprehensive authorized assessment.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'wordpress'
            - 'wp'
            - 'cms'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - tls.client.ja3

  - question: Are multiple WordPress sites being scanned from this source?
    context: Broad WordPress scanning may indicate systematic reconnaissance or authorized assessment program.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - 'wp-'
            - 'wordpress'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.request.method
        - user_agent.original