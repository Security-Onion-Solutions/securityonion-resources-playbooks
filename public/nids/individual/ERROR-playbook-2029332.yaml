# VALIDATION ERRORS:
# Sigma Query Errors:
#   - Question 5: Invalid logsource category 'driver'. Valid categories: alert, network, firewall, proxy, webserver, process_creation, file_event, network_connection, dns, registry_event...
#   - Question 10: Invalid logsource category 'authentication'. Valid categories: alert, network, firewall, proxy, webserver, process_creation, file_event, network_connection, dns, registry_event...
#
# ORIGINAL PLAYBOOK CONTENT:
name: ET MALWARE Mimikatz x86 Mimidrv.sys File Transfer Over SMB
id: 22029332
description: |
  Detects transfer of Mimikatz x86 driver component (mimidrv.sys) over SMB protocol.
  This driver enables kernel-level credential access but may be used legitimately by security professionals.
type: detection
detection_id: 2029332
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What driver file was transferred over SMB to trigger this detection?
    context: Identifying the specific driver file helps confirm if this is the Mimikatz driver component.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - smb.filename
        - smb.path
        - file.size
        - file.hash.md5
        - file.hash.sha256

  - question: Is this driver transfer part of authorized security testing?
    context: Security professionals may legitimately use Mimikatz drivers for penetration testing or forensic analysis.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 445
        condition: selection
      fields:
        - dst_ip
        - bytes_in
        - bytes_out
        - duration

  - question: What administrative privileges were used for this SMB transfer?
    context: Driver installation typically requires administrative privileges, indicating the compromise level.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: smb
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - smb.user
        - smb.domain
        - smb.share
        - smb.action

  - question: What other Mimikatz components were transferred alongside the driver?
    context: Attackers typically transfer both the main executable and driver components together.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: smb
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - smb.filename
        - smb.action
        - file.size

  - question: Has the driver been loaded into the kernel on the destination system?
    context: Driver loading is the critical step that enables kernel-level credential access.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: driver
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          driver.name|contains: 'mimidrv'
        condition: selection
      fields:
        - driver.name
        - driver.path
        - driver.loaded
        - driver.signed

  - question: What kernel-level credential access attempts occurred after driver loading?
    context: The Mimikatz driver enables direct memory access to extract credentials from kernel structures.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - '!+'
            - '!processprotect'
            - 'privilege::debug'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User

  - question: Are there signs of LSASS process manipulation following driver installation?
    context: The driver enables advanced LSASS manipulation techniques for credential extraction.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetImage|contains: 'lsass.exe'
        condition: selection
      fields:
        - SourceImage
        - TargetImage
        - GrantedAccess
        - CallTrace

  - question: What persistence mechanisms were established after driver deployment?
    context: Attackers often establish persistence to maintain kernel-level access across reboots.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetObject|contains:
            - 'Services\mimidrv'
            - 'CurrentControlSet\Services'
        condition: selection
      fields:
        - TargetObject
        - Details
        - EventType

  - question: Has this driver variant been deployed to other systems?
    context: Widespread driver deployment indicates a sophisticated attack requiring immediate containment.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name: 'ET MALWARE Mimikatz x86 Mimidrv.sys File Transfer Over SMB'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - host.hostname

  - question: What privileged account activity occurred after kernel access was established?
    context: Kernel-level access enables advanced credential theft affecting high-privilege accounts.
    range: +24h
    query: |
      aggregation: true
      logsource:
        category: authentication
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          user.name|contains:
            - 'admin'
            - 'service'
            - 'krbtgt'
        condition: selection
      fields:
        - user.name
        - event.outcome
        - dst_ip
        - logon_type

  - question: Are there indicators of advanced persistent threat techniques following driver installation?
    context: Kernel-level access enables sophisticated APT techniques like golden ticket attacks.
    range: +48h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - 'kerberos::golden'
            - 'kerberos::silver'
            - 'dcsync'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User