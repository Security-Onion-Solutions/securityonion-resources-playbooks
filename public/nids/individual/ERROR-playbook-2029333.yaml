# VALIDATION ERRORS:
# Sigma Query Errors:
#   - Question 5: Invalid logsource category 'driver'. Valid categories: alert, network, firewall, proxy, webserver, process_creation, file_event, network_connection, dns, registry_event...
#
# ORIGINAL PLAYBOOK CONTENT:
name: ET MALWARE Mimikatz x64 Mimidrv.sys File Transfer Over SMB
id: 22029333
description: |
  Detects transfer of Mimikatz x64 driver component (mimidrv.sys) over SMB protocol.
  This 64-bit driver enables kernel-level credential access but may be used legitimately by security professionals.
type: detection
detection_id: 2029333
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What x64 driver file was transferred over SMB to trigger this alert?
    context: Confirming the specific 64-bit driver file helps validate this is the Mimikatz kernel component.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - smb.filename
        - smb.path
        - file.size
        - file.hash.md5
        - file.hash.sha256

  - question: Is this x64 driver transfer part of authorized penetration testing?
    context: Security teams may legitimately deploy 64-bit Mimikatz drivers for testing on x64 systems.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 445
        condition: selection
      fields:
        - dst_ip
        - bytes_in
        - bytes_out
        - duration

  - question: What user account has administrative rights to transfer kernel drivers?
    context: x64 driver installation requires elevated privileges and proper code signing on modern systems.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: smb
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - smb.user
        - smb.domain
        - smb.share
        - smb.action

  - question: What other x64 Mimikatz components were transferred in this session?
    context: Complete x64 Mimikatz deployment typically includes both executable and driver components.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: smb
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - smb.filename
        - smb.action
        - file.size

  - question: Has the x64 driver been successfully loaded on the target system?
    context: x64 systems have additional security controls that may prevent unsigned driver loading.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: driver
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          driver.name|contains: 'mimidrv'
        condition: selection
      fields:
        - driver.name
        - driver.path
        - driver.loaded
        - driver.signed

  - question: Are there signs of kernel security bypass techniques being employed?
    context: x64 systems require bypassing kernel security features like Driver Signature Enforcement.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - 'bcdedit'
            - 'testsigning'
            - 'nointegritychecks'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User

  - question: What x64-specific credential extraction techniques were used after driver loading?
    context: x64 Mimikatz driver enables advanced techniques specific to 64-bit architecture.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - '!processprotect'
            - 'sekurlsa::wdigest'
            - 'sekurlsa::kerberos'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User

  - question: Are there indicators of advanced x64 memory manipulation techniques?
    context: x64 driver enables sophisticated memory access patterns for credential extraction.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetImage|contains: 'lsass.exe'
          GrantedAccess|contains:
            - '0x1FFFFF'
            - '0x1010'
        condition: selection
      fields:
        - SourceImage
        - TargetImage
        - GrantedAccess
        - CallTrace

  - question: Has this x64 driver variant been deployed across multiple systems?
    context: Enterprise-wide x64 driver deployment indicates a coordinated advanced persistent threat.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name: 'ET MALWARE Mimikatz x64 Mimidrv.sys File Transfer Over SMB'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - host.hostname

  - question: What domain-level credential theft occurred after x64 kernel access?
    context: x64 kernel access enables sophisticated domain-level attacks like DCSync and golden tickets.
    range: +24h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - 'lsadump::dcsync'
            - 'kerberos::golden'
            - 'sid:S-1-5-21'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User

  - question: Are there signs of x64-specific persistence mechanisms being established?
    context: x64 systems require specific techniques for maintaining persistent kernel-level access.
    range: +48h
    query: |
      aggregation: true
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetObject|contains:
            - 'Services\mimidrv'
            - 'BootExecute'
            - 'CurrentControlSet\Services'
        condition: selection
      fields:
        - TargetObject
        - Details
        - EventType