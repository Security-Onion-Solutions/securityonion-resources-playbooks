name: ET WEB_SPECIFIC_APPS NetVIOS Portal SQL Injection Attempt -- page.asp NewsID INSERT
id: 22004160
description: |
  Detects SQL injection attempts targeting NetVIOS Portal's News page via INSERT statements in NewsID parameter.
  May trigger on legitimate database operations or testing activities involving INSERT commands.
type: detection
detection_id: 2004160
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the NewsID parameter?
    context: Understanding the exact INSERT statement reveals the attacker's intent and target database structure.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: What specific data was the attacker attempting to insert into the database?
    context: Analyzing the INSERT payload helps determine if this is reconnaissance or active exploitation.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: Is this normal administrative activity for the NetVIOS Portal application?
    context: Legitimate administrators may perform database operations that could trigger this alert.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/News/page.asp'
        condition: selection
      fields:
        - src_ip
        - user_agent.original

  - question: What other SQL injection attempts occurred from this source IP?
    context: Multiple injection attempts indicate systematic exploitation rather than accidental triggering.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.full

  - question: What was the sequence of requests leading up to this injection attempt?
    context: Understanding the attack progression helps identify reconnaissance and exploitation phases.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.method

  - question: Did the application return database error messages or sensitive information?
    context: Error messages can confirm successful injection and reveal database structure to attackers.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.bytes

  - question: Was any data successfully inserted or modified in the database?
    context: Successful exploitation may result in unauthorized data insertion or privilege escalation.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.full
        - http.response.bytes

  - question: What user agent and request headers were used in this attack?
    context: Analyzing request characteristics helps identify automated tools versus manual exploitation.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - user_agent.original
        - http.request.referrer
        - http.request.headers

  - question: Are there signs of successful authentication bypass or privilege escalation?
    context: SQL injection may be used to bypass login mechanisms or elevate privileges within the application.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'admin'
            - 'login'
            - 'auth'
        condition: selection
      fields:
        - url.full
        - http.response.status_code

  - question: What specific NetVIOS Portal functionality was being targeted?
    context: Understanding the targeted functionality helps assess potential impact and data exposure.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '.asp'
        condition: selection
      fields:
        - url.path
        - url.query

  - question: Are other systems showing similar NetVIOS Portal exploitation attempts?
    context: Coordinated attacks across multiple systems indicate a broader campaign targeting this vulnerability.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'NetVIOS Portal SQL Injection'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name