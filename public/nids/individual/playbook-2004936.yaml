name: ET WEB_SPECIFIC_APPS Neuron Blog SQL Injection Attempt -- addcomment2.php commentname SELECT
id: 22004936
description: |
  Detects SQL injection attempts targeting Neuron Blog's comment functionality via SELECT statements in commentname parameter.
  May trigger on legitimate comment submissions containing SQL-like keywords or database query patterns.
type: detection
detection_id: 2004936
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the commentname parameter?
    context: Understanding the SELECT statement reveals the attacker's intent to extract data through the comment form.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: What specific database information was the attacker attempting to extract?
    context: Analyzing the SELECT payload helps determine if this targets user data, credentials, or system information.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: Is this a legitimate comment containing SQL-like text or technical discussion?
    context: Users may legitimately post comments about databases, programming, or technical topics containing SQL keywords.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'addcomment'
        condition: selection
      fields:
        - src_ip
        - user_agent.original

  - question: What other SQL injection attempts were made against the Neuron Blog platform?
    context: Multiple injection attempts indicate systematic exploitation rather than accidental SQL keyword usage.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'Neuron Blog SQL Injection'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.full

  - question: What was the attack progression before this comment injection attempt?
    context: Understanding prior reconnaissance helps identify if this is targeted exploitation or automated scanning.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.method

  - question: Did the comment injection reveal database information or error messages?
    context: Successful injection through comment forms can expose database structure and sensitive information.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.bytes

  - question: Was the malicious comment successfully posted to the blog?
    context: Successful comment posting may result in stored XSS or persistent database compromise.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.full
        - http.response.bytes

  - question: What attack tools or automation were used for this comment injection?
    context: Identifying attack tools helps understand threat actor capabilities and detection evasion techniques.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - user_agent.original
        - http.request.referrer
        - http.request.headers

  - question: Are there signs of successful authentication bypass through comment injection?
    context: Comment form injection may be used to bypass authentication or gain unauthorized access to admin functions.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'admin'
            - 'login'
            - 'auth'
        condition: selection
      fields:
        - url.full
        - http.response.status_code

  - question: What specific blog functionality was targeted through the comment form?
    context: Understanding targeted functionality helps assess potential impact on blog content and user data.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '.php'
        condition: selection
      fields:
        - url.path
        - url.query

  - question: Are other Neuron Blog instances experiencing similar comment-based attacks?
    context: Coordinated attacks across multiple blog instances indicate a targeted campaign against this platform.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'Neuron Blog SQL Injection'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name