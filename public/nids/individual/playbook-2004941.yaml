name: ET WEB_SPECIFIC_APPS Neuron Blog SQL Injection Attempt -- addcomment2.php commentname UPDATE
id: 22004941
description: |
  Detects SQL injection attempts targeting Neuron Blog's addcomment2.php script using UPDATE SET statements.
  This targets CVE-2006-6993 vulnerability in the commentname parameter for data modification attacks.
  May trigger on legitimate database update operations containing similar SQL syntax.
type: detection
detection_id: 2004941
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete UPDATE SET payload in the commentname parameter?
    context: Understanding the exact UPDATE statement reveals what data the attacker is attempting to modify in the database.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: What specific fields and values is the attacker attempting to modify?
    context: Analyzing the UPDATE SET clause reveals the target columns and malicious values being injected.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/pages/addcomment2.php'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  # Type 2: Triage Assessment
  - question: Is this authorized data modification for the blog application?
    context: Legitimate blog updates should occur through administrative interfaces, not comment submission forms.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/pages/addcomment2.php'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: Does this source IP have legitimate administrative privileges for the blog system?
    context: Authorized administrators typically don't perform database updates through vulnerable web forms.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.method

  # Type 3: Activity Context
  - question: What reconnaissance activity preceded this UPDATE injection attempt?
    context: Attackers typically perform database enumeration to identify target tables and columns before modification attacks.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.category|contains: 'web-application-attack'
        condition: selection
      fields:
        - rule.name
        - url.path
        - http.request.method

  - question: Were there previous attempts to access or enumerate the target database tables?
    context: UPDATE attacks often follow successful SELECT or UNION attacks to understand database structure.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - url.path
        - http.request.method

  # Type 4: Impact Assessment
  - question: Did the UPDATE injection attempt successfully modify database records?
    context: Successful UPDATE attacks can compromise data integrity and create persistent backdoors.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/pages/addcomment2.php'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.bytes

  - question: Are there signs of privilege escalation or administrative account modification?
    context: UPDATE attacks often target user tables to escalate privileges or modify administrative credentials.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.query
        - http.response.bytes
        - http.request.method

  # Type 5: Forensic Deep-Dive
  - question: What specific WHERE conditions is the attacker using to target records for modification?
    context: The UPDATE WHERE clause reveals whether this is targeted modification or broad data corruption.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/pages/addcomment2.php'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - http.request.headers.content_type

  - question: Are there attempts to modify authentication credentials or user permissions?
    context: UPDATE attacks commonly target user tables to create backdoor accounts or escalate existing privileges.
    range: +/-15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/pages/addcomment2.php'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - http.response.status_code

  - question: Is this part of a broader campaign involving multiple database modification techniques?
    context: Advanced attackers often combine UPDATE with other SQL injection techniques for comprehensive database compromise.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - url.path
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other database systems experiencing similar UPDATE injection attacks?
    context: Coordinated attacks may target multiple systems for simultaneous data modification or privilege escalation.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'UPDATE'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: Is this attack coordinated with other persistence mechanisms across the enterprise?
    context: UPDATE attacks may be part of broader campaigns to establish persistent access across multiple systems.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains:
            - 'web-application-attack'
            - 'trojan-activity'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - rule.category