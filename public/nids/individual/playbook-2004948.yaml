name: ET WEB_SPECIFIC_APPS Neuron Blog SQL Injection Attempt -- addcomment2.php commentmail UPDATE
id: 22004948
description: |
  Detects SQL injection attempts targeting Neuron Blog's addcomment2.php via commentmail parameter with UPDATE statements.
  May trigger on legitimate database operations but likely indicates CVE-2006-6993 exploitation attempt.
type: detection
detection_id: 2004948
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the commentmail parameter?
    context: Understanding the exact UPDATE statement reveals the attacker's intent to modify database records.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: Is this a legitimate comment submission to the Neuron Blog application?
    context: Legitimate users may submit comments, but SQL keywords in parameters indicate malicious intent.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/pages/addcomment2.php'
        condition: selection
      fields:
        - url.query
        - http.request.method
        - dst_ip

  - question: What other SQL injection attempts originated from this source IP?
    context: Attackers often try multiple injection vectors to find vulnerabilities in web applications.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.full

  - question: What database tables or data might be targeted by this UPDATE statement?
    context: UPDATE statements can modify critical application data, user accounts, or system configurations.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.query
        - payload

  - question: Did the web server respond with database errors or sensitive information?
    context: Error messages can reveal database structure and confirm successful injection attempts.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
          http.response.status_code|contains:
            - 500
            - 200
        condition: selection
      fields:
        - http.response.body.content
        - http.response.status_code
        - http.response.status_message

  - question: What authentication state was the attacker in when attempting this injection?
    context: Unauthenticated attacks indicate external threats, while authenticated attacks suggest compromised accounts.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'login'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: Are there signs of successful database modification following this attempt?
    context: Successful UPDATE injections may be followed by application behavior changes or data corruption.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.path
        - http.request.method
        - bytes_out

  - question: What user-agent and HTTP headers accompanied this injection attempt?
    context: Attacker tooling and automation can be identified through HTTP client characteristics.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.headers
        - user_agent
        - http.request.referrer

  - question: Has this source IP targeted other web applications on the network?
    context: Attackers often scan multiple applications for SQL injection vulnerabilities in campaigns.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '.php'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query

  - question: Are there other hosts showing similar Neuron Blog SQL injection attempts?
    context: Coordinated attacks may target multiple instances of the same vulnerable application.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'Neuron Blog SQL Injection'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.full

  - question: What is the geographic origin and reputation of the attacking IP address?
    context: IP reputation and geolocation help determine threat actor attribution and blocking decisions.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - src_ip
        - geoip.country_name
        - threat_intel.reputation