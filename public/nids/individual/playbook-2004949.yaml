name: ET WEB_SPECIFIC_APPS Neuron Blog SQL Injection Attempt -- addcomment2.php commentwebsite SELECT
id: 22004949
description: |
  Detects SQL injection attempts targeting Neuron Blog's addcomment2.php via commentwebsite parameter with SELECT statements.
  May trigger on legitimate database queries but likely indicates CVE-2006-6993 exploitation for data extraction.
type: detection
detection_id: 2004949
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL SELECT injection payload in the commentwebsite parameter?
    context: Understanding the exact SELECT statement reveals what database information the attacker is trying to extract.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: Is this a legitimate website URL submission to the comment form?
    context: Comment forms typically accept website URLs, but SQL keywords indicate malicious injection attempts.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/pages/addcomment2.php'
        condition: selection
      fields:
        - url.query
        - http.request.method
        - user_agent

  - question: What database tables or columns is the attacker attempting to query?
    context: SELECT statements with FROM clauses reveal the attacker's target data and database structure knowledge.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - payload
        - url.query

  - question: Did the web server return database query results or error messages?
    context: Successful SELECT injections may return sensitive data in HTTP responses or reveal database errors.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.body.content
        - http.response.status_code
        - bytes_out

  - question: What other SQL injection vectors has this attacker attempted?
    context: Attackers typically try multiple injection types to find successful exploitation methods.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Are there signs of automated SQL injection scanning tools?
    context: Rapid sequential requests with varying SQL payloads indicate automated vulnerability scanners.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - user_agent
        - http.request.method

  - question: What sensitive data could be exposed through this SELECT injection?
    context: Understanding potential data exposure helps prioritize incident response and breach notification requirements.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
          bytes_out|gt: 1000
        condition: selection
      fields:
        - http.response.body.content
        - bytes_out
        - http.response.headers

  - question: Has this attacker successfully authenticated to the application?
    context: Authenticated attacks may indicate compromised credentials or privilege escalation attempts.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 302
        condition: selection
      fields:
        - url.path
        - http.request.headers
        - http.response.headers

  - question: Are there other Neuron Blog installations being targeted simultaneously?
    context: Coordinated attacks against multiple instances suggest automated exploitation campaigns.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'Neuron Blog'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.full
        - rule.name

  - question: What is the attack timeline and frequency pattern?
    context: Understanding attack timing helps determine if this is opportunistic scanning or targeted exploitation.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'WEB_SPECIFIC_APPS'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: Are there indicators of data exfiltration following this injection attempt?
    context: Successful SELECT injections may be followed by large data transfers or suspicious file access patterns.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_ip|expand: '%src_ip%'
          bytes_out|gt: 10000
        condition: selection
      fields:
        - bytes_out
        - dst_port
        - protocol