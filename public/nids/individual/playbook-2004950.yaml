name: ET WEB_SPECIFIC_APPS Neuron Blog SQL Injection Attempt -- addcomment2.php commentwebsite UNION SELECT
id: 22004950
description: |
  Detects SQL injection attempts targeting Neuron Blog's addcomment2.php via commentwebsite parameter with UNION SELECT statements.
  May trigger on legitimate database operations but likely indicates CVE-2006-6993 exploitation for advanced data extraction.
type: detection
detection_id: 2004950
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete UNION SELECT injection payload in the commentwebsite parameter?
    context: UNION SELECT statements are advanced SQL injection techniques used to extract data from multiple database tables.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: Is this a sophisticated SQL injection attempt or automated scanning?
    context: UNION SELECT injections require database structure knowledge and indicate advanced attacker capabilities.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - url.path
        - payload

  - question: What database tables is the attacker attempting to join with UNION?
    context: UNION SELECT attacks target specific tables to extract sensitive data like user credentials or system information.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - payload
        - url.query

  - question: Did the web server return combined query results from multiple tables?
    context: Successful UNION SELECT injections return data from multiple database tables in a single response.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
          bytes_out|gt: 500
        condition: selection
      fields:
        - http.response.body.content
        - http.response.status_code
        - bytes_out

  - question: What reconnaissance activity preceded this advanced injection attempt?
    context: UNION SELECT attacks often follow initial probing to determine database structure and column counts.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'addcomment2.php'
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Are there signs of column enumeration or database fingerprinting?
    context: Attackers typically test column counts and data types before crafting successful UNION SELECT payloads.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'SQL Injection'
            - 'Database'
        condition: selection
      fields:
        - rule.name
        - url.full
        - dst_ip

  - question: What sensitive data could be exposed through this UNION SELECT attack?
    context: UNION SELECT injections can extract user passwords, admin credentials, or sensitive business data.
    range: +10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
          http.response.status_code: 200
        condition: selection
      fields:
        - http.response.body.content
        - bytes_out
        - http.response.headers

  - question: Has the attacker attempted to escalate privileges or access admin functions?
    context: Successful data extraction may be followed by attempts to access administrative interfaces or elevated functions.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'admin'
            - 'login'
            - 'dashboard'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: Are there other advanced SQL injection techniques being employed?
    context: Sophisticated attackers may combine multiple injection methods for comprehensive database compromise.
    range: -3h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'UNION'
            - 'SELECT'
            - 'INSERT'
            - 'UPDATE'
            - 'DELETE'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Is this part of a coordinated attack against multiple Neuron Blog instances?
    context: Advanced attackers may target multiple vulnerable installations simultaneously for maximum impact.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'Neuron Blog'
          rule.name|contains: 'UNION SELECT'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.full

  - question: What is the attacker's persistence and follow-up activity pattern?
    context: Successful UNION SELECT attacks may be followed by backdoor installation or continued data extraction.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - bytes_in
        - bytes_out