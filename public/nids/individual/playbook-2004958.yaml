name: ET WEB_SPECIFIC_APPS Neuron Blog SQL Injection Attempt -- addcomment2.php comment DELETE
id: 22004958
description: |
  Detects SQL injection attempts targeting Neuron Blog's addcomment2.php script using DELETE statements.
  May trigger on legitimate database operations or security testing of the application.
type: detection
detection_id: 2004958
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What data is the attacker attempting to DELETE from the database?
    context: DELETE payloads reveal what data the attacker is trying to destroy or remove from the application.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - rule.name

  - question: Which database table and records are being targeted for deletion?
    context: Table names and WHERE conditions in DELETE statements reveal the scope of data destruction.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.method
        - url.query
        - http.request.body.content

  - question: Is this part of legitimate data management or comment moderation?
    context: Normal blog operations may include DELETE statements for removing spam or inappropriate comments.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/pages/addcomment2.php'
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Are there attempts to DELETE all records or perform mass deletion?
    context: Mass deletion attempts indicate destructive intent and potential data loss.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/pages/addcomment2.php'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.query
        - http.request.body.content

  - question: Was the DELETE statement successfully executed by the database?
    context: Successful execution confirms data loss and potential application damage.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.headers

  - question: What was the attack progression leading to the DELETE attempt?
    context: Understanding the attack sequence reveals if deletion is part of data theft or destruction campaign.
    range: -6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Are there attempts to DELETE security logs or audit trails?
    context: Deletion of security logs indicates attempts to cover tracks and hide malicious activity.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: Has the attacker verified the success of the DELETE operation?
    context: Follow-up queries to verify deleted data confirm successful exploitation and data loss.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Are there data backup or recovery attempts after the DELETE?
    context: Backup attempts may indicate legitimate recovery efforts or attacker data theft before deletion.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.path
        - http.request.method
        - http.response.headers

  - question: What is the impact scope of the DELETE operation?
    context: Understanding deletion scope helps assess data loss and recovery requirements.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/pages/addcomment2.php'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.query
        - http.request.body.content

  - question: Are similar DELETE-based attacks occurring across other systems?
    context: Coordinated DELETE attacks may indicate a broader destructive campaign targeting multiple applications.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'DELETE'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name