name: ET WEB_SPECIFIC_APPS NetClassifieds Premium Edition SQL Injection Attempt -- ViewCat.php s_user_id ASCII
id: 22006551
description: |
  Detects SQL injection attempts targeting NetClassifieds Premium Edition using ASCII function with SELECT statements in ViewCat.php s_user_id parameter.
  May trigger on legitimate database queries using ASCII functions for data processing.
type: detection
detection_id: 2006551
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete ASCII-based SQL injection payload detected?
    context: ASCII function usage in SQL injection reveals blind injection techniques and data extraction methods.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.uri
        - http.request.body.content
        - url.full
        - http.request.method

  - question: Is this ASCII function usage part of legitimate application functionality?
    context: Some applications legitimately use ASCII functions for character processing and validation.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/ViewCat.php'
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method

  - question: What reconnaissance activity preceded this blind SQL injection attempt?
    context: ASCII-based injections often follow initial probing to identify vulnerable parameters.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code

  - question: Are there other blind SQL injection techniques being used against this target?
    context: Attackers typically combine multiple blind injection methods to extract data efficiently.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.category|contains: 'web-application-attack'
        condition: selection
      fields:
        - rule.name
        - url.path

  - question: What was the application's response to this ASCII-based injection?
    context: Response timing and content differences reveal if blind injection was successful.
    range: +2m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - network.bytes

  - question: What database schema information is being extracted through ASCII queries?
    context: ASCII functions are often used to extract table names, column names, and sensitive data character by character.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/ViewCat.php'
        condition: selection
      fields:
        - url.query
        - http.response.status_code

  - question: Is there evidence of successful data extraction following ASCII injections?
    context: Repeated ASCII queries with incremental parameters indicate systematic data extraction.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/ViewCat.php'
        condition: selection
      fields:
        - url.query
        - http.response.body.bytes

  - question: What automated tools or scripts are being used for this injection campaign?
    context: User-agent strings and request patterns reveal if attacks are automated or manual.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - user_agent.original
        - http.request.headers

  - question: Are other NetClassifieds installations being targeted with similar ASCII injection techniques?
    context: Attackers often scan for multiple instances of vulnerable applications across networks.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'NetClassifieds'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - rule.name

  - question: What is the attack pattern and timing of this blind SQL injection campaign?
    context: Understanding attack timing helps identify automated tools and attack sophistication.
    range: -6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains: 'web-application-attack'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Are there indicators of lateral movement following successful SQL injection?
    context: Successful database compromise may lead to credential theft and network lateral movement.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol