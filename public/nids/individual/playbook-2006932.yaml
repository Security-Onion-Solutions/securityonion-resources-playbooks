name: ET WEB_SPECIFIC_APPS PHP-Nuke SQL Injection Attempt -- modules.php cid UPDATE
id: 22006932
description: |
  Detects SQL injection attempts targeting PHP-Nuke CMS via the modules.php script with UPDATE statements in the cid parameter.
  This exploits CVE-2006-6234 and may indicate legitimate database administration or malicious data manipulation attempts.
type: detection
detection_id: 2006932
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What is the complete SQL injection payload being attempted against the PHP-Nuke application?
    context: Analyzing the exact SQL syntax reveals the attacker's intent and the specific database operations being attempted.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - http.request.body.content
        - src_ip
        - dst_ip

  - question: Is this UPDATE statement part of legitimate PHP-Nuke administration or content management?
    context: Eliminating false positives by checking if this matches documented administrative procedures or authorized database operations.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/modules.php"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.user_agent
        - http.response.status_code

  - question: What other web application attack patterns has this source IP attempted recently?
    context: Understanding the broader attack campaign helps assess if this is part of automated scanning or targeted exploitation.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains:
            - "web-application-attack"
            - "attempted-recon"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path
        - http.request.method

  - question: Has the SQL injection attempt successfully executed or returned database errors?
    context: Determining if the attack was successful helps assess the immediate impact and data exposure risk.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - network.bytes_received

  - question: What PHP-Nuke modules and database tables are being targeted by this injection attempt?
    context: Understanding the specific targets helps assess what data or functionality the attacker is trying to access or modify.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/modules.php"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.user_agent

  - question: Are there signs of successful data exfiltration or database enumeration following this attack?
    context: Assessing whether the attacker has progressed beyond initial injection to actual data theft or system reconnaissance.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - network.bytes_received
        - http.response.status_code

  - question: What web server logs and database activity occurred during the injection attempt?
    context: Correlating web server responses with database activity helps understand the full impact of the SQL injection.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - "mysql"
            - "apache"
            - "nginx"
            - "php"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid

  - question: Has this attacker attempted to exploit other known PHP-Nuke vulnerabilities?
    context: Understanding the attacker's knowledge of PHP-Nuke helps assess the sophistication and potential for additional exploitation.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "PHP-Nuke"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path
        - rule.cve

  - question: Are there indicators of post-exploitation activity such as file uploads or shell commands?
    context: Determining if the SQL injection has been leveraged for further system compromise or persistent access.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.request.method: "POST"
        condition: selection
      fields:
        - url.path
        - http.request.body.content
        - http.response.status_code

  - question: What sensitive data or user information could be exposed through this PHP-Nuke database attack?
    context: Assessing the potential data breach impact helps prioritize response efforts and user notification requirements.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - "config"
            - "database"
            - "user"
            - "password"
        condition: selection
      fields:
        - TargetFilename
        - ProcessName
        - file.size

  - question: Are other web applications on this server being targeted with similar SQL injection attacks?
    context: Understanding if this is part of a broader web application attack campaign against multiple applications or servers.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "SQL Injection"
        condition: selection
      fields:
        - src_ip
        - rule.name
        - url.path
        - http.request.method