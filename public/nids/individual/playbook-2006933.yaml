name: ET WEB_SPECIFIC_APPS PHP-Nuke SQL Injection Attempt -- modules.php pid SELECT
id: 22006933
description: |
  Detects SQL injection attempts targeting PHP-Nuke's modules.php with SELECT statements in the pid parameter.
  May trigger on legitimate database queries or administrative tools that use similar patterns.
type: detection
detection_id: 2006933
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the pid parameter?
    context: Understanding the exact payload reveals the attacker's intent and target database structure.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query
        - http.request.method

  - question: What other parameters were included in the modules.php request?
    context: Additional parameters may reveal the specific module being targeted or exploitation technique.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.headers

  - question: Is this normal administrative access to PHP-Nuke modules?
    context: Legitimate administrators may access modules.php for content management purposes.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/modules.php"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: What preceded this SQL injection attempt?
    context: Understanding the attack sequence helps identify reconnaissance or initial access methods.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: What other web application attacks occurred from this source?
    context: Attackers often probe multiple vulnerabilities during reconnaissance phases.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains:
            - "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Did the SQL injection attempt succeed based on response codes?
    context: HTTP response codes can indicate successful exploitation or error conditions.
    range: +2m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.headers

  - question: What database-related error messages were returned?
    context: Error messages can reveal database type, structure, and exploitation success.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.body.content|contains:
            - "mysql"
            - "sql"
            - "database"
            - "error"
        condition: selection
      fields:
        - http.response.body.content
        - http.response.status_code

  - question: What data was potentially extracted through the SELECT statement?
    context: Successful SQL injection may result in data exfiltration visible in response content.
    range: +10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.body.content
        - http.response.body.bytes

  - question: Are there signs of automated scanning tools or manual exploitation?
    context: User-Agent strings and request patterns help distinguish between automated and manual attacks.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - http.request.headers

  - question: What other PHP-Nuke vulnerabilities were targeted from this source?
    context: Attackers often exploit multiple vulnerabilities in the same application framework.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "PHP-Nuke"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Are other systems in the network being targeted with similar SQL injection attempts?
    context: Coordinated attacks may target multiple web servers with the same vulnerability.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - "SQL Injection"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - rule.name