name: ET SCAN SQLix SQL Injection Vector Scan
id: 22008654
description: |
  Detects SQLix automated SQL injection scanning tool based on distinctive user agent patterns.
  May rarely trigger on legitimate testing tools with similar signatures.
type: detection
detection_id: 2008654
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQLix scanner signature detected in the HTTP headers?
    context: Understanding the exact tool signature helps identify the specific version and capabilities.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.headers
        - http.request.method
        - url.full

  - question: What specific SQL injection vectors is SQLix testing against this target?
    context: Analyzing injection patterns reveals the scope and sophistication of the scanning attempt.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: Is this authorized penetration testing or security assessment?
    context: SQLix is commonly used in legitimate security testing and vulnerability assessments.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: What web applications and endpoints is SQLix systematically probing?
    context: Mapping the scan pattern helps understand the attacker's target selection and methodology.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code

  - question: How extensive is the SQLix scanning campaign across different targets?
    context: Understanding scan scope helps assess whether this is targeted or opportunistic scanning.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.response.status_code

  - question: Are any applications responding positively to SQLix injection attempts?
    context: Identifying vulnerable applications helps prioritize remediation and incident response.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.path
        - http.response.body.bytes
        - http.response.mime_type

  - question: What database error messages or information disclosure occurred during scanning?
    context: Error messages can reveal database types and structure information to attackers.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code|contains:
            - "500"
            - "400"
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.response.body.bytes

  - question: Has SQLix discovered any exploitable SQL injection vulnerabilities?
    context: Successful exploitation attempts following scanning indicate compromised applications.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains: "web-application-attack"
          rule.name|contains: "SQL"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: What follow-up exploitation attempts occurred after the SQLix scan?
    context: Attackers often manually exploit vulnerabilities discovered through automated scanning.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: Are other systems in the network being scanned by SQLix?
    context: Automated scanners often target multiple systems in discovered network ranges.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SQLix"
        condition: selection
      fields:
        - dst_ip
        - rule.name

  - question: Is this part of a broader automated vulnerability scanning campaign?
    context: SQLix usage may indicate comprehensive security testing or malicious reconnaissance.
    range: -12h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains:
            - "attempted-recon"
            - "web-application-attack"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - rule.category