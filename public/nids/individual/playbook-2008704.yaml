name: ET NETBIOS Microsoft Windows NETAPI Stack Overflow Inbound - MS08-067 (14)
id: 22008704
description: |
  Detects MS08-067 NETAPI stack overflow exploitation using Unicode path traversal sequences.
  This variant uses Unicode-encoded "../" patterns to bypass basic path filtering.
  Legitimate SMB traffic should not contain these encoded traversal sequences.
type: detection
detection_id: 2008704
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the Unicode-encoded path traversal sequence in this exploit?
    context: Unicode encoding analysis reveals sophisticated evasion techniques and exploit complexity.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload
        - payload_printable
        - src_ip
        - dst_ip

  - question: Is this Unicode path sequence part of legitimate internationalization?
    context: Understanding normal Unicode usage helps distinguish legitimate operations from exploitation.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 445
        condition: selection
      fields:
        - src_ip
        - bytes_toserver
        - duration

  - question: What SMB negotiation preceded this Unicode traversal attempt?
    context: Understanding SMB protocol negotiation reveals if Unicode support was explicitly requested.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 445
        condition: selection
      fields:
        - conn_state
        - bytes_toserver
        - bytes_toclient

  - question: Did this Unicode exploitation bypass security controls?
    context: Unicode evasion techniques may circumvent basic security filters and detection mechanisms.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.size

  - question: What processes were created following this Unicode traversal?
    context: Successful Unicode exploitation often results in process execution or system compromise.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User

  - question: Are there other Unicode-based evasion attempts from this source?
    context: Multiple Unicode evasion techniques suggest sophisticated attack tools or persistent targeting.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'Unicode'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - timestamp

  - question: What network communications followed this Unicode exploitation?
    context: Successful Unicode-based attacks may establish covert channels or bypass network monitoring.
    range: +3h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - bytes_toclient
        - conn_state

  - question: Has this Unicode evasion technique been used against other targets?
    context: Understanding attack scope helps identify if this is part of an advanced persistent threat campaign.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'path traversal'
        condition: selection
      fields:
        - dst_ip
        - rule.name

  - question: What authentication bypass attempts preceded this Unicode exploitation?
    context: Unicode evasion may be combined with authentication bypass techniques for maximum impact.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 445
            - 139
        condition: selection
      fields:
        - dst_ip
        - conn_state
        - duration

  - question: Are there signs of advanced persistence following Unicode exploitation?
    context: Sophisticated Unicode attacks often include advanced persistence mechanisms.
    range: +6h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - 'system32'
            - 'startup'
            - 'temp'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5

  - question: What other systems show similar Unicode-based exploitation patterns?
    context: Identifying Unicode attack patterns across the enterprise helps assess campaign sophistication.
    range: -72h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'Unicode'
          dst_port: 445
        condition: selection
      fields:
        - dst_ip
        - src_ip
        - rule.name