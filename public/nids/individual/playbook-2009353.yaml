name: ET MALWARE Bredolab Downloader Communicating With Controller
id: 22009353
description: |
  Detects Bredolab downloader trojan communicating with command and control server.
  This malware downloads additional payloads and establishes persistent access.
  May trigger on legitimate applications using similar parameter structures.
type: detection
detection_id: 2009353
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete URI containing the Bredolab communication parameters?
    context: The URI parameters reveal the trojan's identification and communication structure.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - url.path
        - http.request.method

  - question: What unique identifiers were transmitted in the entity_list and uid parameters?
    context: These parameters contain victim system identification and campaign tracking data.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - http.request.headers

  - question: Is this system authorized to make automated HTTP requests to external servers?
    context: Legitimate system management tools may use similar automated communication patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.request.method: "GET"
        condition: selection
      fields:
        - dst_ip
        - url.domain
        - url.path

  - question: What process initiated this Bredolab communication attempt?
    context: Identifying the parent process helps determine the infection vector and execution context.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
        - User

  - question: What network connections were established to download additional payloads?
    context: Bredolab downloaders typically fetch multiple malicious components after initial contact.
    range: -15m/+30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 80
            - 443
            - 8080
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - community_id
        - network.bytes_received

  - question: Has the system successfully downloaded malicious payloads from the C2 server?
    context: Successful payload downloads indicate active compromise requiring immediate containment.
    range: -30m/+2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - http.response.body.bytes
        - url.full
        - http.response.mime_type

  - question: What executable files were created or modified after the Bredolab communication?
    context: Downloaders create new executable files as part of their payload delivery mechanism.
    range: +15m/+4h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetFilename|contains:
            - ".exe"
            - ".dll"
            - ".scr"
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.hash.sha256
        - ProcessGuid

  - question: Are there signs of additional malware execution following the download activity?
    context: Bredolab often delivers multiple malware families requiring comprehensive analysis.
    range: +30m/+6h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          Image|contains:
            - "temp"
            - "appdata"
            - "programdata"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid

  - question: What persistence mechanisms were established by downloaded payloads?
    context: Downloaded malware typically establishes persistence for continued system access.
    range: +15m/+2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetObject|contains:
            - "Run"
            - "RunOnce"
            - "Services"
            - "Winlogon"
        condition: selection
      fields:
        - TargetObject
        - Details
        - ProcessGuid

  - question: Are other systems in the network showing similar Bredolab downloader activity?
    context: Bredolab campaigns often target multiple systems within an organization.
    range: -24h/+1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "Bredolab"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: What DNS queries were made to resolve the C2 server domain?
    context: DNS resolution patterns help identify the complete command and control infrastructure.
    range: -1h/+1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          dns.resolved_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - dns.query.type_name