name: ET MALWARE Gozi check-in / update
id: 22009410
description: |
  Detects Gozi banking trojan communication with command and control servers.
  Identifies specific HTTP parameters used for malware check-ins and updates.
  May rarely trigger on legitimate applications using similar parameter patterns.
type: detection
detection_id: 2009410
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What were the exact HTTP parameters and values in the Gozi check-in request?
    context: Analyzing the specific user_id, version_id, and crc parameters reveals malware configuration and victim identification.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - url.query

  - question: What was the complete HTTP request structure and headers?
    context: Full request analysis helps identify malware variant and communication protocol specifics.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.method
        - http.request.headers
        - user_agent.original
        - url.path

  # Type 2: Triage Assessment
  - question: Is this communication pattern normal for applications on this host?
    context: Legitimate software rarely uses this specific parameter combination, helping confirm malicious activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.domain
        - http.request.method

  # Type 3: Activity Context
  - question: What other network connections occurred from this host around the same time?
    context: Gozi often performs additional reconnaissance and data exfiltration activities.
    range: -15m/+15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.bytes_sent
        - network.bytes_received

  - question: What processes were active on the infected system during this timeframe?
    context: Identifying the malware process and injection targets helps understand infection scope.
    range: -30m/+30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - process.name
        - process.command_line
        - process.parent.name
        - user.name

  # Type 4: Impact Assessment
  - question: Has the malware established persistence mechanisms on the infected system?
    context: Gozi typically creates registry entries and file system artifacts for persistence.
    range: -1h/+1h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - registry.key
        - registry.value.name
        - registry.value.data
        - process.name

  - question: What sensitive data or credentials might have been accessed?
    context: Gozi targets banking credentials and financial information through browser injection.
    range: -2h/+2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          file.name|contains:
            - 'cookies'
            - 'login'
            - 'password'
            - 'wallet'
        condition: selection
      fields:
        - file.path
        - file.name
        - process.name
        - file.accessed

  # Type 5: Forensic Deep-Dive
  - question: What is the malware's command and control infrastructure?
    context: Mapping C2 servers helps identify campaign scope and enables blocking measures.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.question.name
        - dns.resolved_ip
        - dns.question.type

  - question: Are there indicators of data exfiltration or credential theft?
    context: Gozi exfiltrates stolen data through HTTP POST requests to C2 servers.
    range: -2h/+2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.request.method: 'POST'
        condition: selection
      fields:
        - dst_ip
        - url.full
        - http.request.body.bytes
        - http.response.status_code

  # Type 6: Enterprise Correlation
  - question: Are other systems in the network showing similar Gozi activity?
    context: Banking trojans often spread laterally or indicate broader campaign targeting.
    range: -24h/+24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'Gozi'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - host.hostname

  - question: What other malware families or suspicious activities are present enterprise-wide?
    context: Gozi infections may be part of multi-stage attacks or broader threat actor campaigns.
    range: -7d/+1d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.category|contains:
            - 'trojan'
            - 'malware'
            - 'banking'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
        - dst_ip