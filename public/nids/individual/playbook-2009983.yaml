name: ET FTP Possible FTP Daemon Username INSERT INTO SQL Injection Attempt
id: 22009983
description: |
  Detects SQL injection attempts targeting FTP daemon username fields using INSERT INTO syntax.
  May indicate attempts to exploit vulnerable FTP applications with database backends for data manipulation.
  Could be legitimate testing or malicious exploitation targeting data integrity and unauthorized access.
type: detection
detection_id: 2009983
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete INSERT INTO SQL injection payload in the FTP username field?
    context: Understanding the exact insertion syntax reveals attacker intent to create unauthorized records or backdoors.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload_printable
        - alert.signature
        - flow_id
  - question: Is this authorized database testing or legitimate data insertion activity?
    context: INSERT operations may be part of legitimate database maintenance or application testing procedures.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 21
        condition: selection
      fields:
        - dst_ip
        - bytes_toserver
        - flow.state
  - question: What other data manipulation SQL injection techniques were attempted?
    context: Multiple injection methods indicate systematic database manipulation requiring comprehensive security assessment.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          alert.signature|contains:
            - "INSERT"
            - "UPDATE"
            - "SQL Injection"
        condition: selection
      fields:
        - alert.signature
        - dst_port
  - question: Did the FTP service respond indicating successful or failed insertion attempts?
    context: Service responses reveal whether malicious data insertion succeeded and compromised database integrity.
    range: +5m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_ip|expand: '%src_ip%'
          src_port: 21
        condition: selection
      fields:
        - bytes_toclient
        - flow.state
        - community_id
  - question: What was the authentication context surrounding the SQL injection attempt?
    context: Understanding authentication flow helps determine if injection was used for privilege escalation or backdoor creation.
    range: -5m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 21
        condition: selection
      fields:
        - bytes_toserver
        - flow.state
        - community_id
  - question: Are there signs of successful unauthorized account creation or privilege escalation?
    context: Successful INSERT injection may create backdoor accounts requiring immediate security remediation.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          alert.signature|contains:
            - "Authentication"
            - "Login"
            - "Administrator"
        condition: selection
      fields:
        - alert.signature
        - src_ip
        - dst_port
  - question: What other applications were targeted with INSERT-based SQL injection attacks?
    context: Multiple targets indicate coordinated data manipulation campaign requiring enterprise-wide security review.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains:
            - "INSERT"
            - "SQL Injection"
        condition: selection
      fields:
        - alert.signature
        - dst_ip
        - dst_port
  - question: Did the attacker attempt to verify successful data insertion or access new accounts?
    context: Post-injection verification activities indicate successful exploitation requiring immediate containment.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 21
        condition: selection
      fields:
        - bytes_toserver
        - bytes_toclient
        - flow.age
  - question: Are there indicators of database backend compromise or unauthorized data access?
    context: Successful data insertion may compromise database integrity requiring forensic analysis and restoration.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          alert.signature|contains:
            - "Database"
            - "Unauthorized"
            - "Privilege"
        condition: selection
      fields:
        - alert.signature
        - src_ip
        - dst_port
  - question: Is this INSERT injection attempt part of a broader campaign targeting multiple systems?
    context: Coordinated data manipulation attacks indicate sophisticated threat actors requiring threat intelligence coordination.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          alert.signature|contains: "FTP Daemon Username INSERT INTO SQL Injection"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - host.name