name: ET MALWARE Generic Downloader checkin (3)
id: 22010888
description: |
  Detects HTTP requests to PHP scripts with parameter patterns commonly used by generic malware downloaders for check-in communications.
  The combination of parameters (c_pcode, c_pid, c_kind, c_mac) indicates command and control communication.
  Legitimate applications rarely use this specific parameter naming convention.
type: detection
detection_id: 2010888
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What were the specific parameter values transmitted in the downloader check-in?
    context: Analyzing the c_pcode, c_pid, c_kind, and c_mac values reveals campaign identifiers and system information.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method
        - http.request.headers.user_agent

  - question: What PHP script endpoint was contacted for the malware check-in?
    context: The specific PHP script path often indicates the malware family or campaign infrastructure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '.php'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this PHP communication pattern normal for this system's web activity?
    context: Legitimate applications may use PHP scripts but rarely with this specific parameter pattern.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'c_pcode='
            - 'c_pid='
        condition: selection
      fields:
        - dst_ip
        - url.domain
        - count

  - question: Does this activity align with scheduled system maintenance or updates?
    context: Malware check-ins often occur at regular intervals independent of user activity.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          Image|contains:
            - 'schtasks.exe'
            - 'taskeng.exe'
            - 'wscript.exe'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid

  # Type 3: Activity Context
  - question: What process initiated this downloader check-in communication?
    context: Identifying the source process helps determine if this is legitimate software or malware.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
        - ProcessGuid

  - question: What network connections occurred before this check-in request?
    context: Malware often establishes initial connections or downloads components before checking in with C2.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - protocol
        - bytes_sent
        - bytes_received

  - question: Is this part of a recurring communication pattern with the same server?
    context: Downloaders typically maintain regular check-in schedules with their command and control infrastructure.
    range: +/-6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '.php'
        condition: selection
      fields:
        - count
        - url.path
        - url.query

  # Type 4: Impact Assessment
  - question: Did the downloader receive new instructions or payloads after check-in?
    context: Successful check-ins often result in additional malware downloads or command execution.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.full
        - http.response.status_code
        - http.response.body.bytes
        - http.request.method

  - question: Are there signs of additional malware installation or execution?
    context: Downloaders often retrieve and execute secondary payloads after successful C2 communication.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          file.extension|contains:
            - '.exe'
            - '.dll'
            - '.scr'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.hash.sha256
        - ProcessGuid

  # Type 5: Forensic Deep-Dive
  - question: What is the hosting infrastructure profile of the C2 server?
    context: Malware C2 servers often use specific hosting patterns or compromised legitimate websites.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - dns.query.type_name

  - question: What persistence mechanisms has this downloader established?
    context: Downloaders typically ensure persistence through registry modifications or file system changes.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetObject|contains:
            - 'Run'
            - 'RunOnce'
            - 'Service'
            - 'Startup'
        condition: selection
      fields:
        - TargetObject
        - Details
        - ProcessGuid

  # Type 6: Enterprise Correlation
  - question: Are other systems communicating with the same C2 infrastructure?
    context: Successful downloader campaigns often target multiple systems within the same network environment.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'c_pcode='
            - 'c_kind='
        condition: selection
      fields:
        - src_ip
        - count
        - url.domain