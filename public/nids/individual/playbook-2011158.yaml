name: ET WEB_SPECIFIC_APPS RJ-iTop Network Vulnerabilities Scan System id INSERT INTO SQL Injection Attempt
id: 22011158
description: |
  Detects SQL injection attempts targeting RJ-iTop Network Vulnerabilities Scan System via INSERT INTO statements in the id parameter.
  May trigger on legitimate database operations or administrative tools performing bulk data insertion.
type: detection
detection_id: 2011158
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete INSERT INTO SQL injection payload?
    context: The exact payload reveals the attacker's intent to insert malicious data into the database.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method

  - question: What specific table and columns were targeted in the INSERT statement?
    context: Understanding the target database structure helps assess potential impact and data corruption.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: Is this normal administrative activity for the RJ-iTop system?
    context: Legitimate administrators may perform bulk data operations through the web interface.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/roleManager.jsp"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method

  - question: What reconnaissance activity preceded this injection attempt?
    context: Attackers typically probe the application before attempting SQL injection.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: What other SQL injection techniques were attempted against this system?
    context: Attackers often try multiple injection vectors to find successful exploitation methods.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.category|contains:
            - "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - url.path

  - question: Did the INSERT injection succeed based on application responses?
    context: Response codes and content indicate whether the malicious data was successfully inserted.
    range: +2m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content

  - question: What database error messages revealed system information?
    context: Error responses can leak database schema, version, and configuration details.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.body.content|contains:
            - "mysql"
            - "sql"
            - "database"
            - "insert"
            - "error"
        condition: selection
      fields:
        - http.response.body.content
        - http.response.status_code

  - question: What malicious data was attempted to be inserted into the database?
    context: The payload content reveals the attacker's objectives and potential backdoor creation.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: Are there signs of persistent access being established?
    context: INSERT operations may create backdoor accounts or modify authentication mechanisms.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/login"
            - "/auth"
            - "/admin"
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: What other RJ-iTop vulnerabilities were exploited in this session?
    context: Attackers may chain multiple vulnerabilities for comprehensive system compromise.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "RJ-iTop"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Are similar SQL injection attempts occurring across the network?
    context: Coordinated attacks may target multiple vulnerable systems simultaneously.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - "INSERT INTO SQL Injection"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - rule.name