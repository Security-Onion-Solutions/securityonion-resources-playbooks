name: ET WEB_SPECIFIC_APPS JBoss JMX Console Beanshell Deployer .WAR File Upload and Deployment Cross Site Request Forgery Attempt
id: 22011697
description: |
  Detects attempts to exploit JBoss JMX Console via Beanshell Deployer for WAR file upload and deployment through CSRF.
  This attack allows remote code execution by deploying malicious WAR files. May trigger on legitimate JBoss administration.
type: detection
detection_id: 2011697
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete WAR deployment request payload?
    context: Understanding the full request reveals the malicious WAR file being deployed and deployment parameters.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.request.method
        - url.full
        - url.path

  - question: Is this authorized JBoss administration activity?
    context: Legitimate JBoss administrators may deploy WAR files through the JMX console during normal operations.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/jmx-console"
            - "/HtmlAdaptor"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: What JBoss services are running on the target system?
    context: Identifying JBoss services helps determine the attack surface and potential impact.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|contains:
            - 8080
            - 8443
            - 9990
            - 9999
        condition: selection
      fields:
        - dst_port
        - src_ip

  - question: What other JMX console access attempts occurred around this time?
    context: Multiple JMX console requests may indicate systematic exploitation attempts or reconnaissance.
    range: +/-30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/jmx-console"
            - "/HtmlAdaptor"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: Has the malicious WAR file been successfully deployed?
    context: Successful deployment indicates compromise and potential remote code execution capability.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.response.status_code|contains:
            - 200
            - 201
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.response.body.content

  - question: What connections were made to potential backdoor paths after deployment?
    context: Attackers typically access deployed backdoors through specific web paths to maintain persistence.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - ".jsp"
            - ".war"
            - "/shell"
            - "/cmd"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: What specific Beanshell commands were executed in the deployment?
    context: Beanshell commands reveal the exact malicious code being deployed and its intended functionality.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - alert.signature

  - question: Are there signs of lateral movement from the compromised JBoss server?
    context: Successful JBoss compromise often leads to lateral movement attempts within the network.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.bytes

  - question: What process activity occurred on the JBoss server after the attack?
    context: Process execution logs reveal if the WAR deployment resulted in code execution or system compromise.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage

  - question: Are other systems in the network showing similar JBoss exploitation attempts?
    context: Coordinated attacks often target multiple JBoss instances across the enterprise simultaneously.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "JBoss"
        condition: selection
      fields:
        - dst_ip
        - src_ip
        - rule.name

  - question: What files were created or modified on the JBoss server filesystem?
    context: WAR deployment creates files on disk that can be analyzed for malicious content and persistence mechanisms.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - ".war"
            - ".jsp"
            - "deploy"
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - User