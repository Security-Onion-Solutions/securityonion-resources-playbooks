name: ET WEB_CLIENT Hex Obfuscation of charCodeAt %u UTF-16 Encoding
id: 22012108
description: |
  Detects hex-encoded UTF-16 obfuscation of JavaScript charCodeAt function.
  Often used in malicious web content to evade detection while manipulating character codes.
type: detection
detection_id: 2012108
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete obfuscated JavaScript payload containing charCodeAt?
    context: Understanding the full payload reveals how character manipulation is used for code obfuscation.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.response.body.content
        - url.full
        - http.request.method

  - question: What character manipulation operations are being performed?
    context: The charCodeAt function is often used to dynamically construct malicious code strings.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.body.content
        - http.response.headers.content-type
        - url.path

  # Type 2: Triage Assessment
  - question: Is this obfuscation technique from a known legitimate web application?
    context: Some legitimate applications use character code manipulation, but heavy obfuscation is suspicious.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.domain
        - http.response.status_code
        - src_ip

  - question: Does this user have a history of visiting sites with obfuscated content?
    context: Repeated exposure to obfuscated content may indicate compromised browsing habits.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "Obfuscation"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.domain

  # Type 3: Activity Context
  - question: What web browsing sequence led to this obfuscated charCodeAt usage?
    context: Understanding the browsing path helps identify the attack vector and user behavior.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.headers.referer
        - http.request.method
        - http.response.status_code

  - question: What browser and JavaScript engine was processing this content?
    context: Different browsers handle obfuscated JavaScript differently, affecting exploitation success.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          Image|contains:
            - "chrome.exe"
            - "firefox.exe"
            - "msedge.exe"
            - "iexplore.exe"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - ParentImage

  - question: Were there any redirects or additional HTTP requests after this detection?
    context: Obfuscated JavaScript often triggers additional network activity for payload delivery.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - url.full
        - http.response.status_code
        - http.request.headers.referer

  # Type 4: Impact Assessment
  - question: Did the charCodeAt obfuscation successfully decode and execute malicious code?
    context: Successful deobfuscation may lead to browser exploitation or malware download.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.response.headers.content-type|contains:
            - "application/octet-stream"
            - "application/x-msdownload"
            - "application/x-executable"
        condition: selection
      fields:
        - url.full
        - http.response.status_code
        - http.response.headers.content-disposition

  - question: Were any suspicious files created or modified following this detection?
    context: Successful exploitation often results in file system changes or malware installation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetFilename|contains:
            - "Temp"
            - "Downloads"
            - "AppData"
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessName

  # Type 5: Forensic Deep-Dive
  - question: What specific JavaScript obfuscation techniques are being combined?
    context: Advanced attacks often layer multiple obfuscation methods to evade detection.
    range: +/-15m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "WEB_CLIENT"
        condition: selection
      fields:
        - rule.name
        - dst_ip

  - question: Are there signs of exploit kit activity or browser exploitation?
    context: CharCodeAt obfuscation is commonly used in exploit kits targeting browser vulnerabilities.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          Image|contains:
            - "rundll32.exe"
            - "regsvr32.exe"
            - "powershell.exe"
            - "cmd.exe"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - ParentImage

  - question: What registry modifications occurred after the obfuscated content was processed?
    context: Successful browser exploitation often leads to persistence mechanisms via registry changes.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetObject|contains:
            - "Run"
            - "RunOnce"
            - "BHO"
            - "Shell"
        condition: selection
      fields:
        - TargetObject
        - Details
        - Image

  # Type 6: Enterprise Correlation
  - question: Are other users encountering similar charCodeAt obfuscation techniques?
    context: Widespread detections may indicate a targeted campaign or compromised advertising network.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name: "ET WEB_CLIENT Hex Obfuscation of charCodeAt %u UTF-16 Encoding"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.domain

  - question: Is this part of a coordinated web-based attack using multiple obfuscation methods?
    context: Sophisticated attacks often employ various JavaScript obfuscation techniques simultaneously.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "UTF-16 Encoding"
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip