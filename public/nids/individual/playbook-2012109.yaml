name: ET WEB_CLIENT Hex Obfuscation of String.fromCharCode %u UTF-16 Encoding
id: 22012109
description: |
  Detects hex-encoded UTF-16 obfuscation of JavaScript String.fromCharCode function.
  Commonly used in malicious web content to dynamically construct code strings and evade detection.
type: detection
detection_id: 2012109
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete obfuscated JavaScript payload using String.fromCharCode?
    context: Understanding the full payload reveals how character codes are used to construct malicious strings.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.response.body.content
        - url.full
        - http.request.method

  - question: What character codes are being converted to construct the hidden functionality?
    context: The character codes reveal the actual malicious commands or URLs being dynamically built.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.body.content
        - http.response.headers.content-type
        - url.path

  # Type 2: Triage Assessment
  - question: Is this String.fromCharCode usage from a known legitimate web application?
    context: While some legitimate sites use this function, heavy obfuscation is typically malicious.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.domain
        - http.response.status_code
        - src_ip

  - question: Does this user regularly encounter obfuscated JavaScript content?
    context: Frequent exposure to obfuscated content may indicate risky browsing behavior or targeted attacks.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "fromCharCode"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.domain

  # Type 3: Activity Context
  - question: What web navigation sequence preceded this obfuscated content delivery?
    context: Understanding the browsing path helps identify the attack vector and infection method.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.headers.referer
        - http.request.method
        - http.response.status_code

  - question: What browser process was active when this obfuscated content was encountered?
    context: Different browsers have varying JavaScript engines and security features affecting exploitation.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          Image|contains:
            - "chrome.exe"
            - "firefox.exe"
            - "msedge.exe"
            - "iexplore.exe"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - ParentImage

  - question: Were there any suspicious DNS queries before encountering this obfuscated content?
    context: Malicious campaigns often involve domain generation or known bad domains for payload delivery.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - dns.query.type_name

  # Type 4: Impact Assessment
  - question: Did the String.fromCharCode obfuscation successfully execute and trigger additional downloads?
    context: Successful deobfuscation often leads to secondary payload downloads or exploit execution.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.response.headers.content-type|contains:
            - "application/octet-stream"
            - "application/x-msdownload"
            - "application/x-executable"
            - "application/pdf"
        condition: selection
      fields:
        - url.full
        - http.response.status_code
        - http.response.headers.content-disposition

  - question: Were any executable files or scripts created following this detection?
    context: Successful exploitation typically results in malware installation or script execution.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetFilename|contains:
            - ".exe"
            - ".dll"
            - ".scr"
            - ".js"
            - ".vbs"
            - ".ps1"
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessName

  # Type 5: Forensic Deep-Dive
  - question: What combination of JavaScript obfuscation techniques are being employed?
    context: Advanced attacks often layer multiple obfuscation methods including String.fromCharCode variations.
    range: +/-15m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "Obfuscation"
        condition: selection
      fields:
        - rule.name
        - dst_ip

  - question: Are there indicators of exploit kit activity or browser exploitation framework usage?
    context: String.fromCharCode obfuscation is a common technique in exploit kits and attack frameworks.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          ParentImage|contains:
            - "chrome.exe"
            - "firefox.exe"
            - "msedge.exe"
            - "iexplore.exe"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - User

  - question: What persistence mechanisms were established after the obfuscated content execution?
    context: Successful browser exploitation often leads to persistence via registry, scheduled tasks, or startup items.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetObject|contains:
            - "CurrentVersion\\Run"
            - "CurrentVersion\\RunOnce"
            - "Browser Helper Objects"
            - "Shell\\Open\\Command"
        condition: selection
      fields:
        - TargetObject
        - Details
        - Image

  # Type 6: Enterprise Correlation
  - question: Are other users encountering similar String.fromCharCode obfuscation attacks?
    context: Multiple detections may indicate a widespread campaign or compromised advertising network.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name: "ET WEB_CLIENT Hex Obfuscation of String.fromCharCode %u UTF-16 Encoding"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.domain

  - question: Is this part of a coordinated attack using multiple JavaScript obfuscation techniques?
    context: Sophisticated campaigns often employ various obfuscation methods to maximize evasion and success rates.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "UTF-16 Encoding"
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip