name: ET WEB_SPECIFIC_APPS SOPHIA CMS SQL Injection Attempt -- dsp_page.cfm pageid UNION SELECT
id: 22012421
description: |
  Detects SQL injection attempts targeting SOPHIA CMS's dsp_page.cfm script using UNION SELECT statements in the pageid parameter.
  UNION SELECT injections are almost always malicious as they attempt to extract data from multiple database tables simultaneously.
type: detection
detection_id: 2012421
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete UNION SELECT payload in the pageid parameter?
    context: UNION SELECT statements reveal the attacker's knowledge of database structure and specific data targets.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: How many columns were specified in the UNION SELECT and what data types?
    context: Column count and types indicate the attacker's understanding of the original query structure and target table schema.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is there any legitimate use case for UNION statements in SOPHIA CMS operations?
    context: UNION SELECT in user input is almost universally malicious, unlike simple SELECT statements which may have legitimate uses.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/dsp_page.cfm'
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.status_code

  - question: Does the timing align with any scheduled administrative activities?
    context: Even though UNION SELECT is typically malicious, confirming no legitimate administrative context is important.
    range: -2h/+2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '.cfm'
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - url.path

  # Type 3: Activity Context
  - question: What reconnaissance activity preceded this UNION SELECT injection?
    context: UNION SELECT attacks typically follow database structure enumeration and column count discovery.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: Were there previous attempts to determine the number of columns in the target query?
    context: Attackers often use ORDER BY or NULL-based techniques to discover column counts before crafting UNION SELECT statements.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/dsp_page.cfm'
        condition: selection
      fields:
        - url.query
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the UNION SELECT injection successfully return database information?
    context: Successful UNION SELECT attacks can extract sensitive data from any accessible database table.
    range: -5m/+5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: What sensitive database tables or information might have been exposed?
    context: UNION SELECT can access any table the application database user has permissions to read.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '.cfm'
        condition: selection
      fields:
        - url.query
        - http.response.body.bytes

  # Type 5: Forensic Deep-Dive
  - question: What specific database tables or system information was targeted in the UNION SELECT?
    context: Analyzing the SELECT portion reveals whether the attacker sought user data, configuration, or system information.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - url.query
        - http.request.body.content

  - question: Are there indicators of systematic database enumeration following the UNION SELECT?
    context: Successful UNION SELECT attacks are often followed by comprehensive database reconnaissance and data extraction.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.response.status_code
        - http.response.body.bytes

  - question: What automated tools or manual techniques were used for the UNION SELECT injection?
    context: Tool signatures and injection patterns help identify the attack methodology and potential attribution.
    range: -15m/+15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.headers.user-agent
        - url.full
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other systems experiencing similar UNION SELECT injection attempts?
    context: UNION SELECT techniques may be part of automated scanning tools targeting multiple vulnerable applications.
    range: -4h/+4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'UNION SELECT'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: Is this source IP conducting UNION SELECT attacks against other web applications?
    context: Attackers often use UNION SELECT techniques across multiple targets to maximize data extraction opportunities.
    range: -6h/+6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path