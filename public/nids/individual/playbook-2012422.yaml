name: ET WEB_SPECIFIC_APPS SOPHIA CMS SQL Injection Attempt -- dsp_page.cfm pageid INSERT
id: 22012422
description: |
  Detects SQL injection attempts targeting SOPHIA CMS's dsp_page.cfm script using INSERT statements in the pageid parameter.
  INSERT injections are typically malicious as they attempt to add unauthorized data to the database, potentially including backdoors or malicious content.
type: detection
detection_id: 2012422
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete INSERT statement payload in the pageid parameter?
    context: Understanding the INSERT syntax reveals what data the attacker attempted to add to the database.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: What table and columns were targeted in the INSERT injection?
    context: Analyzing the INSERT structure shows which database components the attacker attempted to modify.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is there any legitimate administrative function that uses INSERT operations in SOPHIA CMS?
    context: While INSERT statements may be legitimate in admin contexts, user-controlled INSERT injections are typically malicious.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/dsp_page.cfm'
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.status_code

  - question: Does the source IP have administrative privileges or legitimate access patterns?
    context: Authorized administrators may have different risk profiles, though INSERT in user input remains suspicious.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '.cfm'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  # Type 3: Activity Context
  - question: What reconnaissance or enumeration preceded this INSERT injection attempt?
    context: INSERT injections typically follow database structure discovery and successful authentication bypass or privilege escalation.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: Were there previous attempts to test database write permissions?
    context: Attackers often test INSERT capabilities with simple statements before attempting more complex data insertion.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/dsp_page.cfm'
        condition: selection
      fields:
        - url.query
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the INSERT injection execute successfully based on HTTP responses?
    context: Successful INSERT operations may result in different response codes or content compared to failed attempts.
    range: -5m/+5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: What type of data was the attacker attempting to insert into the database?
    context: INSERT payloads may contain backdoor accounts, malicious scripts, or other persistent threats.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '.cfm'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  # Type 5: Forensic Deep-Dive
  - question: What specific data values were included in the INSERT statement?
    context: Analyzing inserted values helps identify whether the attack created backdoors, defacement, or data corruption.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - url.query
        - http.request.body.content

  - question: Are there signs of persistent access mechanisms being established?
    context: INSERT injections may create backdoor accounts, web shells, or other persistence mechanisms.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: What automated tools or manual techniques were used for the INSERT injection?
    context: Tool signatures help identify the attack methodology and potential for additional automated exploitation.
    range: -15m/+15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.headers.user-agent
        - url.full
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other SOPHIA CMS installations experiencing similar INSERT injection attempts?
    context: Coordinated attacks may attempt to establish persistence across multiple CMS instances.
    range: -4h/+4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'SOPHIA CMS'
          rule.name|contains: 'INSERT'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: Is this source IP attempting INSERT injections against other web applications?
    context: Attackers may use INSERT techniques across multiple targets to establish widespread persistence.
    range: -6h/+6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'INSERT'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path