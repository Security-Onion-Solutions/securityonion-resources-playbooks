name: ET WEB_SPECIFIC_APPS SOPHIA CMS SQL Injection Attempt -- dsp_page.cfm pageid ASCII
id: 22012424
description: |
  Detects SQL injection attempts against SOPHIA CMS via the dsp_page.cfm pageid parameter using ASCII function.
  May trigger on legitimate database queries that use ASCII functions in web applications.
type: detection
detection_id: 2012424
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the pageid parameter?
    context: Understanding the full payload reveals the attacker's intent and SQL injection technique.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: Is this legitimate use of ASCII functions by authorized administrators?
    context: SOPHIA CMS may have legitimate administrative functions that use ASCII operations.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/dsp_page.cfm"
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - url.query

  - question: What other SQL injection attempts occurred from this source IP?
    context: Attackers often try multiple injection vectors against the same target.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SQL Injection"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.full

  - question: What was the sequence of HTTP requests leading to this injection attempt?
    context: Understanding the attack progression helps identify reconnaissance and exploitation phases.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Did the SQL injection attempt return sensitive data or error messages?
    context: Successful injections may reveal database structure or sensitive information.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.bytes

  - question: What is the reputation and geolocation of the attacking IP address?
    context: Malicious IPs often have poor reputation or originate from suspicious locations.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - geoip.country_name
        - threat_intel.ioc_value
        - threat_intel.source

  - question: Are there signs of successful database compromise or data exfiltration?
    context: Successful SQL injections may lead to unauthorized data access or system compromise.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.bytes
        - network.protocol

  - question: What user-agent and HTTP headers were used in the attack?
    context: Attack tools often have distinctive user-agent strings and header patterns.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.headers
        - user_agent.original
        - http.request.referrer

  - question: Are there other SOPHIA CMS vulnerabilities being exploited simultaneously?
    context: Attackers may exploit multiple vulnerabilities in the same application.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SOPHIA"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Is this attack pattern occurring against other web servers in the environment?
    context: Automated attacks often target multiple systems with the same vulnerability.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "SOPHIA CMS SQL Injection"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.full