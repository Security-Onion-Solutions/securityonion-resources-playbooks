name: ET WEB_SPECIFIC_APPS WordPress XCloner Plugin index2.php option Parameter Cross Site Scripting Attempt
id: 22012428
description: |
  Detects Cross-Site Scripting (XSS) attempts targeting the WordPress XCloner backup plugin's option parameter.
  May trigger on legitimate backup operations if option values contain JavaScript-like syntax or HTML elements.
type: detection
detection_id: 2012428
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact XSS payload in the option parameter?
    context: Understanding the payload reveals the attack technique and potential impact on backup operations.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query
        - http.request.method

  - question: Is this legitimate XCloner backup plugin usage?
    context: XCloner is used for WordPress backups and may have legitimate administrative access patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/xcloner-backup-and-restore/'
        condition: selection
      fields:
        - src_ip
        - url.query
        - user_agent.original
        - http.request.method

  - question: What authentication context surrounds this login attempt?
    context: The dologin task suggests authentication bypass or credential stuffing attempts.
    range: -15m/+15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'task=dologin'
            - 'wp-login'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code
        - http.request.body.content

  - question: Did the XSS attack successfully compromise the backup interface?
    context: Successful exploitation could lead to backup manipulation or data exfiltration.
    range: +10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/xcloner-backup-and-restore/'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.response.body.content

  - question: Are there signs of backup file access or manipulation?
    context: XCloner attacks may aim to access or modify backup files containing sensitive data.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '.zip'
            - '.tar'
            - '.sql'
            - 'backup'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code
        - network.bytes

  - question: What is the administrative access pattern for this WordPress site?
    context: Understanding normal admin patterns helps distinguish legitimate from malicious access.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-admin/'
            - '/wp-content/plugins/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - user_agent.original
        - source.geo.country_name

  - question: Are there indicators of credential harvesting or session hijacking?
    context: XSS in backup plugins can be used to steal administrative credentials or sessions.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - '/wp-admin/'
            - '/wp-login.php'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code
        - http.request.headers

  - question: What is the attack source reputation and behavior pattern?
    context: Understanding attacker profile helps determine threat level and response strategy.
    range: -2h/+2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - user_agent.original
        - http.request.method

  - question: Has this WordPress installation experienced other plugin vulnerabilities?
    context: Multiple plugin attacks suggest systematic vulnerability exploitation requiring comprehensive patching.
    range: -7d
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.category|contains:
            - 'web-application-attack'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category

  - question: Are other WordPress sites in the network experiencing similar XCloner attacks?
    context: Understanding campaign scope helps determine if this is targeted or opportunistic scanning.
    range: -4h/+4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'XCloner'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name