name: ET WEB_SPECIFIC_APPS WP Forum Server wordpress plugin SQL Injection Attempt -- feed.php topic UNION SELECT
id: 22012432
description: |
  Detects SQL injection attempts against WordPress Forum Server plugin via the feed.php topic parameter using UNION SELECT statements.
  May trigger on legitimate complex RSS feed queries that combine multiple data sources.
type: detection
detection_id: 2012432
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete UNION SELECT SQL injection payload in the topic parameter?
    context: UNION SELECT attacks reveal the attacker's attempt to combine malicious queries with legitimate ones.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: Is this legitimate WordPress Forum Server plugin functionality?
    context: The forum plugin may use complex queries for RSS feed generation that could resemble UNION operations.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-content/plugins/forum-server/feed.php"
        condition: selection
      fields:
        - src_ip
        - url.query
        - user_agent.original

  - question: What other advanced SQL injection techniques were attempted?
    context: UNION SELECT attacks often follow or precede other injection methods like blind SQL injection.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SQL Injection"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: What data did the UNION SELECT attempt try to extract?
    context: UNION SELECT payloads reveal which database columns and tables the attacker targeted.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.query
        - rule.description

  - question: Did the UNION SELECT injection return sensitive database information?
    context: Successful UNION attacks often return user credentials, configuration data, or other sensitive information.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.bytes

  - question: What WordPress enumeration occurred before this advanced injection?
    context: UNION SELECT attacks typically require knowledge of database structure obtained through reconnaissance.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-content/"
            - "/wp-admin/"
            - "xmlrpc.php"
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - user_agent.original

  - question: Are there signs of successful WordPress database compromise?
    context: Successful UNION SELECT attacks may lead to full database access and privilege escalation.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - "WordPress"
            - "Privilege"
            - "Admin"
        condition: selection
      fields:
        - rule.name
        - src_ip
        - alert.severity

  - question: What attack tools or frameworks generated this UNION SELECT payload?
    context: User-agent and payload structure can reveal automated exploitation tools.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - user_agent.original
        - http.request.headers
        - http.request.referrer

  - question: Are there concurrent UNION SELECT attacks against other WordPress sites?
    context: Automated tools often target multiple WordPress installations with the same vulnerability.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "UNION SELECT"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: Is this part of a coordinated WordPress exploitation campaign?
    context: Advanced SQL injection attacks may be part of larger campaigns targeting WordPress vulnerabilities.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "WordPress"
          rule.name|contains: "SQL Injection"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name