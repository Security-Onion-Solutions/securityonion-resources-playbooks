name: ET WEB_SPECIFIC_APPS WP Forum Server wordpress plugin SQL Injection Attempt -- feed.php topic DELETE
id: 22012434
description: |
  Detects SQL injection attempts targeting the WordPress Forum Server plugin via DELETE statements in the topic parameter.
  May trigger on legitimate database administration or testing activities involving similar patterns.
type: detection
detection_id: 2012434
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the topic parameter?
    context: Understanding the exact DELETE statement reveals the attacker's database manipulation intent.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: What specific database tables or data was the DELETE statement targeting?
    context: Analyzing the complete URI parameters shows what data the attacker attempted to delete.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.headers

  - question: Is this legitimate WordPress administration activity?
    context: Database maintenance or plugin testing may involve similar SQL patterns from authorized administrators.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: Are there other WordPress admin activities from this source IP?
    context: Legitimate admin sessions typically show broader WordPress management patterns.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - '/wp-admin/'
            - '/wp-login.php'
        condition: selection
      fields:
        - url.path
        - http.response.status_code

  - question: What triggered this SQL injection attempt?
    context: Understanding the attack vector helps identify if this was automated scanning or targeted exploitation.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What was the server's response to this injection attempt?
    context: Response codes and content indicate if the injection was successful or blocked.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content

  - question: Has the SQL injection payload executed successfully?
    context: Successful injection may result in database errors, modified responses, or follow-up queries.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.response.body.content

  - question: What WordPress database tables or user data could be affected?
    context: DELETE operations in WordPress can compromise user accounts, posts, or configuration data.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-content/plugins/forum-server/'
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.status_code

  - question: What specific Forum Server plugin functionality was targeted?
    context: Understanding the plugin's database structure helps assess potential data loss or compromise.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.path
        - url.query

  - question: Are there signs of data exfiltration following the injection attempt?
    context: Successful DELETE injections may be followed by SELECT statements to verify data removal.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.query
        - http.response.body.content

  - question: Are other systems showing similar WordPress Forum Server plugin attacks?
    context: Coordinated attacks may target multiple WordPress installations with the same vulnerable plugin.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'WP Forum Server'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.full

  - question: Is this part of a broader WordPress vulnerability scanning campaign?
    context: Attackers often scan for multiple WordPress vulnerabilities before focusing on successful exploits.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - '/wp-content/plugins/'
        condition: selection
      fields:
        - url.path
        - http.response.status_code