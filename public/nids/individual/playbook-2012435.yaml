name: ET WEB_SPECIFIC_APPS WP Forum Server wordpress plugin SQL Injection Attempt -- feed.php topic ASCII
id: 22012435
description: |
  Detects SQL injection attempts targeting the WordPress Forum Server plugin using ASCII function with SELECT statements in the topic parameter.
  May trigger on legitimate database queries or application testing that uses ASCII functions.
type: detection
detection_id: 2012435
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete ASCII-based SQL injection payload?
    context: ASCII function injections are used for blind SQL injection to extract data character by character.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: What specific data is the attacker attempting to extract using ASCII functions?
    context: The SELECT statement within ASCII function reveals what database information is being targeted.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.headers

  - question: Is this legitimate WordPress plugin functionality or testing?
    context: Some plugins or development environments may use ASCII functions for data processing or validation.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: Are there authenticated WordPress sessions associated with this activity?
    context: Legitimate ASCII function usage would typically occur within authenticated admin or user sessions.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - '/wp-admin/'
            - '/wp-login.php'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.headers

  - question: What initiated this blind SQL injection attempt?
    context: ASCII-based injections are often part of automated tools scanning for database vulnerabilities.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: How did the server respond to the ASCII injection attempt?
    context: Response patterns help determine if the blind injection technique is revealing information.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.body.bytes

  - question: Is the blind SQL injection successfully extracting data?
    context: Successful ASCII injections show patterns of repeated queries with incremental character positions.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/forum-server/feed.php'
        condition: selection
      fields:
        - url.query
        - http.response.status_code

  - question: What WordPress database information could be compromised?
    context: ASCII-based extractions typically target user credentials, configuration data, or sensitive forum content.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.query
        - http.response.body.content

  - question: Are there signs of automated blind injection tools?
    context: Automated tools show rapid sequential requests with systematic ASCII character extraction patterns.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method

  - question: What specific Forum Server database tables are being targeted?
    context: Understanding the plugin's database structure helps assess what sensitive data might be extracted.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.path
        - url.query

  - question: Are other WordPress sites experiencing similar ASCII injection attacks?
    context: Coordinated campaigns often target multiple sites with the same vulnerable plugin version.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'WP Forum Server'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.full

  - question: Is this part of a broader WordPress exploitation campaign?
    context: Attackers may combine ASCII injections with other WordPress attack vectors for comprehensive compromise.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - '/wp-content/plugins/'
        condition: selection
      fields:
        - url.path
        - http.response.status_code