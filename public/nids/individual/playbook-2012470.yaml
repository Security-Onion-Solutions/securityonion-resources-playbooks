name: ET WEB_SPECIFIC_APPS All In One Control Panel SQL Injection Attempt -- cp_menu_data_file.php menu INSERT
id: 22012470
description: |
  Detects SQL injection attempts targeting All In One Control Panel cp_menu_data_file.php with INSERT statements via menu parameter.
  May trigger on legitimate menu configuration updates or administrative functions.
type: detection
detection_id: 2012470
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the menu parameter?
    context: Understanding the exact INSERT statement reveals what data the attacker attempted to inject.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: Is this legitimate administrative activity for the control panel?
    context: Authorized administrators may perform legitimate menu configuration through this interface.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/cp_menu_data_file.php"
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - user_agent.original

  - question: What triggered this SQL injection attempt on the control panel endpoint?
    context: Identifying the attack vector helps understand if this is automated scanning or targeted exploitation.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What other control panel or administrative endpoints were accessed?
    context: Reveals if this is part of broader administrative interface reconnaissance or exploitation.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - "/public/code/"
            - "admin"
            - "control"
            - "panel"
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.request.method

  - question: Did the SQL injection attempt result in successful database insertion?
    context: HTTP response codes and content patterns indicate if the injection was successful.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: Were there any database error messages revealing table structure?
    context: Database errors in HTTP responses confirm successful SQL injection and reveal database schema.
    range: +2m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.response.body.content
        - http.response.status_code

  - question: What specific database tables were targeted by the INSERT statement?
    context: Analyzing the INSERT syntax reveals what data structures the attacker attempted to manipulate.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - alert.signature
        - payload_printable
        - http.request.body.content

  - question: Are there signs of successful backdoor installation or privilege escalation?
    context: Successful INSERT injections into control panels may create unauthorized administrative accounts.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What authentication or session management was bypassed?
    context: Control panel attacks often target authentication mechanisms to gain administrative access.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.headers
        - url.path
        - http.response.status_code

  - question: Are other systems showing similar control panel exploitation attempts?
    context: Determines if this is an isolated incident or part of a broader administrative interface campaign.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          alert.signature|contains: "Control Panel"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - alert.signature
        - url.path

  - question: Is this source IP associated with known web application attack patterns?
    context: Correlating with other web attacks helps understand the attacker's methodology and scope.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.category|contains: "web-application-attack"
        condition: selection
      fields:
        - alert.signature
        - dst_ip
        - url.path