name: ET WEB_SPECIFIC_APPS All In One Control Panel SQL Injection Attempt -- cp_menu_data_file.php menu ASCII
id: 22012472
description: |
  Detects SQL injection attempts against All In One Control Panel targeting cp_menu_data_file.php with ASCII function.
  May trigger on legitimate database queries using ASCII functions in similar applications.
type: detection
detection_id: 2012472
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the menu parameter?
    context: Understanding the exact injection syntax reveals the attacker's database enumeration technique.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: Is this legitimate administrative access to the control panel?
    context: Control panel access may be authorized for system administrators during normal business hours.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: What other SQL injection attempts occurred from this source IP?
    context: Multiple injection attempts indicate systematic exploitation rather than accidental queries.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'SQL Injection'
            - 'SQLi'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: What was the server's response to this injection attempt?
    context: Response codes and content reveal if the injection was successful or blocked.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.bytes

  - question: Did the attacker successfully execute database queries?
    context: Evidence of successful injection includes database errors or data extraction patterns.
    range: +10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.body.content|contains:
            - 'mysql_'
            - 'SQL syntax'
            - 'database error'
        condition: selection
      fields:
        - http.response.body.content
        - url.path

  - question: What database enumeration techniques were used?
    context: ASCII function usage suggests blind SQL injection for character-by-character data extraction.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'ASCII('
            - 'SUBSTRING('
            - 'LENGTH('
        condition: selection
      fields:
        - url.query
        - url.path

  - question: Were there attempts to access sensitive database tables?
    context: Attackers often target user tables, configuration data, or credential stores.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'information_schema'
            - 'mysql.user'
            - 'admin'
            - 'password'
        condition: selection
      fields:
        - url.query
        - url.path

  - question: What web application processes handled these requests?
    context: Identifying the target application helps assess the scope of potential compromise.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - 'httpd'
            - 'apache'
            - 'nginx'
            - 'php'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User

  - question: Did the control panel application log any authentication events?
    context: Failed login attempts may indicate credential extraction or brute force attacks.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'login'
            - 'auth'
            - 'admin'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Are other systems showing similar All In One Control Panel attacks?
    context: Coordinated attacks across multiple systems indicate a broader campaign.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'All In One Control Panel'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: What reconnaissance activity preceded this SQL injection?
    context: Attackers often scan for vulnerable applications before launching targeted attacks.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - '/public/code/'
            - 'cp_menu'
            - '.php'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code