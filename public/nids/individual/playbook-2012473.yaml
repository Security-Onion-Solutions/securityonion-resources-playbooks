name: ET WEB_SPECIFIC_APPS All In One Control Panel SQL Injection Attempt -- cp_menu_data_file.php menu UPDATE
id: 22012473
description: |
  Detects SQL injection attempts against All In One Control Panel targeting cp_menu_data_file.php with UPDATE statements.
  May trigger on legitimate database update operations in similar control panel applications.
type: detection
detection_id: 2012473
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete UPDATE SQL injection payload?
    context: Understanding the UPDATE syntax reveals what data the attacker attempted to modify.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: Is this authorized administrative database maintenance?
    context: Control panel UPDATE operations may be legitimate during scheduled maintenance windows.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What database tables or columns were targeted for modification?
    context: UPDATE injection attempts often target user credentials, permissions, or configuration settings.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'UPDATE'
            - 'SET'
        condition: selection
      fields:
        - url.query
        - url.path

  - question: Did the UPDATE injection attempt succeed?
    context: Successful UPDATE injections may result in privilege escalation or data corruption.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.bytes

  - question: Were there subsequent privilege escalation attempts?
    context: Successful UPDATE injections often lead to attempts to access administrative functions.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'admin'
            - 'config'
            - 'user'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What other SQL modification attempts occurred from this source?
    context: Multiple modification attempts indicate systematic database manipulation efforts.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'UPDATE'
            - 'INSERT'
            - 'DELETE'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Did the application log any data integrity violations?
    context: Successful UPDATE injections may trigger application errors or inconsistent data states.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.response.body.content|contains:
            - 'constraint'
            - 'integrity'
            - 'foreign key'
            - 'duplicate'
        condition: selection
      fields:
        - http.response.body.content
        - url.path

  - question: What web server processes executed during this attack?
    context: Identifying affected processes helps determine the scope of potential system compromise.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - 'httpd'
            - 'apache'
            - 'nginx'
            - 'php'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User

  - question: Were there attempts to modify user accounts or permissions?
    context: UPDATE injections often target authentication systems to create backdoor access.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'password'
            - 'admin'
            - 'privilege'
            - 'role'
        condition: selection
      fields:
        - url.query
        - url.path

  - question: Are other control panel systems experiencing similar UPDATE attacks?
    context: Coordinated UPDATE injection campaigns may indicate automated exploitation tools.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - 'Control Panel'
            - 'UPDATE'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: What reconnaissance preceded this targeted UPDATE injection?
    context: Attackers typically enumerate database structure before crafting specific UPDATE statements.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - '/public/code/'
            - 'cp_menu_data_file.php'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code