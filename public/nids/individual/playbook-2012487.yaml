name: ET WEB_SPECIFIC_APPS Keynect Ecommerce SQL Injection Attempt - INSERT Statement
id: 22012487
description: |
  Detects SQL injection attempts targeting Keynect Ecommerce using INSERT statements for data manipulation.
  May trigger on legitimate form submissions, though INSERT in URL parameters is typically malicious.
type: detection
detection_id: 2012487
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete INSERT statement payload in the ctf parameter?
    context: INSERT injections reveal the attacker's intent to add malicious data or backdoors to the database.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: What table and data was the attacker attempting to insert?
    context: Understanding the target table and values helps assess the attack's potential impact and persistence.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - alert.signature
        - payload_printable

  - question: Is INSERT functionality legitimate for this application endpoint?
    context: Products.php typically handles read operations, making INSERT statements highly suspicious.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: '/products.php'
          http.request.method: 'POST'
        condition: selection
      fields:
        - src_ip
        - url.query
        - user_agent.original

  - question: What was the progression of SQL injection attempts before this INSERT?
    context: Attackers often escalate from SELECT to INSERT after successful reconnaissance.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - url.path
        - alert.signature

  - question: Did the INSERT injection execute successfully?
    context: Successful INSERT operations may return different HTTP status codes or response patterns.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: '/products.php'
        condition: selection
      fields:
        - http.response.status_code
        - bytes_out
        - url.query

  - question: Are there signs of backdoor user account creation?
    context: INSERT injections commonly target user tables to create unauthorized administrative accounts.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/admin'
            - '/user'
            - '/account'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: Has the attacker attempted to insert malicious content or scripts?
    context: INSERT attacks may add XSS payloads, webshells, or other malicious content to the database.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - 'XSS'
            - 'Script'
            - 'BACKDOOR'
        condition: selection
      fields:
        - rule.name
        - url.path
        - alert.signature

  - question: Are there indicators of persistent access establishment?
    context: Successful INSERT attacks may be followed by attempts to access newly created backdoors.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/shell'
            - '/cmd'
            - '/admin'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - user_agent.original

  - question: What data integrity impact occurred from the INSERT injection?
    context: Understanding database modifications helps assess recovery requirements and data corruption.
    range: +6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/products.php'
            - '/catalog'
            - '/inventory'
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.status_code

  - question: Have other ecommerce sites been targeted with similar INSERT attacks?
    context: Successful injection techniques are often reused across multiple vulnerable applications.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'INSERT'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path