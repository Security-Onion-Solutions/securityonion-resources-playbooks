name: ET WEB_SPECIFIC_APPS Constructr CMS SQL Injection Attempt -- constructrXmlOutput.content.xml.php page_id SELECT
id: 22012498
description: |
  Detects SQL injection attempts targeting Constructr CMS constructrXmlOutput.content.xml.php with SELECT statements via page_id parameter.
  May trigger on legitimate CMS content queries or XML output generation functions.
type: detection
detection_id: 2012498
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the page_id parameter?
    context: Understanding the exact SELECT statement reveals what CMS data the attacker attempted to extract.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: Is this legitimate CMS content retrieval for XML output generation?
    context: Authorized CMS operations may perform legitimate page queries for XML content generation.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/xmlOutput/"
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - user_agent.original

  - question: What triggered this SQL injection attempt on the CMS XML output endpoint?
    context: Identifying the attack vector helps understand if this is automated CMS scanning or targeted exploitation.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What other CMS endpoints or administrative interfaces were accessed?
    context: Reveals if this is part of broader CMS reconnaissance or exploitation campaign.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - "admin"
            - "cms"
            - "content"
            - ".xml.php"
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.request.method

  - question: Did the SQL injection attempt result in successful CMS data extraction?
    context: HTTP response codes and XML content indicate if the injection successfully retrieved CMS data.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: Were there any CMS database error messages or XML parsing errors?
    context: Database errors in XML responses confirm successful SQL injection and may reveal CMS database structure.
    range: +2m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.response.body.content
        - http.response.status_code
        - http.response.headers

  - question: What specific CMS database tables were targeted by the SELECT statement?
    context: Analyzing the SELECT syntax reveals what CMS content or user data the attacker attempted to access.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - alert.signature
        - payload_printable
        - http.request.body.content

  - question: Are there signs of CMS content manipulation or unauthorized data access?
    context: Successful CMS injections may lead to content theft, user data extraction, or administrative access.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What XML content types or MIME types were requested or returned?
    context: XML-specific attacks may target content parsing vulnerabilities or attempt to extract structured data.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.headers
        - http.response.headers
        - http.response.mime_type

  - question: Are other CMS platforms showing similar XML-based SQL injection attempts?
    context: Determines if this is an isolated incident or part of a broader CMS exploitation campaign.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains: "CMS"
        condition: selection
      fields:
        - dst_ip
        - alert.signature
        - url.path

  - question: Is this source IP associated with known CMS attack patterns or vulnerability scanners?
    context: Correlating with CMS-specific attacks helps understand the attacker's CMS expertise and targeting strategy.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.category|contains: "web-application-attack"
        condition: selection
      fields:
        - alert.signature
        - dst_ip
        - url.path