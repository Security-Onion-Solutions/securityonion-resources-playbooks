name: ET WEB_SPECIFIC_APPS vBulletin vbBux vbplaza.php Blind SQL Injection Attempt
id: 22012566
description: |
  Detects blind SQL injection attempts against vBulletin vbBux plugin via vbplaza.php script.
  May trigger on legitimate database queries but typically indicates exploitation attempt.
type: detection
detection_id: 2012566
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload and target parameters?
    context: Understanding the full injection string reveals attacker methodology and database targeting.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content

  - question: Is this legitimate vBulletin administrative activity or plugin usage?
    context: Authorized administrators may access vbplaza.php for legitimate vbBux plugin management.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'vbplaza.php'
        condition: selection
      fields:
        - http.request.method
        - url.query
        - http.response.status_code

  - question: What other vBulletin components has this attacker probed or attacked?
    context: Multiple component targeting reveals systematic exploitation of the forum platform.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'vb'
            - 'forum'
            - '.php'
        condition: selection
      fields:
        - http.request.method
        - url.path
        - http.response.status_code

  - question: What was the database server's response to the injection attempt?
    context: Response timing and content indicate whether the blind SQL injection was successful.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.bytes

  - question: Did the attacker successfully extract database information?
    context: Multiple injection attempts with varying payloads indicate data extraction progress.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'vbplaza.php'
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - http.response.bytes

  - question: Are there signs of database server compromise or unusual activity?
    context: Database connections and queries reveal successful exploitation and data access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_port|contains:
            - 3306
            - 5432
            - 1433
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.bytes_sent
        - network.bytes_received

  - question: What processes were spawned on the web server after the SQL injection?
    context: Process execution indicates successful code injection through SQL injection vulnerabilities.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid

  - question: Were sensitive vBulletin files or user data accessed?
    context: File access patterns reveal data theft attempts and help assess breach scope.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - 'config.php'
            - 'database'
            - 'user'
            - 'password'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - User

  - question: Did the attacker attempt to escalate privileges or install backdoors?
    context: Post-exploitation activity indicates successful compromise and persistence mechanisms.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.extension|contains:
            - '.php'
            - '.jsp'
            - '.asp'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.size

  - question: Are other vBulletin installations being targeted by this attacker?
    context: Multiple forum targets suggest coordinated campaign against vBulletin platforms.
    range: -1d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'vBulletin'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - rule.category

  - question: What is the complete scope of this attacker's SQL injection campaign?
    context: Understanding all SQL injection attempts helps assess threat level and required defenses.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'SQL'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - rule.category