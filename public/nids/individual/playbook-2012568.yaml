name: ET WEB_SPECIFIC_APPS coRED CMS rubID Parameter UNION SELECT SQL Injection Attempt
id: 22012568
description: |
  Detects SQL injection attempts targeting coRED CMS rubID parameter using UNION SELECT statements.
  May trigger on legitimate database queries containing these keywords in URL parameters.
type: detection
detection_id: 2012568
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete UNION SELECT payload in the rubID parameter?
    context: UNION SELECT injections reveal the attacker's knowledge of database schema and column structure.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - rule.name

  - question: How many columns is the attacker attempting to extract with UNION SELECT?
    context: Column count in UNION SELECT reveals database schema knowledge and extraction intent.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.method
        - url.path
        - url.query

  # Type 2: Triage Assessment
  - question: Is this a continuation of previous SQL injection attempts on the same target?
    context: UNION SELECT often follows basic injection testing, indicating escalated exploitation.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "SQL Injection"
        condition: selection
      fields:
        - rule.name
        - url.path
        - http.request.method

  - question: Does the timing suggest automated scanning versus manual exploitation?
    context: Rapid successive attempts indicate automated tools, while spaced attempts suggest manual testing.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/content/rubric/"
        condition: selection
      fields:
        - http.request.method
        - url.query
        - http.response.status_code

  # Type 3: Activity Context
  - question: What reconnaissance activity preceded this UNION SELECT attempt?
    context: Understanding the attack progression helps determine if this is targeted exploitation.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.method
        - url.path
        - url.query
        - http.response.status_code

  - question: What was the application's response to the UNION SELECT injection?
    context: Response analysis reveals if the injection was successful or properly blocked.
    range: +2m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  # Type 4: Impact Assessment
  - question: Did the UNION SELECT injection successfully extract database records?
    context: Large response bodies or structured data indicate successful data extraction.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: Are there signs of continued data extraction or database enumeration?
    context: Successful UNION SELECT often leads to systematic database harvesting.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.body.bytes

  # Type 5: Forensic Deep-Dive
  - question: What specific database tables or sensitive data was targeted by the UNION SELECT?
    context: UNION SELECT payloads often target user tables, credentials, or sensitive application data.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "UNION SELECT"
        condition: selection
      fields:
        - rule.name
        - url.query
        - http.request.body.content

  - question: Does the injection technique match known automated SQL injection tools?
    context: Tool signatures help identify the attack vector and potential additional capabilities.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: "/content/rubric/"
        condition: selection
      fields:
        - http.request.headers.user_agent
        - url.query
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other systems experiencing similar UNION SELECT injection attempts?
    context: Coordinated attacks often use the same advanced techniques across multiple targets.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "UNION SELECT"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: Is this part of a broader advanced persistent threat campaign?
    context: UNION SELECT techniques often indicate sophisticated attackers with database expertise.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.request.method