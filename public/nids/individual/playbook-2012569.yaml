name: ET WEB_SPECIFIC_APPS coRED CMS rubID Parameter INSERT INTO SQL Injection Attempt
id: 22012569
description: |
  Detects SQL injection attempts targeting coRED CMS rubID parameter using INSERT INTO statements.
  May trigger on legitimate database operations containing these keywords in URL parameters.
type: detection
detection_id: 2012569
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete INSERT INTO payload in the rubID parameter?
    context: INSERT INTO injections indicate attempts to add malicious data or backdoors to the database.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - rule.name

  - question: What specific table and values is the attacker attempting to insert?
    context: INSERT payloads reveal the attacker's target tables and the malicious data being injected.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.method
        - url.path
        - url.query

  # Type 2: Triage Assessment
  - question: Is this part of an escalated attack sequence following reconnaissance?
    context: INSERT attacks typically follow successful SELECT injections, indicating advanced exploitation.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "SQL Injection"
        condition: selection
      fields:
        - rule.name
        - url.path
        - http.request.method

  - question: Does the source exhibit characteristics of legitimate administrative access?
    context: Internal IPs or known admin sources may indicate authorized database maintenance operations.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.method
        - url.path
        - http.response.status_code

  # Type 3: Activity Context
  - question: What database manipulation attempts preceded this INSERT injection?
    context: Understanding the attack progression reveals if this is part of a systematic database compromise.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.method
        - url.path
        - url.query
        - http.response.status_code

  - question: What was the application's response to the INSERT injection attempt?
    context: Response codes and content reveal if the malicious data was successfully inserted.
    range: +2m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  # Type 4: Impact Assessment
  - question: Did the INSERT injection successfully modify the database?
    context: Successful INSERT operations may create backdoor accounts or inject malicious content.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: Are there signs of backdoor creation or privilege escalation?
    context: INSERT injections often target user tables to create administrative accounts.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code

  # Type 5: Forensic Deep-Dive
  - question: What specific malicious content was the attacker attempting to insert?
    context: INSERT payloads may contain web shells, backdoor accounts, or malicious application data.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "INSERT INTO"
        condition: selection
      fields:
        - rule.name
        - url.query
        - http.request.body.content

  - question: Does this match known coRED CMS exploitation techniques or attack tools?
    context: Specific INSERT patterns may indicate automated exploitation frameworks or manual techniques.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: "/content/rubric/"
        condition: selection
      fields:
        - http.request.headers.user_agent
        - url.query
        - http.request.method

  - question: Are there indicators of persistent access or backdoor installation?
    context: Successful INSERT attacks often establish persistence mechanisms for continued access.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  # Type 6: Enterprise Correlation
  - question: Are other web applications experiencing similar INSERT injection attempts?
    context: Coordinated attacks often attempt to establish backdoors across multiple compromised systems.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "INSERT INTO"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path