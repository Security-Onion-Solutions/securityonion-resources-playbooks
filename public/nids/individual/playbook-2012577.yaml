name: ET WEB_SPECIFIC_APPS mySeatXT SQL Injection Attempt autocomplete.php field INSERT
id: 22012577
description: |
  Detects SQL injection attempts targeting mySeatXT autocomplete.php with INSERT statements.
  May trigger on legitimate database operations but typically indicates data manipulation attempts.
type: detection
detection_id: 2012577
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete INSERT-based SQL injection payload in the field parameter?
    context: INSERT statements in injection attacks indicate attempts to add malicious data or backdoors to the database.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: What specific table and data was being inserted via the SQL injection?
    context: Understanding the INSERT target reveals whether the attacker is creating backdoors or injecting malicious content.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.query
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this mySeatXT application legitimately deployed and accessible from this source?
    context: Legitimate administrative access to mySeatXT would explain autocomplete functionality usage.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/web/classes/"
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.method

  - question: Does the source IP have a history of legitimate web application usage?
    context: Established legitimate usage patterns help distinguish between authorized and malicious activity.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.domain
        - http.request.method

  # Type 3: Activity Context
  - question: What other SQL injection techniques were attempted before this INSERT attack?
    context: Attack progression from reconnaissance to data manipulation indicates systematic exploitation attempts.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "autocomplete.php"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Were there any database enumeration activities targeting the mySeatXT application?
    context: Attackers often enumerate database structure before attempting to insert malicious data.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/web/"
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the INSERT-based SQL injection receive successful HTTP responses?
    context: Successful responses may indicate the malicious data was inserted into the database.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.full

  - question: Were there follow-up requests indicating successful database modification?
    context: Attackers often verify successful data insertion or attempt to access newly created backdoors.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/web/classes/"
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  # Type 5: Forensic Deep-Dive
  - question: What type of malicious data was being inserted - webshells, user accounts, or backdoor configurations?
    context: INSERT payload analysis reveals the attacker's persistence strategy and potential access mechanisms.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - alert.signature
        - http.request.body.content

  - question: Are there signs of successful database backdoor creation or privilege escalation?
    context: Successful INSERT attacks may create persistent access mechanisms or elevate attacker privileges.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  # Type 6: Enterprise Correlation
  - question: Are other systems showing similar INSERT-based SQL injection attempts?
    context: Coordinated database manipulation attacks across multiple systems indicate a sophisticated threat campaign.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "mySeatXT SQL Injection"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name