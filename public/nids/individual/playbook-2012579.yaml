name: ET WEB_SPECIFIC_APPS mySeatXT SQL Injection Attempt autocomplete.php field ASCII
id: 22012579
description: |
  Detects SQL injection attempts targeting mySeatXT autocomplete.php using ASCII function with SELECT statements.
  May trigger on legitimate database queries but typically indicates advanced exploitation attempts.
type: detection
detection_id: 2012579
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete ASCII-based SQL injection payload in the field parameter?
    context: ASCII function usage in SQL injection indicates sophisticated blind injection techniques for data extraction.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: What specific data was being extracted using the ASCII function technique?
    context: ASCII-based extraction reveals character-by-character data enumeration attempts.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.query
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this mySeatXT application legitimately deployed and accessible from this source?
    context: Legitimate administrative access to mySeatXT would explain autocomplete functionality usage.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/web/classes/"
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.method

  - question: Does the source IP have a history of legitimate web application usage?
    context: Established legitimate usage patterns help distinguish between authorized and malicious activity.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.domain
        - http.request.method

  # Type 3: Activity Context
  - question: What other SQL injection techniques were attempted before this ASCII-based attack?
    context: Attack progression from basic to advanced techniques indicates systematic exploitation attempts.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "autocomplete.php"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Were there any reconnaissance activities targeting the mySeatXT application?
    context: Attackers often enumerate application structure before launching sophisticated injection attacks.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/web/"
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the ASCII-based SQL injection receive successful HTTP responses?
    context: Successful responses may indicate the blind injection technique was effective for data extraction.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.full

  - question: Were there multiple ASCII function calls indicating systematic data extraction?
    context: Repeated ASCII-based queries suggest successful blind injection and ongoing data enumeration.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "autocomplete.php"
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - http.response.body.bytes

  # Type 5: Forensic Deep-Dive
  - question: What specific ASCII character positions were being enumerated?
    context: Character position analysis reveals the systematic approach to blind SQL injection data extraction.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - alert.signature
        - http.request.body.content

  - question: Are there indicators of automated blind SQL injection tools?
    context: Tool signatures help identify the sophistication level and potential attribution of the attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.headers.user-agent
        - url.query
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other systems showing similar ASCII-based SQL injection attempts?
    context: Coordinated advanced injection attacks across multiple systems indicate a sophisticated threat campaign.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "mySeatXT SQL Injection"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name