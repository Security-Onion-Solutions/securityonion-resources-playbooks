name: ET WEB_SPECIFIC_APPS WordPress Lazyest Gallery Plugin image Parameter Cross Site Scripting Attempt
id: 22012581
description: |
  Detects XSS attempts targeting WordPress Lazyest Gallery plugin image parameter.
  May trigger on legitimate JavaScript usage but typically indicates malicious script injection.
type: detection
detection_id: 2012581
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete XSS payload injected into the image parameter?
    context: Understanding the exact script injection reveals the attacker's intent and potential impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: What specific JavaScript functions or event handlers were used in the XSS attempt?
    context: Different XSS techniques indicate attacker sophistication and potential payload execution methods.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.query
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this WordPress site legitimately using the Lazyest Gallery plugin?
    context: Legitimate plugin usage would explain access to lazyest-popup.php but not malicious parameters.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-content/plugins/lazyest-gallery/"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Does the source IP have a history of legitimate WordPress site usage?
    context: Established legitimate usage patterns help distinguish between authorized and malicious activity.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: "/wp-"
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.request.method

  # Type 3: Activity Context
  - question: What other WordPress plugin enumeration activities preceded this XSS attempt?
    context: Plugin scanning often precedes targeted exploitation attempts against vulnerable WordPress installations.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-content/plugins/"
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: Were there any WordPress vulnerability scanning tools detected?
    context: Automated WordPress scanners often indicate systematic exploitation attempts rather than targeted attacks.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.headers.user-agent
        - url.path
        - http.request.method

  # Type 4: Impact Assessment
  - question: Did the XSS attempt receive successful HTTP responses from the WordPress site?
    context: Successful responses may indicate the XSS payload was processed and potentially executed.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.full

  - question: Were there any follow-up requests indicating successful XSS execution?
    context: Attackers often make additional requests after successful XSS to steal cookies or perform actions.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.headers.referer
        - http.request.method

  # Type 5: Forensic Deep-Dive
  - question: What type of XSS attack vector was used - reflected, stored, or DOM-based?
    context: XSS type classification helps determine the persistence and impact of the attack.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - alert.signature
        - http.request.body.content

  - question: Are there signs of session hijacking or credential theft attempts?
    context: Successful XSS attacks often lead to session token theft or credential harvesting activities.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.headers.cookie
        - url.query
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other WordPress installations showing similar XSS exploitation attempts?
    context: Coordinated XSS attacks across multiple WordPress sites indicate a broader campaign targeting this plugin.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "WordPress"
          rule.name|contains: "Cross Site Scripting"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name