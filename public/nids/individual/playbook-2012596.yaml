name: ET WEB_SPECIFIC_APPS mySeatXT SQL Injection Attempt autocomplete.php field UNION SELECT
id: 22012596
description: |
  Detects SQL injection attempts targeting mySeatXT autocomplete.php using UNION SELECT statements.
  May trigger on legitimate database queries containing similar patterns in rare cases.
type: detection
detection_id: 2012596
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the field parameter?
    context: Understanding the exact UNION SELECT payload reveals the attacker's database enumeration intent.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: Is this a legitimate administrative request to the mySeatXT application?
    context: Authorized database operations may occasionally contain similar SQL keywords.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/web/classes/autocomplete.php'
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - user_agent.original

  - question: What other SQL injection attempts preceded this UNION SELECT attack?
    context: Attackers often probe with multiple injection techniques before finding successful vectors.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - url.full
        - alert.signature

  - question: What database columns or tables was the attacker attempting to enumerate?
    context: UNION SELECT attacks typically target specific database structures for data extraction.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.query
        - payload_printable

  - question: Has the SQL injection attempt resulted in successful database access?
    context: Successful injections may trigger database error responses or data leakage.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code|contains:
            - 200
            - 500
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.path

  - question: Are there signs of automated SQL injection scanning tools?
    context: Automated tools generate distinctive request patterns and user agents.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - user_agent.original
        - http.request.method
        - url.path

  - question: What data was potentially extracted through the UNION SELECT operation?
    context: Successful UNION attacks may reveal sensitive database information in HTTP responses.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/web/classes/autocomplete.php'
        condition: selection
      fields:
        - http.response.body.content
        - http.response.body.bytes
        - http.response.status_code

  - question: Has the attacker established persistence through database modifications?
    context: SQL injection may be used to create backdoor accounts or modify application logic.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - 'INSERT'
            - 'UPDATE'
            - 'CREATE'
        condition: selection
      fields:
        - rule.name
        - url.full
        - alert.signature

  - question: Are there concurrent SQL injection attempts against other mySeatXT components?
    context: Attackers often target multiple vulnerabilities within the same application framework.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'mySeatXT'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Is this part of a broader SQL injection campaign across the enterprise?
    context: Coordinated attacks may target similar vulnerabilities across multiple systems.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'SQL Injection'
          alert.signature|contains: 'UNION SELECT'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name