name: ET WEB_SPECIFIC_APPS Interleave basicstats.php AjaxHandler Parameter Cross Site Scripting Attempt
id: 22012603
description: |
  Detects cross-site scripting attempts targeting Interleave basicstats.php AjaxHandler parameter.
  May trigger on legitimate JavaScript code or HTML content in rare cases.
type: detection
detection_id: 2012603
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact XSS payload in the AjaxHandler parameter?
    context: Understanding the complete XSS payload reveals the attacker's client-side execution intent.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: Is this legitimate JavaScript code being passed to the AjaxHandler?
    context: Normal AJAX operations may include JavaScript functions or HTML content.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/basicstats.php'
        condition: selection
      fields:
        - src_ip
        - user_agent.original
        - http.request.method

  - question: What other XSS attempts preceded this AjaxHandler attack?
    context: XSS attacks often involve multiple payload variations to bypass input validation.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: 'Cross Site Scripting'
        condition: selection
      fields:
        - rule.name
        - url.full
        - alert.signature

  - question: Which XSS vector is being exploited in the malicious payload?
    context: Different XSS vectors require different remediation approaches and indicate attack sophistication.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - payload_printable
        - url.query

  - question: Has the XSS payload successfully executed in victim browsers?
    context: Successful XSS attacks may generate follow-up requests or data exfiltration attempts.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - src_ip
        - http.response.body.bytes
        - url.path

  - question: Are there signs of automated XSS scanning tools?
    context: Automated scanners generate distinctive patterns and user agents when probing for XSS vulnerabilities.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - user_agent.original
        - http.request.method
        - url.path

  - question: What sensitive data may be exposed through the XSS vulnerability?
    context: XSS attacks can steal session cookies, credentials, or other sensitive client-side data.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'cookie'
            - 'session'
            - 'token'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.request.body.content

  - question: Has the attacker established persistent XSS through stored payloads?
    context: Stored XSS attacks may persist in the application database affecting multiple users.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - 'Cross Site Scripting'
            - 'XSS'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - url.path

  - question: Are there concurrent XSS attempts against other Interleave application components?
    context: Attackers may target multiple vulnerable parameters within the same application.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'Interleave'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Is this part of a broader XSS campaign targeting multiple web applications?
    context: Coordinated XSS attacks may target similar vulnerabilities across different applications.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'Cross Site Scripting'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name