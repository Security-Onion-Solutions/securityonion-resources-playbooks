name: ET WEB_SPECIFIC_APPS PHP-Nuke Surveys pollID parameter UPDATE SET SQL Injection Attempt
id: 22012655
description: |
  Detects SQL injection attempts targeting PHP-Nuke Surveys module via pollID parameter using UPDATE SET statements.
  May trigger on legitimate database operations if similar patterns are used in URL parameters.
type: detection
detection_id: 2012655
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete SQL injection payload in the pollID parameter?
    context: Understanding the exact UPDATE SET statement reveals the attacker's intent to modify database records.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - rule.name

  - question: What specific database fields were targeted in the UPDATE statement?
    context: Analyzing the UPDATE syntax reveals which database columns the attacker attempted to modify.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/modules/Surveys/modules.php'
        condition: selection
      fields:
        - url.query
        - http.request.method
        - url.full

  # Type 2: Triage Assessment
  - question: Is this a legitimate administrative operation on the PHP-Nuke Surveys module?
    context: Authorized administrators may perform database operations through the web interface.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/modules/Surveys/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: Does the source IP have a history of legitimate PHP-Nuke administration?
    context: Regular administrative access patterns help distinguish between authorized and malicious activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/modules/'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - user_agent.original

  # Type 3: Activity Context
  - question: What other PHP-Nuke modules were accessed before this SQL injection attempt?
    context: Attackers often enumerate multiple modules before launching injection attacks.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/modules/'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code

  - question: Were there reconnaissance activities targeting the PHP-Nuke installation?
    context: SQL injection attempts are often preceded by application fingerprinting and vulnerability scanning.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - user_agent.original
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the SQL injection attempt receive a successful HTTP response?
    context: Response codes and content length indicate whether the injection was successful or blocked.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/modules/Surveys/modules.php'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.query

  - question: Were there subsequent database queries or administrative actions?
    context: Successful SQL injection often leads to additional database manipulation or privilege escalation.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method

  # Type 5: Forensic Deep-Dive
  - question: What database management operations were attempted through SQL injection?
    context: Analyzing the complete attack sequence reveals the scope of database compromise attempts.
    range: -1h/+1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.full

  - question: Were there attempts to extract sensitive data from the database?
    context: UPDATE statements may be used to modify data for later extraction or to plant backdoors.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'SELECT'
            - 'UNION'
            - 'CONCAT'
        condition: selection
      fields:
        - url.query
        - http.response.body.bytes
        - http.response.status_code

  # Type 6: Enterprise Correlation
  - question: Are other systems showing similar PHP-Nuke SQL injection attempts?
    context: Attackers often target multiple web applications with the same vulnerability across the network.
    range: -24h/+24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'PHP-Nuke'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name