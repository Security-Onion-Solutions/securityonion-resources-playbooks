name: ET WEB_SPECIFIC_APPS Joomla Component com_doqment Remote File inclusion Attempt
id: 22012659
description: |
  Detects remote file inclusion attempts targeting Joomla com_doqment component via mosConfig_absolute_path parameter.
  May trigger on legitimate file operations or administrative functions using external file references.
type: detection
detection_id: 2012659
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact remote file URL being included in the RFI attempt?
    context: The remote file URL reveals the attacker's infrastructure and payload delivery mechanism.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - http.request.body.content

  - question: Is this normal administrative access to the Joomla com_doqment component?
    context: Legitimate administrators may access document management functions with similar URL patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains: 'option=com_doqment'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: What other Joomla components were targeted by this attacker?
    context: Multiple component attacks indicate systematic Joomla exploitation rather than opportunistic scanning.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains: 'option=com_'
        condition: selection
      fields:
        - url.query
        - url.path
        - http.response.status_code

  - question: Was the remote file successfully retrieved and executed on the target server?
    context: Successful RFI attacks result in remote code execution and potential server compromise.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.bytes
        - http.response.body.content

  - question: Did the server make outbound connections to retrieve the malicious file?
    context: Outbound connections to attacker-controlled servers indicate successful RFI exploitation.
    range: +10m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - bytes_sent
        - bytes_received

  - question: What malicious payloads or backdoors were hosted on the remote file server?
    context: Analyzing the remote file content reveals attack objectives and persistence mechanisms.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          http.request.method: 'GET'
        condition: selection
      fields:
        - url.full
        - http.response.body.content
        - http.response.status_code

  - question: Are there signs of web shell installation or persistent access mechanisms?
    context: Successful RFI often leads to web shell deployment for persistent server access.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '.php'
            - 'shell'
            - 'cmd'
            - 'eval'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: What was the attack reconnaissance pattern before the RFI attempt?
    context: Pre-attack scanning reveals whether this was targeted exploitation or automated vulnerability scanning.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code
        - http.request.headers.user_agent

  - question: Has this Joomla installation been compromised or accessed suspiciously?
    context: Post-RFI activity may indicate successful compromise and lateral movement attempts.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/administrator/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Are other Joomla installations in the enterprise experiencing similar RFI attacks?
    context: Coordinated RFI attacks across multiple Joomla sites suggest enterprise-wide exploitation campaign.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - 'Joomla'
            - 'Remote File'
            - 'RFI'
        condition: selection
      fields:
        - dst_ip
        - src_ip
        - rule.name

  - question: What other web applications on this server show signs of file inclusion vulnerabilities?
    context: Multiple file inclusion attempts indicate systematic exploitation of include/require vulnerabilities.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: 'File Inclusion'
        condition: selection
      fields:
        - rule.name
        - url.path