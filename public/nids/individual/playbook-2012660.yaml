name: ET WEB_SPECIFIC_APPS Portel patron Parameter Blind SQL Injection Attempt
id: 22012660
description: |
  Detects blind SQL injection attempts targeting Portel application patron parameter using substring functions.
  May trigger on legitimate database queries using substring operations in web applications.
type: detection
detection_id: 2012660
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete blind SQL injection payload using substring function?
    context: Blind injection payloads reveal attack methodology and targeted database structure.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - http.request.body.content

  - question: Is this legitimate use of the Portel library decision engine?
    context: The decide.php script may be used legitimately for library patron management functions.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/portel/libreria/php/decide.php'
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.status_code

  - question: What other blind SQL injection techniques were attempted against this target?
    context: Attackers often use multiple blind injection methods to extract data systematically.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: 'Blind SQL Injection'
        condition: selection
      fields:
        - rule.name
        - src_ip
        - url.path

  - question: What was the timing pattern of requests indicating blind injection enumeration?
    context: Blind injections require multiple requests with systematic timing patterns for data extraction.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/portel/libreria/php/decide.php'
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - http.response.bytes

  - question: Did the blind injection attempts reveal database schema or sensitive data?
    context: Successful blind injections extract data through response timing and content differences.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'substring'
            - 'ascii'
            - 'char'
        condition: selection
      fields:
        - url.query
        - http.response.bytes
        - http.response.status_code

  - question: What database functions and tables were targeted in the injection attempts?
    context: Specific database functions reveal the attacker's knowledge of the underlying DBMS.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'information_schema'
            - 'sys.tables'
            - 'user()'
            - 'version()'
        condition: selection
      fields:
        - url.query
        - url.path

  - question: Are there indicators of automated SQL injection tools being used?
    context: Tool signatures in request patterns help identify attack sophistication and attribution.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.request.headers.user_agent|contains:
            - 'sqlmap'
            - 'havij'
            - 'python'
            - 'curl'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - url.path

  - question: What was the source IP's scanning behavior before the injection attempt?
    context: Pre-attack reconnaissance reveals whether this was targeted or opportunistic scanning.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Has this Portel installation been compromised or accessed suspiciously?
    context: Post-injection activity may indicate successful compromise and further exploitation.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/portel/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: Are other library management systems in the enterprise under similar attack?
    context: Coordinated attacks against library systems suggest targeted campaign against educational institutions.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - 'SQL Injection'
            - 'library'
            - 'patron'
        condition: selection
      fields:
        - dst_ip
        - src_ip
        - rule.name

  - question: What other web applications on this server show signs of SQL injection probing?
    context: Systematic database attack patterns across multiple applications indicate comprehensive exploitation attempt.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - url.path