name: ET WEB_SPECIFIC_APPS vBulletin cChatBox messageid Parameter UNION SELECT SQL Injection Attempt
id: 22012663
description: |
  Detects SQL injection attempts targeting the vBulletin cChatBox component using UNION SELECT statements in the messageid parameter.
  May trigger on legitimate database queries or chat message processing that uses UNION operations.
type: detection
detection_id: 2012663
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete UNION SELECT SQL injection payload in the messageid parameter?
    context: The exact UNION SELECT syntax reveals the attacker's data extraction technique and target columns.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - http.request.body.content

  - question: How many columns were specified in the UNION SELECT statement?
    context: The column count reveals the database schema structure and extraction scope.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "UNION"
            - "SELECT"
            - "messageid="
        condition: selection
      fields:
        - url.query
        - url.full
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this normal chat functionality requiring database joins in cChatBox?
    context: Legitimate chat applications may use UNION operations for message aggregation or display.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: "/cchatbox.php"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method

  - question: Does the source IP have legitimate vBulletin forum access?
    context: Regular forum users would have normal browsing patterns without SQL injection attempts.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "vbulletin"
            - "forum"
        condition: selection
      fields:
        - src_ip
        - url.path
        - user_agent.original

  # Type 3: Activity Context
  - question: What other SQL injection techniques were attempted in the same session?
    context: Attackers often try multiple SQL injection methods to find successful exploitation vectors.
    range: -15m/+15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "SELECT"
            - "INSERT"
            - "DELETE"
            - "UPDATE"
        condition: selection
      fields:
        - url.query
        - url.path
        - http.request.method

  - question: Were there database enumeration attempts before the UNION SELECT attack?
    context: Attackers typically enumerate database structure before crafting UNION SELECT payloads.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "information_schema"
            - "table_name"
            - "column_name"
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - http.request.method

  # Type 4: Impact Assessment
  - question: Did the UNION SELECT injection successfully extract database information?
    context: Successful UNION SELECT attacks would show response patterns indicating data extraction.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/cchatbox.php"
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.query

  - question: Were sensitive user credentials or data exposed through the injection?
    context: UNION SELECT attacks often target user tables containing passwords and personal information.
    range: +10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "password"
            - "email"
            - "username"
        condition: selection
      fields:
        - url.query
        - http.response.body.bytes
        - http.response.status_code

  # Type 5: Forensic Deep-Dive
  - question: What specific database tables were targeted for data extraction?
    context: The UNION SELECT targets reveal what sensitive information the attacker was seeking.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "FROM"
            - "user"
            - "admin"
        condition: selection
      fields:
        - url.query
        - url.full
        - http.request.method

  - question: Did the attacker attempt to extract database configuration or credentials?
    context: Advanced attackers use UNION SELECT to extract database connection strings and administrative credentials.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "config"
            - "database"
            - "connection"
        condition: selection
      fields:
        - url.query
        - url.path
        - http.response.status_code

  - question: Were there attempts to escalate privileges through extracted information?
    context: Successful data extraction may lead to privilege escalation or administrative access attempts.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/admin"
            - "/administrator"
            - "/moderator"
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other vBulletin installations being targeted for UNION SELECT attacks?
    context: Attackers often target multiple instances of vulnerable components across an organization.
    range: -1h/+1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - "UNION"
            - "SELECT"
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.response.status_code

  - question: Is this part of a coordinated SQL injection campaign targeting multiple applications?
    context: UNION SELECT attacks often occur alongside other SQL injection techniques in broader campaigns.
    range: -2h/+2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SQL"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - alert.severity