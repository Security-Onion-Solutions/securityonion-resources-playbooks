name: ET WEB_SPECIFIC_APPS WordPress SocialGrid Plugin default_services Cross-Site Scripting Vulnerability
id: 22012722
description: |
  Detects Cross-Site Scripting (XSS) attempts targeting the default_services parameter in WordPress SocialGrid plugin.
  Attackers inject malicious JavaScript through the inline-admin.js.php script to steal credentials or perform unauthorized actions.
  May trigger on legitimate plugin configuration but typically indicates XSS exploitation attempt.
type: detection
detection_id: 2012722
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload injected into the default_services parameter?
    context: Understanding the malicious script reveals the attacker's intent and potential impact on WordPress users.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method

  - question: What specific JavaScript events or functions were targeted in the SocialGrid XSS attempt?
    context: Analyzing the script type helps determine the attack vector and potential user interaction required for exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'inline-admin.js.php'
        condition: selection
      fields:
        - url.query
        - http.request.headers
        - user_agent.original

  # Type 2: Triage Assessment
  - question: Is this legitimate WordPress SocialGrid plugin administration?
    context: Determining if this represents authorized plugin configuration or malicious XSS exploitation.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-admin/'
            - '/wp-login.php'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: Does the source IP have established WordPress administrative sessions?
    context: Establishing if the source represents a legitimate WordPress administrator or external attacker.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - 'wp-admin'
            - 'plugins'
          http.request.headers|contains: 'wordpress'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.headers

  # Type 3: Activity Context
  - question: What WordPress plugin reconnaissance preceded this XSS attempt?
    context: Identifying scanning activity that typically precedes targeted WordPress plugin attacks.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/plugins/'
            - '/wp-content/'
            - 'socialgrid'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: What other WordPress plugins were probed by this source?
    context: Understanding the scope of reconnaissance against WordPress plugin installations.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - '/plugins/'
            - '/wp-content/plugins/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - url.query

  # Type 4: Impact Assessment
  - question: Were there successful responses indicating potential XSS payload delivery to users?
    context: Determining if the XSS attempt succeeded based on server response characteristics and plugin behavior.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'socialgrid'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.headers

  - question: Did WordPress users subsequently access the compromised SocialGrid plugin pages?
    context: Identifying potential victims who may have executed the injected JavaScript payload.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'socialgrid'
            - 'inline-admin.js.php'
        condition: selection
      fields:
        - src_ip
        - user_agent.original
        - http.request.headers

  # Type 5: Forensic Deep-Dive
  - question: What WordPress credential theft or session hijacking mechanisms were embedded in the XSS?
    context: Analyzing the malicious script to understand WordPress-specific data theft capabilities and admin access attempts.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'document.cookie'
            - 'wp_'
            - 'wordpress'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - http.response.body.content

  - question: Are there signs of WordPress administrative compromise following the XSS attack?
    context: Determining if the XSS led to compromise of WordPress administrative accounts or unauthorized plugin modifications.
    range: +6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'wp-admin'
            - 'plugins.php'
            - 'plugin-editor.php'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other WordPress installations experiencing similar SocialGrid or plugin XSS attacks?
    context: Identifying if this is part of a broader campaign targeting WordPress plugin vulnerabilities.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - 'WordPress'
            - 'Plugin'
            - 'Cross-Site Scripting'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name