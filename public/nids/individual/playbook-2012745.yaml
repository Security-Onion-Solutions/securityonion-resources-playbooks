name: ET WEB_SPECIFIC_APPS phpRS id parameter SELECT FROM SQL Injection Attempt
id: 22012745
description: |
  Detects SQL injection attempts against phpRS model-kits.php using SELECT FROM statements.
  Attackers exploit the id parameter to extract data from the database.
  Legitimate usage would not contain SQL SELECT statements in URL parameters.
type: detection
detection_id: 2012745
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What specific SELECT FROM SQL payload was injected in the id parameter?
    context: The exact query reveals the attacker's target tables and data extraction method.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query

  - question: What additional parameters were manipulated alongside the id parameter?
    context: Multiple parameter exploitation indicates sophisticated attack understanding.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.body.content

  # Type 2: Triage Assessment
  - question: Is this a known phpRS installation with authorized database access?
    context: Legitimate administrators might trigger alerts during maintenance or testing.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: "/model-kits.php"
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - http.response.status_code

  - question: Are there recent legitimate database queries from this source?
    context: Regular application usage patterns help distinguish attacks from normal operations.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/model-kits.php"
        condition: selection
      fields:
        - url.query
        - http.response.status_code

  # Type 3: Activity Context
  - question: What application reconnaissance preceded this SQL injection?
    context: Attackers often explore application structure before launching injection attacks.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - ".php"
            - "model"
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code

  - question: What error messages or database responses were generated?
    context: Error-based SQL injection relies on database error messages for information gathering.
    range: +/-15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path: "/model-kits.php"
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  # Type 4: Impact Assessment
  - question: Did the SELECT FROM injection successfully extract database data?
    context: Response size and content indicate successful data retrieval.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: What sensitive information was potentially accessed through this injection?
    context: phpRS applications often contain product catalogs and customer information.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "users"
            - "admin"
            - "password"
        condition: selection
      fields:
        - url.query
        - http.response.body.bytes

  # Type 5: Forensic Deep-Dive
  - question: What database tables and columns are being targeted?
    context: Specific table names reveal the attacker's knowledge of the application structure.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "information_schema"
            - "table_name"
            - "column_name"
        condition: selection
      fields:
        - url.query
        - http.response.status_code

  - question: Are there signs of UNION-based SQL injection techniques?
    context: UNION attacks allow extraction of data from multiple database tables.
    range: +/-30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path: "/model-kits.php"
          url.query|contains:
            - "UNION"
            - "SELECT"
        condition: selection
      fields:
        - url.query
        - http.response.body.bytes

  # Type 6: Enterprise Correlation
  - question: Are other phpRS installations being targeted across the network?
    context: Identifies scope of phpRS-specific attack campaign.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "phpRS"
            - "SQL"
        condition: selection
      fields:
        - dst_ip
        - rule.name

  - question: Is this attacker targeting multiple web applications with SQL injection?
    context: Reveals broader database attack campaign across organizational web assets.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - "SELECT"
            - "FROM"
            - "WHERE"
        condition: selection
      fields:
        - dst_ip
        - url.path