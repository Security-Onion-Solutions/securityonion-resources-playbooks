name: ET WEB_SPECIFIC_APPS phpRS id parameter UNION SELECT SQL Injection Attempt
id: 22012747
description: |
  Detects SQL injection attempts targeting phpRS model-kits.php using UNION SELECT statements.
  May trigger on legitimate database queries containing similar keywords in rare cases.
type: detection
detection_id: 2012747
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the URI?
    context: Understanding the exact UNION SELECT syntax reveals the attacker's database enumeration strategy.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content

  - question: Is this phpRS application authorized for this server?
    context: Legitimate phpRS installations should be documented and expected on specific servers.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/model-kits.php"
            - "/phprs"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: What other SQL injection patterns has this source attempted?
    context: Multiple injection attempts indicate systematic database exploitation rather than accidental queries.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "SQL Injection"
            - "UNION SELECT"
            - "INSERT INTO"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.full

  - question: What was the sequence of requests leading to this injection attempt?
    context: Understanding the attack progression helps identify reconnaissance and exploitation phases.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: Did the SQL injection attempt return database content?
    context: Successful UNION SELECT attacks typically return larger response sizes with database data.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/model-kits.php"
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.query

  - question: What database tables or columns were targeted in the UNION query?
    context: UNION SELECT attacks often reveal specific database schema knowledge or enumeration attempts.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: Are there signs of successful database authentication bypass?
    context: SQL injection may lead to authentication bypass and unauthorized access to application features.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code|contains:
            - 200
            - 302
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.method

  - question: What user-agent and request headers indicate the attack tool used?
    context: Automated SQL injection tools often have distinctive user-agent strings and header patterns.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/model-kits.php"
        condition: selection
      fields:
        - http.request.headers.user_agent
        - http.request.headers

  - question: Has this attack pattern been observed against other web applications?
    context: Systematic SQL injection campaigns often target multiple applications with similar vulnerabilities.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SQL Injection"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: Are there indicators of data exfiltration following the injection?
    context: Successful SQL injection may be followed by large data transfers indicating database dumping.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - bytes_out
        - bytes_in
        - duration

  - question: What other systems show similar phpRS SQL injection attempts?
    context: Understanding campaign scope helps prioritize response across multiple vulnerable systems.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name: "ET WEB_SPECIFIC_APPS phpRS id parameter UNION SELECT SQL Injection Attempt"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.full