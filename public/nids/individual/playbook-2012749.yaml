name: ET WEB_SPECIFIC_APPS phpRS id parameter UPDATE SET SQL Injection Attempt
id: 22012749
description: |
  Detects SQL injection attempts targeting phpRS model-kits.php using UPDATE SET statements.
  May trigger on legitimate database update operations containing similar keywords in rare cases.
type: detection
detection_id: 2012749
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete UPDATE SET injection payload?
    context: Understanding the exact update syntax reveals what database records the attacker is attempting to modify.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query

  - question: Are UPDATE operations authorized for this phpRS application?
    context: Legitimate phpRS installations should have documented update functionality and access controls.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: "/model-kits.php"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method

  - question: What other SQL injection techniques preceded this UPDATE attempt?
    context: UPDATE attacks often follow reconnaissance with SELECT queries to identify target records.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - "SQL Injection"
            - "UNION SELECT"
            - "INSERT INTO"
        condition: selection
      fields:
        - rule.name
        - url.query

  - question: Which database fields or records are being targeted for modification?
    context: UPDATE injection payloads reveal what specific data the attacker wants to change.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: Did the UPDATE injection succeed based on application responses?
    context: Successful UPDATE operations typically return different response patterns than failed attempts.
    range: +2m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/model-kits.php"
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.query

  - question: Are user credentials or privileges being modified through UPDATE injection?
    context: UPDATE attacks against user tables can escalate privileges or change authentication data.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: What administrative functions were accessed after the UPDATE attempt?
    context: Successful privilege escalation through UPDATE injection may lead to administrative access.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "admin"
            - "config"
            - "settings"
        condition: selection
      fields:
        - url.full
        - http.response.status_code

  - question: What configuration or security settings might be compromised?
    context: UPDATE injection can modify application settings to disable security controls or create backdoors.
    range: +10m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Has this source attempted UPDATE injection against other systems?
    context: Systematic UPDATE injection campaigns indicate sophisticated database manipulation attacks.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "UPDATE SET SQL Injection"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: What data integrity issues resulted from the UPDATE attempt?
    context: Successful UPDATE injection can corrupt critical application data or create inconsistent records.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: "/model-kits.php"
          http.response.status_code|contains:
            - "500"
            - "400"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.status_code

  - question: Are there enterprise-wide UPDATE injection patterns from this attacker?
    context: Understanding campaign scope helps identify all systems vulnerable to data modification attacks.
    range: -12h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name: "ET WEB_SPECIFIC_APPS phpRS id parameter UPDATE SET SQL Injection Attempt"
        condition: selection
      fields:
        - dst_ip
        - url.full