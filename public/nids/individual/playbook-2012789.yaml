name: ET WEB_SPECIFIC_APPS KLINK txtCodiInfo parameter DELETE FROM SQL Injection Attempt
id: 22012789
description: |
  Detects SQL injection attempts targeting the KLINK web application's txtCodiInfo parameter using DELETE FROM statements.
  This indicates an attacker attempting to delete data from the database through the vulnerable interna.php endpoint.
  Legitimate use of this parameter should not contain SQL DELETE statements.
type: detection
detection_id: 2012789
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the txtCodiInfo parameter?
    context: Understanding the exact DELETE statement reveals the attacker's intent and target tables.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - rule.name

  - question: What specific table or data was the attacker attempting to delete?
    context: Analyzing the DELETE statement structure helps assess potential data loss impact.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - url.path

  - question: Is this normal administrative activity for the KLINK application?
    context: Legitimate database maintenance might trigger similar patterns if done through web interface.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: "/interna.php"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method

  - question: What other SQL injection attempts preceded this DELETE operation?
    context: Attackers often probe with SELECT statements before attempting destructive operations.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/interna.php"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Did the web server respond with database errors indicating successful injection?
    context: Error messages in responses can confirm if the SQL injection was successful.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.body.bytes

  - question: What was the source of this attack traffic?
    context: Identifying attack origin helps determine if this is automated scanning or targeted attack.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_port
        - network.bytes
        - network.packets

  - question: Are there signs of successful data deletion or database corruption?
    context: Post-attack analysis to determine if the DELETE operation actually executed.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: "/interna.php"
        condition: selection
      fields:
        - src_ip
        - http.response.status_code
        - http.response.body.bytes
        - url.query

  - question: What follow-up activities occurred after the SQL injection attempt?
    context: Attackers may attempt additional operations after successful database access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - url.query
        - http.response.status_code

  - question: Did the attacker attempt to access other vulnerable parameters or applications?
    context: Understanding attack scope helps identify if this is part of broader web application scanning.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query
        - http.request.method

  - question: Are other systems showing similar KLINK SQL injection attempts?
    context: Determines if this is part of a coordinated campaign against multiple KLINK installations.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "KLINK"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name