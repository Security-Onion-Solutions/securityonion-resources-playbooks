name: ET WEB_SPECIFIC_APPS KLINK txtCodiInfo parameter UNION SELECT SQL Injection Attempt
id: 22012790
description: |
  Detects SQL injection attempts targeting the KLINK web application's txtCodiInfo parameter using UNION SELECT statements.
  This indicates an attacker attempting to extract data from the database by combining results with legitimate queries.
  Legitimate use of this parameter should not contain SQL UNION operations.
type: detection
detection_id: 2012790
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete UNION SELECT payload in the txtCodiInfo parameter?
    context: Understanding the exact query structure reveals what data the attacker is attempting to extract.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - rule.name

  - question: What database columns or tables is the attacker targeting for data extraction?
    context: Analyzing the SELECT portion helps identify what sensitive information is at risk.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - url.path

  - question: Is this legitimate database query functionality for the KLINK application?
    context: Some applications may legitimately use UNION operations for complex data retrieval.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: "/interna.php"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method

  - question: What reconnaissance activities preceded this UNION SELECT injection?
    context: Attackers typically probe database structure before crafting UNION queries.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/interna.php"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Did the web application return sensitive data in response to the UNION query?
    context: Successful UNION injections often return database contents in HTTP responses.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.body.bytes

  - question: What is the attack pattern and automation level of this injection attempt?
    context: Understanding if this is manual testing or automated scanning affects response priority.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_port
        - network.bytes
        - network.packets

  - question: Are there indicators of successful data exfiltration following the UNION SELECT?
    context: Large response sizes or unusual data patterns may indicate successful data extraction.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.response.body.bytes
        - url.path
        - http.response.status_code

  - question: What additional SQL injection techniques did the attacker employ?
    context: Attackers often combine multiple injection methods to maximize data extraction.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method

  - question: Did the attacker target other web applications after this UNION SELECT attempt?
    context: Understanding lateral movement helps assess overall compromise scope.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query

  - question: Are other KLINK installations showing similar UNION SELECT injection attempts?
    context: Determines if this is part of a coordinated campaign targeting KLINK applications.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "KLINK"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: What database error messages were exposed during the UNION SELECT attempt?
    context: Error messages can reveal database structure and confirm injection success.
    range: +10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.response.body.content
        - http.response.status_code
        - url.query