name: ET WEB_SPECIFIC_APPS KLINK txtCodiInfo parameter UPDATE SET SQL Injection Attempt
id: 22012792
description: |
  Detects SQL injection attempts targeting the KLINK web application's txtCodiInfo parameter using UPDATE SET statements.
  This indicates an attacker attempting to modify existing database records, often to escalate privileges or alter critical data.
  Legitimate use of this parameter should not contain SQL UPDATE operations.
type: detection
detection_id: 2012792
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete UPDATE SET payload in the txtCodiInfo parameter?
    context: Understanding the exact update statement reveals what data or privileges the attacker is attempting to modify.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - rule.name

  - question: What specific database fields and values is the attacker attempting to update?
    context: Analyzing the UPDATE statement helps identify if privileges, passwords, or critical data are being modified.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - url.path

  - question: Is this normal data modification functionality for the KLINK application?
    context: Legitimate administrative functions might use UPDATE operations through web interfaces.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: "/interna.php"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method

  - question: What database enumeration activities preceded this UPDATE injection?
    context: Attackers typically identify updateable fields and current values before crafting UPDATE statements.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/interna.php"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Did the database successfully execute the UPDATE operation?
    context: Successful updates may be confirmed by specific response codes or confirmation messages.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.body.bytes

  - question: What is the attack source and sophistication level of this UPDATE injection?
    context: Understanding if this is targeted privilege escalation or automated scanning affects response urgency.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_port
        - network.bytes
        - network.packets

  - question: Are there signs of privilege escalation or unauthorized access after the UPDATE?
    context: Successful privilege updates may be followed by access to previously restricted functionality.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method
        - url.query

  - question: What additional database modifications occurred after the initial UPDATE?
    context: Attackers may perform multiple updates to establish comprehensive access or cover tracks.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Did the attacker attempt to verify the success of the UPDATE operation?
    context: Understanding verification attempts helps confirm if the privilege escalation was successful.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method

  - question: Are other KLINK installations showing similar UPDATE injection attempts?
    context: Determines if this is part of a coordinated campaign to escalate privileges across multiple systems.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "KLINK"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: What authentication mechanisms were bypassed to perform unauthorized updates?
    context: UPDATE injections often exploit authentication weaknesses to modify protected data.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.headers

  - question: Are there indicators of data integrity compromise following the UPDATE?
    context: Successful updates may affect application functionality or expose modified data in subsequent responses.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code
        - http.response.body.bytes