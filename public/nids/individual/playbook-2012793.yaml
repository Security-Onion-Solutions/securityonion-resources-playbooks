name: ET WEB_SPECIFIC_APPS E-Xoopport Samsara Sections module secid Parameter Blind SQL Injection Exploit
id: 22012793
description: |
  Detects blind SQL injection exploitation attempts targeting the E-Xoopport Samsara Sections module's secid parameter.
  This attack uses ASCII and SELECT functions to extract data through boolean-based blind injection techniques.
  Legitimate use of this parameter should not contain SQL functions or ASCII manipulation.
type: detection
detection_id: 2012793
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete blind SQL injection payload in the secid parameter?
    context: Understanding the ASCII-based extraction method reveals the sophistication and target of the attack.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - rule.name

  - question: What specific data is the attacker attempting to extract using the ASCII function?
    context: Analyzing the SELECT portion of the blind injection helps identify what sensitive information is being targeted.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - url.path

  - question: Is this normal functionality for the E-Xoopport Samsara Sections module?
    context: Legitimate section management might involve parameter-based operations that could appear similar.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: "/modules/sections/index.php"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method

  - question: What blind injection enumeration sequence preceded this ASCII-based extraction?
    context: Blind SQL injection typically involves systematic probing to identify injectable parameters and data structure.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/modules/sections/index.php"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Are there timing patterns indicating successful blind injection responses?
    context: Blind injections often rely on response timing differences to extract data character by character.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/modules/sections/index.php"
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - network.bytes

  - question: What is the automation level and tool signature of this blind injection attack?
    context: Understanding if this is manual testing or automated tool usage helps assess threat sophistication.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_port
        - network.bytes
        - network.packets

  - question: Are there indicators of successful data extraction through the blind injection?
    context: Successful blind injections may show patterns of systematic character extraction over time.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/modules/sections/index.php"
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - http.response.body.bytes

  - question: What other Xoops modules or functionality did the attacker target?
    context: Understanding lateral movement within the CMS helps assess overall compromise scope.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method

  - question: Did the attacker attempt to escalate from blind injection to other attack methods?
    context: Successful blind injections often lead to attempts at more direct database access or file system operations.
    range: +6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Are other E-Xoopport installations showing similar blind injection attempts?
    context: Determines if this is part of a coordinated campaign targeting E-Xoopport CMS installations.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "E-Xoopport"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: What database schema information was the attacker attempting to extract?
    context: Blind injections targeting specific ASCII ranges may indicate attempts to extract usernames, passwords, or configuration data.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path: "/modules/sections/index.php"
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - http.response.body.bytes

  - question: Are there signs of successful authentication bypass following the blind injection?
    context: Extracted credentials from blind injections are often used immediately for unauthorized access.
    range: +8h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.request.headers
        - http.response.status_code