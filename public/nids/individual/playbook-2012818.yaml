name: ET WEB_SPECIFIC_APPS Cisco Unified Operations Manager Blind SQL Injection Attempt
id: 22012818
description: |
  Detects blind SQL injection attempts targeting Cisco Unified Operations Manager's PRTestCreation.do endpoint.
  The attack uses time-based SQL injection with WAITFOR DELAY commands to extract database information.
  This vulnerability (CVE-2011-0960) allows attackers to execute arbitrary SQL commands and potentially gain unauthorized access.
type: detection
detection_id: 2012818
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact SQL injection payload and WAITFOR delay parameters used?
    context: Understanding the specific SQL injection technique helps assess the sophistication and potential impact of the attack.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - alert.signature

  - question: What database commands were embedded in the MAC and CCM parameters?
    context: The injected SQL commands reveal the attacker's intent and the type of database information being targeted.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - url.path
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this legitimate testing of the Cisco Unified Operations Manager by authorized personnel?
    context: System administrators may perform legitimate testing of the IPTM interface for network management purposes.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/iptm/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - user_agent.original
        - http.response.status_code

  - question: Does this source IP have authorized access to Cisco management interfaces?
    context: Legitimate network administrators typically have consistent access patterns to Cisco management systems.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.path
        - http.request.method
        - user_agent.original

  # Type 3: Activity Context
  - question: What other SQL injection attempts originated from this source IP?
    context: SQL injection attacks are often part of broader database reconnaissance and exploitation campaigns.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains:
            - 'SQL Injection'
            - 'WAITFOR'
            - 'database'
        condition: selection
      fields:
        - dst_ip
        - alert.signature
        - alert.severity

  - question: What was the response time pattern that could indicate successful blind SQL injection?
    context: Time-based SQL injection relies on response delays to extract information, creating distinctive timing patterns.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/iptm/PRTestCreation.do'
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - network.bytes

  # Type 4: Impact Assessment
  - question: Did the SQL injection result in database information disclosure based on response patterns?
    context: Successful blind SQL injection is indicated by consistent response delays matching the WAITFOR parameters.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/iptm/'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.query

  - question: Were there any database errors or unusual application responses following the attack?
    context: SQL injection attempts may generate database errors that confirm successful exploitation or provide system information.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          alert.category|contains:
            - 'web-application-attack'
            - 'policy-violation'
        condition: selection
      fields:
        - alert.signature
        - alert.severity
        - src_ip

  # Type 5: Forensic Deep-Dive
  - question: What database queries were executed on the Cisco system following the injection attempt?
    context: Successful SQL injection may result in unauthorized database queries visible in database logs.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          alert.signature|contains:
            - 'database'
            - 'SQL'
            - 'query'
        condition: selection
      fields:
        - alert.signature
        - alert.severity
        - src_ip

  - question: Were any system processes or services affected by the SQL injection attack?
    context: Advanced SQL injection may lead to command execution or system compromise beyond database access.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - 'cmd.exe'
            - 'powershell.exe'
            - 'sqlcmd.exe'
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ProcessGuid

  - question: What configuration or credential files were accessed after the successful injection?
    context: SQL injection against management systems may provide access to network configuration and credential stores.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - 'config'
            - 'credential'
            - '.db'
            - '.mdb'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.size

  # Type 6: Enterprise Correlation
  - question: Are other Cisco management systems in the environment being targeted with similar SQL injection attacks?
    context: Attackers often target the same vulnerability across multiple Cisco systems in an organization.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains: 'Cisco'
          alert.category: 'web-application-attack'
        condition: selection
      fields:
        - dst_ip
        - alert.signature
        - url.path

  - question: What other network management systems are being targeted by this attacker?
    context: Understanding the broader campaign helps identify other critical infrastructure systems at risk.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains:
            - 'management'
            - 'SNMP'
            - 'network'
        condition: selection
      fields:
        - dst_ip
        - alert.signature
        - alert.severity