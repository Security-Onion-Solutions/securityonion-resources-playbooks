name: ET WEB_SPECIFIC_APPS TCExam tce_xml_user_results.php script SELECT FROM SQL Injection Attempt
id: 22012872
description: |
  Detects SQL injection attempts targeting TCExam's user results export functionality.
  May trigger on legitimate database queries containing SELECT FROM patterns in URLs.
type: detection
detection_id: 2012872
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete SQL injection payload in the user_id and startdate parameters?
    context: Understanding the exact SQL syntax reveals the attacker's database knowledge and intended queries.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query

  - question: What specific database tables and columns were targeted in the SELECT statement?
    context: Analyzing the query structure indicates what sensitive data the attacker was attempting to extract.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - url.path
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this TCExam installation authorized and actively used for legitimate testing?
    context: Determining if the target system is a production application helps assess business impact.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/admin/code/tce_xml_user_results.php'
            - '/TCExam'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Has this source IP attempted SQL injection against other web applications?
    context: Multiple SQL injection attempts indicate systematic vulnerability scanning or targeted attack campaign.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'SELECT'
            - 'UNION'
            - 'DROP'
            - 'INSERT'
            - 'DELETE'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query

  # Type 3: Activity Context
  - question: What reconnaissance activities preceded this SQL injection attempt?
    context: Understanding the attack progression reveals how the attacker discovered the vulnerable endpoint.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.method
        - url.path
        - http.response.status_code

  - question: Did the attacker perform parameter fuzzing or error-based SQL injection testing?
    context: Systematic parameter testing indicates advanced SQL injection techniques and database enumeration.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'tce_xml_user_results.php'
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - http.response.body.bytes

  # Type 4: Impact Assessment
  - question: Did the SQL injection attempt return database content or error messages?
    context: Response size and status codes indicate whether sensitive data was successfully extracted.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.headers

  - question: Are there signs of database enumeration or privilege escalation following the injection?
    context: Post-exploitation database activities confirm successful compromise and data access.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'information_schema'
            - 'mysql'
            - 'sys'
            - 'user()'
            - 'version()'
        condition: selection
      fields:
        - url.query
        - http.response.status_code

  # Type 5: Forensic Deep-Dive
  - question: What TCExam version and database backend is running on the target system?
    context: Version information helps determine patch status and additional SQL injection vectors.
    range: -1d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/admin'
            - '/install'
            - '/config'
        condition: selection
      fields:
        - url.path
        - http.response.headers
        - http.request.headers

  - question: Did the attacker attempt to modify database records or create new administrative accounts?
    context: Data manipulation attempts indicate advanced compromise requiring database integrity verification.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'INSERT'
            - 'UPDATE'
            - 'DELETE'
            - 'CREATE'
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  # Type 6: Enterprise Correlation
  - question: Are other database-driven applications showing similar SQL injection attack patterns?
    context: Coordinated SQL injection attacks across multiple applications indicate broader campaign scope.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'SELECT'
            - 'FROM'
            - 'WHERE'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query