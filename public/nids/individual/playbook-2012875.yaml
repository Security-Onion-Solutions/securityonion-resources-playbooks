name: ET WEB_SPECIFIC_APPS TCExam tce_xml_user_results.php script INSERT INTO SQL Injection Attempt
id: 22012875
description: |
  Detects SQL injection attempts using INSERT statements targeting TCExam's user results functionality.
  May trigger on legitimate database operations containing INSERT INTO patterns in URLs.
type: detection
detection_id: 2012875
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete INSERT INTO SQL injection payload and target table structure?
    context: Understanding the INSERT query reveals the attacker's intent to add malicious records or backdoor accounts.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query

  - question: What specific data values and table columns were targeted in the INSERT statement?
    context: Analyzing the INSERT query structure indicates what malicious data the attacker was attempting to inject.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - url.path
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this TCExam system used for legitimate testing and does it contain production user data?
    context: Determining the system's purpose helps assess the potential impact of malicious data insertion.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/admin/code/tce_xml_user_results.php'
            - '/TCExam'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Has this source IP attempted INSERT-based SQL injection against other applications?
    context: Multiple INSERT attempts indicate systematic backdoor installation campaign or privilege escalation efforts.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'INSERT'
            - 'INTO'
            - 'VALUES'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query

  # Type 3: Activity Context
  - question: What database reconnaissance activities preceded this INSERT injection attempt?
    context: Understanding how the attacker discovered table schemas helps determine the sophistication of the attack.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'DESCRIBE'
            - 'SHOW COLUMNS'
            - 'information_schema'
            - 'table_name'
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - http.response.body.bytes

  - question: Did the attacker perform privilege enumeration before attempting to insert administrative records?
    context: User privilege checks indicate planned privilege escalation through malicious account creation.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'user()'
            - 'current_user'
            - 'admin'
            - 'privilege'
        condition: selection
      fields:
        - url.query
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the INSERT SQL injection successfully create new database records or user accounts?
    context: Response codes and timing indicate whether malicious data was actually inserted into the database.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.headers

  - question: Are there signs of successful authentication using newly created accounts or backdoors?
    context: Successful logins with injected credentials confirm persistent access and system compromise.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/login'
            - '/admin'
            - '/auth'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.method

  # Type 5: Forensic Deep-Dive
  - question: What specific user accounts or administrative privileges were created through the INSERT injection?
    context: Understanding injected accounts helps determine the scope of unauthorized access and required remediation.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'tce_xml_user_results.php'
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.body.bytes

  - question: Did the attacker attempt to insert web shells or malicious code through file upload functionality?
    context: Code injection through INSERT statements indicates advanced compromise requiring comprehensive system analysis.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'php'
            - 'eval'
            - 'exec'
            - 'shell'
            - 'cmd'
        condition: selection
      fields:
        - url.query
        - url.path
        - http.response.status_code

  # Type 6: Enterprise Correlation
  - question: Are other database systems showing similar INSERT-based SQL injection patterns?
    context: Coordinated INSERT attacks across multiple systems indicate systematic backdoor installation campaign.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'INSERT'
            - 'INTO'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query