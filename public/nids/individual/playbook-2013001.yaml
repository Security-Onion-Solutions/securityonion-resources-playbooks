name: ET WEB_SERVER PHP Possible php Remote File Inclusion Attempt
id: 22013001
description: |
  Detects potential remote file inclusion attacks using php:// protocol in PHP applications.
  Legitimate applications may use php:// streams but external sources indicate malicious intent.
type: detection
detection_id: 2013001
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete php:// stream wrapper used in the inclusion attempt?
    context: Understanding the specific php:// wrapper reveals the attacker's intended data access method.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query

  - question: Which PHP application parameter was exploited for the inclusion attack?
    context: Identifying vulnerable parameters helps prioritize code review and input validation fixes.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '.php'
          url.query|contains: 'php://'
        condition: selection
      fields:
        - url.path
        - url.query
        - src_ip

  # Type 2: Triage Assessment
  - question: Is this a legitimate PHP application using php:// streams for normal operations?
    context: Some applications legitimately use php:// for input/output stream handling.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains: 'php://'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Does this source have a history of normal application usage patterns?
    context: Established users with normal access patterns are less likely to be conducting attacks.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.path
        - http.request.method

  # Type 3: Activity Context
  - question: What parameter fuzzing or reconnaissance preceded this php:// inclusion attempt?
    context: Attackers typically test various parameters before finding exploitable inclusion points.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'include='
            - 'require='
            - 'file='
            - 'page='
        condition: selection
      fields:
        - url.full
        - http.response.status_code

  - question: Were other PHP stream wrappers tested before the php:// attempt?
    context: Understanding the attack progression helps identify the attacker's knowledge level.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'data://'
            - 'expect://'
            - 'zip://'
            - 'phar://'
        condition: selection
      fields:
        - url.full
        - http.request.method

  # Type 4: Impact Assessment
  - question: Did the php:// stream inclusion successfully execute or access data?
    context: Response analysis reveals whether the inclusion attack achieved its objectives.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.full
        - http.response.body.bytes
        - http.response.status_code

  - question: Were there attempts to execute code through php://input or php://filter?
    context: These specific wrappers can be used for code execution and data exfiltration.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'php://input'
            - 'php://filter'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.request.body.content

  # Type 5: Forensic Deep-Dive
  - question: What type of PHP stream wrapper vulnerability is being exploited?
    context: Different wrappers have different capabilities and security implications.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'Remote File Inclusion'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - rule.name
        - alert.signature
        - alert.category

  - question: Are there signs of automated scanning tools or targeted manual exploitation?
    context: Tool identification helps understand the threat actor's capabilities and intent.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - url.path

  # Type 6: Enterprise Correlation
  - question: Are other PHP applications experiencing similar inclusion attacks from this source?
    context: Multiple targets indicate a broader campaign targeting PHP vulnerabilities.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'Remote File Inclusion'
            - 'PHP'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - alert.severity