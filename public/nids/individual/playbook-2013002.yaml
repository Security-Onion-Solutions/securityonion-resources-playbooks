name: ET WEB_SERVER PHP Possible file Remote File Inclusion Attempt
id: 22013002
description: |
  Detects potential remote file inclusion attacks using file:// protocol in PHP applications.
  Legitimate applications may use file:// for local file access but external sources are suspicious.
type: detection
detection_id: 2013002
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete file:// URL pattern in the inclusion attempt?
    context: Understanding the exact file path reveals what resources the attacker was trying to access.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query

  - question: Which PHP script was targeted for the file inclusion vulnerability?
    context: Identifying the vulnerable script helps prioritize patching and assess application security.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '.php'
          url.query|contains: 'file://'
        condition: selection
      fields:
        - url.path
        - url.query
        - src_ip

  # Type 2: Triage Assessment
  - question: Is this a known legitimate application using file:// for local file operations?
    context: Some applications legitimately use file:// protocol for configuration or template loading.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains: 'file://'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Does this source IP have authorized access to this web application?
    context: Internal or authorized users are less likely to be conducting file inclusion attacks.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.path
        - http.request.method

  # Type 3: Activity Context
  - question: What reconnaissance activity preceded this file inclusion attempt?
    context: Attackers often probe for vulnerable parameters before launching inclusion attacks.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - '../'
            - '..'
            - '/etc/'
            - '/proc/'
        condition: selection
      fields:
        - url.full
        - http.response.status_code

  - question: Were there other file inclusion protocols tested before file://?
    context: Understanding the full attack sequence helps identify the attacker's methodology.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'http://'
            - 'https://'
            - 'ftp://'
            - 'php://'
        condition: selection
      fields:
        - url.full
        - http.request.method

  # Type 4: Impact Assessment
  - question: Did the file inclusion attempt successfully access local files?
    context: HTTP response characteristics indicate whether sensitive files were disclosed.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.full
        - http.response.body.bytes
        - http.response.status_code

  - question: Were there follow-up requests targeting sensitive system files?
    context: Successful file inclusion often leads to attempts to access configuration or credential files.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - '/etc/passwd'
            - '/etc/shadow'
            - 'config'
            - '.conf'
        condition: selection
      fields:
        - url.full
        - http.response.status_code

  # Type 5: Forensic Deep-Dive
  - question: What specific file inclusion vulnerability is being exploited?
    context: Understanding the vulnerability type helps prioritize remediation efforts.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'File Inclusion'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - rule.name
        - alert.signature
        - alert.category

  - question: Are there indicators of automated vulnerability scanners or manual exploitation?
    context: User-Agent analysis helps distinguish between automated tools and targeted manual attacks.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - url.path

  # Type 6: Enterprise Correlation
  - question: Are other web servers experiencing similar file inclusion attacks from this source?
    context: Multiple targets suggest a coordinated attack campaign across the organization.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'File Inclusion'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - alert.severity