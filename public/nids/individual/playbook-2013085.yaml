name: ET WEB_SPECIFIC_APPS BLOG CMS nsextt parameter Cross Site Scripting Vulnerability
id: 22013085
description: |
  Detects cross-site scripting (XSS) attempts targeting BLOG CMS application via the nsextt parameter in confirm.tpl.php.
  May trigger on legitimate JavaScript code in templates or during authorized security testing activities.
type: detection
detection_id: 2013085
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete XSS payload in the nsextt parameter?
    context: Understanding the exact JavaScript or HTML payload reveals the attacker's intent and sophistication level.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.request.body.content

  - question: What specific XSS technique is being used in this attack?
    context: Different XSS vectors (script tags, event handlers, style attributes) indicate attack complexity and browser targeting.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - url.path
        - http.request.referrer

  # Type 2: Triage Assessment
  - question: Is this confirm.tpl.php template normally accessed by this source IP?
    context: Legitimate users may access template files during normal CMS operations or content management.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/confirm.tpl.php"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.path

  - question: Are there legitimate CMS administrative activities scheduled for this application?
    context: Template modifications or CMS updates might generate similar JavaScript patterns in parameters.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/templates/"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  # Type 3: Activity Context
  - question: What reconnaissance activities preceded this XSS injection attempt?
    context: Attackers typically perform application mapping before attempting XSS exploitation.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.full
        - http.request.method

  - question: What other web application attacks were attempted from this source IP?
    context: XSS attacks are often part of broader web application exploitation campaigns.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "web-application-attack"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  # Type 4: Impact Assessment
  - question: Did the XSS injection attempt receive a successful HTTP response?
    context: HTTP response codes and content types indicate whether the XSS payload was processed and reflected.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/confirm.tpl.php"
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.full

  - question: Are there signs of successful XSS exploitation or session hijacking?
    context: Successful XSS attacks may be followed by cookie theft attempts or additional malicious requests.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.request.headers.cookie

  # Type 5: Forensic Deep-Dive
  - question: What specific browser or user targeting is indicated by this XSS payload?
    context: XSS payloads often contain browser-specific code or target specific user actions.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - rule.description

  - question: Are there indicators of automated XSS scanning tools being used?
    context: Tool signatures in user agents or request patterns help identify whether this is manual or automated testing.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - src_ip
        - url.path

  - question: What is the intended payload execution context for this XSS attack?
    context: Understanding whether the XSS targets stored, reflected, or DOM-based execution helps assess impact.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/confirm.tpl.php"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other CMS applications experiencing similar XSS injection attempts?
    context: Coordinated attacks often target multiple CMS installations with the same vulnerability pattern.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "Cross Site Scripting"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - src_ip