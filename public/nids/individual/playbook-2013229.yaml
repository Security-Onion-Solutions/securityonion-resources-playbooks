name: ET WEB_SPECIFIC_APPS Immophp annonce parameter UNION SELECT SQL Injection Attempt
id: 22013229
description: |
  Detects SQL injection attempts using UNION SELECT statements in the Immophp application's annonce parameter.
  May trigger on legitimate database queries that use UNION operations for data retrieval.
type: detection
detection_id: 2013229
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What specific UNION SELECT SQL injection payload was used?
    context: Understanding the exact injection reveals what database information the attacker tried to extract.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method
        - http.request.body.content

  - question: Is this legitimate database query functionality in Immophp?
    context: Determines if this is authorized application behavior or malicious data extraction attempt.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path: "/annonce_detail.php"
        condition: selection
      fields:
        - user_agent.original
        - http.request.referrer
        - url.query
        - http.response.status_code

  - question: What database schema enumeration preceded this UNION injection?
    context: Identifies if the attacker performed reconnaissance to understand table structure and column counts.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code
        - user_agent.original

  - question: What other SQL injection vectors were tested against this Immophp application?
    context: Reveals the complete attack sequence and other vulnerable parameters identified.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "Immophp"
        condition: selection
      fields:
        - src_ip
        - rule.name
        - url.full
        - alert.severity

  - question: Did the UNION SELECT injection successfully extract sensitive data?
    context: Determines if the attack compromised confidential information from the database.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.path
        - http.response.body.bytes
        - http.response.mime_type

  - question: What database SELECT operations were executed on the backend server?
    context: Identifies if the injection reached the database and what information was queried.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          process.command_line|contains:
            - "SELECT"
            - "UNION"
        condition: selection
      fields:
        - process.name
        - process.command_line
        - process.parent.name
        - user.name

  - question: Were any database files accessed or copied after the injection?
    context: Determines if the attack resulted in unauthorized data exfiltration or backup access.
    range: +10m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.extension|contains:
            - ".db"
            - ".sql"
            - ".bak"
        condition: selection
      fields:
        - file.path
        - file.name
        - process.name
        - file.hash.md5

  - question: What sensitive real estate and customer data could be exposed?
    context: Assesses the potential impact on property information, client details, and financial data.
    range: -1d
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: "/annonce_detail.php"
          url.query|contains: "UNION"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.body.bytes

  - question: Are other applications on this server vulnerable to UNION-based injections?
    context: Identifies additional web applications requiring security assessment and remediation.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "UNION"
        condition: selection
      fields:
        - rule.name
        - url.path
        - src_ip
        - alert.severity

  - question: Is this attacker systematically targeting SQL injection vulnerabilities enterprise-wide?
    context: Determines if this is part of a coordinated data extraction campaign across multiple systems.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "SQL_Injection"
            - "UNION"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path
        - alert.severity