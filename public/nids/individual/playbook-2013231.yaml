name: ET WEB_SPECIFIC_APPS Immophp annonce parameter UPDATE SET SQL Injection Attempt
id: 22013231
description: |
  Detects SQL injection attempts using UPDATE SET statements in the Immophp application's annonce parameter.
  May trigger on legitimate database update operations or administrative functions.
type: detection
detection_id: 2013231
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What specific UPDATE SET SQL injection payload was used?
    context: Understanding the exact injection reveals the attacker's intent to modify database records.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method
        - http.request.body.content

  - question: Is this legitimate administrative modification of Immophp listings?
    context: Determines if this is authorized content management or malicious database manipulation.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path: "/annonce_detail.php"
        condition: selection
      fields:
        - user_agent.original
        - http.request.referrer
        - url.query
        - http.response.status_code

  - question: What reconnaissance preceded this UPDATE injection attempt?
    context: Identifies if the attacker performed application mapping or parameter fuzzing.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code
        - user_agent.original

  - question: What other SQL injection vectors were tested against Immophp?
    context: Reveals the breadth of the attack and other vulnerable parameters discovered.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "Immophp"
        condition: selection
      fields:
        - src_ip
        - rule.name
        - url.full
        - alert.severity

  - question: Did the UPDATE injection successfully modify database records?
    context: Determines if the attack compromised data integrity in the application database.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.path
        - http.response.body.bytes
        - http.response.mime_type

  - question: What database operations were executed on the backend server?
    context: Identifies if the injection reached the database and what modifications occurred.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          process.command_line|contains:
            - "UPDATE"
            - "SET"
        condition: selection
      fields:
        - process.name
        - process.command_line
        - process.parent.name
        - user.name

  - question: Were any application or database files modified after the injection?
    context: Determines if the attack resulted in unauthorized system changes or backdoor installation.
    range: +10m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.extension|contains:
            - ".php"
            - ".db"
            - ".sql"
        condition: selection
      fields:
        - file.path
        - file.name
        - process.name
        - file.hash.md5

  - question: What sensitive real estate data could be compromised in Immophp?
    context: Assesses the potential impact on property listings and customer information.
    range: -1d
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path: "/annonce_detail.php"
          http.response.status_code: 200
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.body.bytes

  - question: Are other PHP applications on this server vulnerable to similar attacks?
    context: Identifies additional web applications requiring security assessment and patching.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "WEB_SPECIFIC_APPS"
        condition: selection
      fields:
        - rule.name
        - url.path
        - src_ip
        - alert.severity

  - question: Is this attacker targeting multiple real estate or PHP applications enterprise-wide?
    context: Determines if this is part of a coordinated campaign against similar applications.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "SQL_Injection"
            - "WEB_SPECIFIC_APPS"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path
        - alert.severity