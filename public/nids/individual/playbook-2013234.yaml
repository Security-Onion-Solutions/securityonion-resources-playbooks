name: ET WEB_SPECIFIC_APPS ActivDesk cid Parameter Blind SQL Injection Attempt
id: 22013234
description: |
  Detects blind SQL injection attempts targeting the ActivDesk application's cid parameter in kbcat.cgi.
  May trigger on legitimate database queries containing similar syntax patterns.
type: detection
detection_id: 2013234
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the cid parameter?
    context: Understanding the exact injection syntax reveals the attacker's technique and target database.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query
        - http.request.method

  - question: Is this legitimate administrative access to the ActivDesk application?
    context: Determines if this is authorized database maintenance or malicious exploitation.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path: "/kbcat.cgi"
        condition: selection
      fields:
        - user_agent.original
        - http.request.referrer
        - url.query

  - question: What reconnaissance activity preceded this SQL injection attempt?
    context: Identifies if the attacker performed application fingerprinting or vulnerability scanning.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code
        - user_agent.original

  - question: What other SQL injection techniques were attempted against this server?
    context: Reveals the scope of the attack and other vulnerable parameters tested.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "SQL"
        condition: selection
      fields:
        - src_ip
        - rule.name
        - url.full
        - alert.severity

  - question: Did the SQL injection attempt succeed in extracting data?
    context: Determines if sensitive information was compromised through the vulnerability.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.path
        - http.response.body.bytes
        - http.response.mime_type

  - question: What database queries were executed on the backend server?
    context: Identifies if the injection bypassed input validation and reached the database.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          process.name|contains:
            - "mysql"
            - "postgres"
            - "oracle"
        condition: selection
      fields:
        - process.command_line
        - process.parent.name
        - user.name

  - question: Were any database files accessed or modified after the injection?
    context: Determines if the attack resulted in unauthorized data access or system compromise.
    range: +10m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.extension|contains:
            - ".db"
            - ".mdb"
            - ".sql"
        condition: selection
      fields:
        - file.path
        - file.name
        - process.name
        - file.hash.md5

  - question: What sensitive data could be exposed through this ActivDesk vulnerability?
    context: Assesses the potential impact and data at risk from successful exploitation.
    range: -1d
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/kbcat.cgi"
          http.response.status_code: 200
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.body.bytes

  - question: Are other web applications on this server vulnerable to SQL injection?
    context: Identifies additional attack surface and vulnerable applications requiring patching.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "WEB_SPECIFIC_APPS"
        condition: selection
      fields:
        - rule.name
        - url.path
        - src_ip
        - alert.severity

  - question: Is this part of a broader SQL injection campaign across the enterprise?
    context: Determines if this is an isolated attack or systematic exploitation attempt.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SQL_Injection"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path
        - alert.severity