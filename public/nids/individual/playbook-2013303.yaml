name: ET WEB_SPECIFIC_APPS Nuke Evolution Xtreme pid Parameter SELECT FROM SQL Injection Attempt
id: 22013303
description: |
  Detects SQL injection attempts targeting the Nuke Evolution Xtreme CMS pid parameter.
  Attackers attempt to extract database information using SELECT FROM queries.
  This represents a direct attack against web application databases and requires immediate attention.
type: detection
detection_id: 2013303
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What is the complete SQL injection payload used in this attack?
    context: Analyzing the full payload reveals the attacker's intent and database targeting strategy.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - http.request.body.content

  - question: Which specific database tables or columns is the attacker attempting to access?
    context: The SELECT FROM statement structure indicates the attacker's knowledge of the database schema.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.headers
        - user_agent.original

  # Type 2: Triage Assessment
  - question: Is this Nuke Evolution Xtreme system supposed to be publicly accessible?
    context: Some CMS installations may be internal-only or in development environments.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/modules.php"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method
        - user_agent.original

  - question: Are there legitimate administrative activities that might trigger this alert?
    context: CMS administrators may perform database operations that could resemble SQL injection.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "modules.php"
          url.query|contains: "Tutorials"
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - url.query

  # Type 3: Activity Context
  - question: What reconnaissance activity preceded this SQL injection attempt?
    context: Attackers often perform reconnaissance before launching targeted SQL injection attacks.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code
        - user_agent.original

  - question: Are there signs of automated scanning or tool usage in this attack?
    context: SQL injection attacks are often part of automated vulnerability scanning campaigns.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - url.path
        - user_agent.original
        - http.request.method
        - dst_ip

  - question: What other web application components has the attacker targeted?
    context: Attackers often test multiple modules and parameters for SQL injection vulnerabilities.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "SELECT"
            - "UNION"
            - "ORDER BY"
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the SQL injection attempt return database information?
    context: Successful SQL injection can expose sensitive database contents and user information.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: Are there signs of successful database compromise or data extraction?
    context: Large response sizes or specific error messages may indicate successful data extraction.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - http.response.body.bytes
        - url.query
        - http.response.body.content

  # Type 5: Forensic Deep-Dive
  - question: What specific SQL injection technique is being employed in this attack?
    context: Different SQL injection techniques indicate attacker skill level and database type targeting.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "SELECT"
            - "FROM"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - user_agent.original
        - http.request.headers

  - question: Are there web server logs indicating application errors from this injection attempt?
    context: SQL injection attempts often generate application errors that reveal database structure.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.response.status_code|contains:
            - 500
            - 400
        condition: selection
      fields:
        - http.response.status_code
        - url.query
        - http.response.body.content

  - question: What database management system is likely being targeted?
    context: SQL syntax variations can indicate whether the target is MySQL, PostgreSQL, SQL Server, etc.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.response.headers
        - http.response.body.content

  # Type 6: Enterprise Correlation
  - question: Are other web applications in the environment being targeted with similar SQL injection attacks?
    context: Attackers often target multiple applications once they identify vulnerable infrastructure.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - "SELECT"
            - "FROM"
        condition: selection
      fields:
        - dst_ip
        - url.domain
        - url.path
        - http.response.status_code

  - question: Is this part of a broader web application attack campaign?
    context: SQL injection attacks are often part of larger campaigns targeting multiple vulnerabilities.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - "UNION"
            - "ORDER BY"
            - "SELECT"
            - "../"
            - "<script"
        condition: selection
      fields:
        - dst_ip
        - url.path
        - user_agent.original