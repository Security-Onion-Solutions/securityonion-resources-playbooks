name: ET WEB_SPECIFIC_APPS Nuke Evolution Xtreme pid Parameter INSERT INTO SQL Injection Attempt
id: 22013306
description: |
  Detects SQL injection attempts targeting the Nuke Evolution Xtreme CMS via the pid parameter in the Tutorials module.
  This specific pattern indicates an attempt to execute INSERT INTO SQL commands to add malicious data to the database.
  May trigger on legitimate database operations if the application processes user input containing these SQL keywords.
type: detection
detection_id: 2013306
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete INSERT INTO payload in the pid parameter?
    context: Understanding the exact INSERT statement reveals what malicious data the attacker is attempting to add.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - http.request.body.content

  - question: What table and columns are being targeted by the INSERT INTO statement?
    context: Identifying the targeted table helps assess the potential for data corruption or backdoor creation.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains: 'INSERT'
        condition: selection
      fields:
        - url.query
        - url.full
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this server running Nuke Evolution Xtreme CMS with write permissions?
    context: Confirming the vulnerable application and database write access validates the alert's severity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/modules.php'
          url.query|contains: 'name=Tutorials'
        condition: selection
      fields:
        - src_ip
        - url.path
        - url.query

  - question: Are there legitimate content management activities on this CMS?
    context: Normal CMS operations like adding tutorials or content might generate similar database activity.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/modules.php'
          http.request.method: 'POST'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  # Type 3: Activity Context
  - question: What data extraction attempts preceded this INSERT INTO attack?
    context: Attackers often gather existing data before inserting malicious content or backdoors.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'SELECT'
            - 'UNION'
            - 'SHOW'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.response.status_code

  - question: What was the attack sequence leading to this data insertion attempt?
    context: Understanding the progression helps identify whether this is reconnaissance or active exploitation.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/modules.php'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the INSERT INTO statement execute successfully?
    context: Successful execution indicated by 200 responses may mean malicious data was added to the database.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.full

  - question: Are there signs of backdoor or webshell insertion attempts?
    context: INSERT statements may be used to add malicious PHP code or create unauthorized user accounts.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'php'
            - 'eval'
            - 'exec'
            - 'admin'
        condition: selection
      fields:
        - url.query
        - url.full
        - http.request.method

  # Type 5: Forensic Deep-Dive
  - question: What specific malicious content is being inserted into the database?
    context: Analyzing the INSERT payload reveals the attack's purpose and potential persistence mechanisms.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains: 'INSERT INTO'
        condition: selection
      fields:
        - url.query
        - url.full
        - http.request.body.content

  - question: Are there attempts to create new administrative users or modify permissions?
    context: INSERT statements targeting user tables may create unauthorized administrative access.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'users'
            - 'admin'
            - 'privileges'
            - 'permissions'
        condition: selection
      fields:
        - url.query
        - url.full
        - http.response.status_code

  # Type 6: Enterprise Correlation
  - question: Are other web applications experiencing similar INSERT INTO injection attempts?
    context: Coordinated attacks may target multiple vulnerable systems to establish widespread persistence.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'INSERT INTO'
            - 'modules.php'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query