name: ET WEB_SPECIFIC_APPS WordPress PHP Speedy Plugin page Parameter Remote File inclusion Attempt
id: 22013308
description: |
  Detects remote file inclusion attempts targeting the WordPress PHP Speedy plugin via the page parameter.
  This vulnerability allows attackers to include remote files containing malicious PHP code for execution.
  May trigger on legitimate plugin operations if the application processes URLs in the page parameter.
type: detection
detection_id: 2013308
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete remote file inclusion URL in the page parameter?
    context: Understanding the exact remote file URL reveals the attacker's payload source and intended malicious code.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - http.request.body.content

  - question: What protocol and domain is being used for the remote file inclusion?
    context: Identifying the remote source helps determine if it's a known malicious host or compromised legitimate site.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/php_speedy_wp/'
        condition: selection
      fields:
        - url.query
        - url.full
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this server running WordPress with the PHP Speedy plugin installed?
    context: Confirming the vulnerable plugin installation validates the alert's relevance and severity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/php_speedy_wp/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - url.query

  - question: Are there legitimate plugin configuration or administration activities?
    context: Normal WordPress plugin management might involve loading configuration files or templates.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-admin/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  # Type 3: Activity Context
  - question: What WordPress reconnaissance preceded this remote file inclusion attempt?
    context: Attackers typically enumerate plugins and versions before targeting specific vulnerabilities.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-content/plugins/'
            - '/readme.txt'
            - '/wp-admin/'
        condition: selection
      fields:
        - url.full
        - url.path
        - http.response.status_code

  - question: What was the sequence of requests leading to this RFI attempt?
    context: Understanding the attack progression helps identify reconnaissance and exploitation phases.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the remote file inclusion attempt execute successfully?
    context: Successful RFI indicated by 200 responses may mean malicious code was executed on the server.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.full

  - question: Are there outbound connections to the remote file inclusion source?
    context: Successful RFI may result in the server fetching the malicious file from the remote location.
    range: +10m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - bytes_out
        - bytes_in

  # Type 5: Forensic Deep-Dive
  - question: What malicious payload or webshell is hosted at the remote inclusion URL?
    context: Analyzing the remote file content reveals the attack's capabilities and persistence mechanisms.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.body.content

  - question: Are there signs of webshell deployment or backdoor installation?
    context: Successful RFI often leads to webshell deployment for persistent access to the compromised system.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'cmd'
            - 'exec'
            - 'shell'
            - 'eval'
        condition: selection
      fields:
        - src_ip
        - url.full
        - url.query

  - question: What post-exploitation activities followed the successful RFI?
    context: Identifying subsequent malicious activities helps understand the full scope of the compromise.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '.php'
            - '/uploads/'
            - '/tmp/'
        condition: selection
      fields:
        - src_ip
        - url.full
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other WordPress installations experiencing similar RFI attempts?
    context: Coordinated attacks may target multiple WordPress sites with the same vulnerable plugin.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/php_speedy_wp/'
          url.query|contains: 'page='
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query