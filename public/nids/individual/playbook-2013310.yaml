name: ET WEB_SPECIFIC_APPS WordPress PHP Speedy Plugin title parameter Cross Site Scripting Attempt
id: 22013310
description: |
  Detects cross-site scripting (XSS) attempts targeting the WordPress PHP Speedy plugin's title parameter.
  May trigger on legitimate content containing JavaScript keywords or HTML event handlers in form submissions.
type: detection
detection_id: 2013310
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload injected into the title parameter?
    context: Understanding the payload reveals the attacker's intent and potential impact of the XSS attack.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content

  - question: What specific JavaScript events or HTML elements were included in the malicious request?
    context: Different XSS vectors indicate varying levels of sophistication and potential for exploitation.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.headers
        - http.request.body.content

  # Type 2: Triage Assessment
  - question: Is this a legitimate user accessing the WordPress admin interface?
    context: Distinguishes between authorized WordPress administration and malicious XSS attempts.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/wp-admin/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: Has this IP address previously accessed WordPress legitimately?
    context: Established WordPress users are less likely to be conducting XSS attacks.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/wp-'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  # Type 3: Activity Context
  - question: What other WordPress-related requests has this IP made recently?
    context: Multiple WordPress requests may indicate reconnaissance or automated attack tools.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/wp-'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code
        - http.request.headers

  - question: Were there any authentication attempts before this XSS attack?
    context: Failed authentication followed by XSS attempts suggests targeted attack behavior.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - '/wp-login.php'
            - '/wp-admin/'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What user agent was used for this malicious request?
    context: Automated tools and legitimate browsers have different user agent patterns.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.headers
        - http.request.method

  # Type 4: Impact Assessment
  - question: What was the server's response to this XSS attempt?
    context: Successful XSS attacks typically return different response codes than blocked attempts.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.headers

  - question: Are there signs of successful XSS payload execution or data exfiltration?
    context: Successful XSS may lead to additional requests containing stolen session data or credentials.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.request.body.content

  # Type 5: Forensic Deep-Dive
  - question: What WordPress plugins and themes are installed on the targeted server?
    context: Understanding the WordPress environment helps assess vulnerability scope and attack surface.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/'
        condition: selection
      fields:
        - url.path
        - http.response.status_code

  - question: Are there any suspicious file uploads or modifications on the WordPress server?
    context: XSS attacks may be followed by attempts to upload malicious files or modify existing ones.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.mime_type

  # Type 6: Enterprise Correlation
  - question: Are other WordPress installations in the organization being targeted with similar XSS attempts?
    context: Coordinated XSS campaigns often target multiple WordPress sites simultaneously.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          url.path|contains: '/wp-content/plugins/php_speedy_wp/'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.full