name: ET MALWARE Win32.Pamesg/ArchSMS.HL CnC Checkin
id: 22013345
description: |
  Detects Win32.Pamesg/ArchSMS.HL malware performing command and control checkin via specific PHP parameters.
  May trigger on legitimate applications using similar parameter naming conventions for configuration or analytics.
type: detection
detection_id: 2013345
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What are the specific parameter values being sent to the CnC server?
    context: The aid, uncv, and skey parameters contain malware identification and configuration data.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - http.request.body.content

  - question: Is this a legitimate application using similar parameter structures?
    context: Some legitimate software may use similar PHP parameter naming for configuration management.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '.php'
        condition: selection
      fields:
        - url.domain
        - url.path
        - http.response.status_code
        - bytes_in

  - question: What process initiated this malicious network connection?
    context: Identifying the parent process helps understand the infection vector and malware execution chain.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid

  - question: What other network connections were made around the same time?
    context: Malware often performs multiple network operations during initial infection or periodic checkins.
    range: +/-30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - protocol
        - bytes_out
        - bytes_in

  - question: What response was received from the CnC server?
    context: The server response may contain additional malware payloads, configuration updates, or commands.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.mime_type
        - bytes_in

  - question: Were any files downloaded or created after the CnC communication?
    context: Successful CnC checkins often result in additional malware downloads or configuration file updates.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.hash.sha256
        - file.mime_type
        - ProcessName

  - question: Are there signs of SMS-related malicious activity on this system?
    context: ArchSMS.HL malware is designed for SMS fraud, which may generate additional network traffic or system changes.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dns.query.name|contains:
            - 'sms'
            - 'mobile'
            - 'gateway'
            - 'carrier'
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - dns.query.type_name

  - question: What is the hosting infrastructure of the CnC server?
    context: Understanding the CnC infrastructure helps assess threat level and potential campaign attribution.
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.resolved_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - src_ip

  - question: Has this malware established persistence mechanisms?
    context: Win32.Pamesg/ArchSMS.HL may create registry entries or scheduled tasks for persistence.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetObject|contains:
            - 'Run'
            - 'RunOnce'
            - 'Services'
            - 'CurrentVersion'
        condition: selection
      fields:
        - TargetObject
        - Details
        - ProcessName

  - question: Are other systems in the network infected with similar malware?
    context: Win32.Pamesg/ArchSMS.HL campaigns may target multiple systems within the same network environment.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - 'Pamesg'
            - 'ArchSMS'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - rule.category

  - question: What SSL/TLS details are associated with the CnC communication?
    context: Certificate information may reveal additional infrastructure or help track the malware campaign.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - tls.server.certificate.subject
        - tls.server.certificate.issuer
        - tls.server.certificate.serial_number
        - tls.server.certificate.not_after