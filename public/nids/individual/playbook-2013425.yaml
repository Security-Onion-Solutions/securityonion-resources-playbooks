name: ET WEB_SPECIFIC_APPS Wordpress eShop plugin eshoptemplate parameter Cross Site Scripting Attempt
id: 22013425
description: |
  Detects XSS attempts targeting WordPress eShop plugin via the eshoptemplate parameter.
  May trigger on legitimate admin activities involving template management or testing.
type: detection
detection_id: 2013425
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact XSS payload in the eshoptemplate parameter?
    context: Understanding the payload reveals the attacker's intent and potential impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.uri
        - url.query

  - question: Is this legitimate WordPress admin template management activity?
    context: Administrators may legitimately access eShop template configuration pages.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-admin/admin.php"
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - url.query

  - question: What triggered this XSS attempt on the WordPress site?
    context: Previous reconnaissance or vulnerability scanning may precede exploitation attempts.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.method
        - url.path
        - http.response.status_code

  - question: What other WordPress admin pages were accessed by this source?
    context: Attackers often enumerate multiple admin functions to find vulnerabilities.
    range: -1h/+1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: "/wp-admin/"
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code

  - question: Did the XSS payload successfully execute or get blocked?
    context: Response codes and content indicate if the attack succeeded or was mitigated.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content

  - question: What sensitive data could be accessed via this XSS attack?
    context: Successful XSS in admin panels can lead to session hijacking and privilege escalation.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-admin/"
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.request.headers.cookie

  - question: What specific XSS vectors were used in the attack?
    context: Identifying the XSS technique helps determine payload sophistication and evasion methods.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: Are there signs of automated scanning or manual exploitation?
    context: User-agent and request patterns distinguish between automated tools and manual attacks.
    range: -30m/+30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - http.request.method
        - url.path

  - question: What WordPress plugins and versions are installed on the target?
    context: Plugin enumeration helps assess the attack surface and potential for lateral movement.
    range: -1h/+1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-content/plugins/"
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - src_ip

  - question: Are other WordPress sites in the environment being targeted similarly?
    context: Attackers often target multiple WordPress installations with the same vulnerability.
    range: -2h/+2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains: "eshoptemplate="
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.response.status_code

  - question: What is the scope of this XSS campaign across the enterprise?
    context: Coordinated attacks may target multiple web applications using similar XSS vectors.
    range: -4h/+4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "Cross Site Scripting"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name