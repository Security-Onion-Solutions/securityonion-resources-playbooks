name: ET WEB_SPECIFIC_APPS Wordpress eShop plugin action parameter Cross Site Scripting Attempt
id: 22013426
description: |
  Detects Cross-Site Scripting (XSS) attempts targeting the WordPress eShop plugin action parameter vulnerability.
  Attackers exploit this vulnerability in the admin interface to inject malicious scripts that could compromise administrator sessions.
  Legitimate use involves managing eShop orders through the admin interface without script injection.
type: detection
detection_id: 2013426
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete XSS payload injected into the action parameter?
    context: Analyzing the exact payload reveals the attacker's intent and the potential impact on WordPress administrators.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.path
        - url.query
        - http.request.body.content

  - question: What specific JavaScript events or functions were used in this XSS attempt?
    context: Different XSS techniques indicate the sophistication level and potential for successful exploitation.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.headers.referer
        - http.request.headers.user_agent
        - http.response.status_code

  # Type 2: Triage Assessment
  - question: Is this request from an authenticated WordPress administrator?
    context: Legitimate administrators may trigger false positives when managing eShop functionality or testing features.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.domain|expand: '%dst_ip%'
          url.path|contains: "/wp-admin/"
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.request.headers.cookie
        - http.response.status_code

  - question: Does this appear to be automated vulnerability scanning or targeted exploitation?
    context: Distinguishing between reconnaissance and actual exploitation helps prioritize incident response efforts.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.request.headers.user_agent
        - http.response.status_code

  # Type 3: Activity Context
  - question: What other WordPress admin pages were accessed before this XSS attempt?
    context: Understanding the attack sequence helps identify if this is part of a larger WordPress compromise attempt.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.domain|expand: '%dst_ip%'
          url.path|contains: "/wp-admin/"
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Was this attack preceded by WordPress reconnaissance or authentication attempts?
    context: Attackers often perform reconnaissance and attempt authentication before launching targeted plugin attacks.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - "/wp-login.php"
            - "/wp-admin/"
            - "/xmlrpc.php"
            - "/wp-content/plugins/"
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the WordPress admin interface respond with content that could execute the injected script?
    context: Successful XSS requires the server to reflect malicious input in a way that browsers will execute.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.headers.content_type
        - bytes_received

  - question: Are there signs of successful administrative session compromise?
    context: Successful XSS against WordPress admins can lead to session hijacking and full site compromise.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%src_ip%'
          url.path|contains: "/wp-admin/"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.headers.cookie
        - http.request.method

  # Type 5: Forensic Deep-Dive
  - question: What is the attack source's reputation and previous WordPress targeting history?
    context: Understanding attacker patterns helps with attribution and predicting additional attack vectors.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: "/wp-"
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method
        - http.response.status_code

  - question: Are there indicators of automated WordPress vulnerability scanners or manual exploitation?
    context: Tool signatures help identify the attack methodology and potential for additional exploitation attempts.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - http.request.method
        - url.path
        - http.response.status_code

  # Type 6: Enterprise Correlation
  - question: Are other WordPress installations in the environment being targeted with similar XSS attempts?
    context: Attackers often target multiple WordPress sites once they identify vulnerable plugins in an organization.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "Wordpress"
          rule.name|contains: "XSS"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - url.domain
        - rule.name
        - rule.category

  - question: Is this part of a broader WordPress plugin vulnerability exploitation campaign?
    context: Understanding campaign scope helps determine if this is an isolated incident or systematic targeting.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "Wordpress"
          rule.category|contains: "web-application-attack"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - rule.category