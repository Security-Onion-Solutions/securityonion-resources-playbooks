name: ET WEB_SPECIFIC_APPS Joomla Community component userid parameter DELETE FROM SQL Injection Attempt
id: 22013468
description: |
  Detects SQL injection attempts targeting the Joomla Community component via the userid parameter.
  May trigger on legitimate database operations or security testing activities.
type: detection
detection_id: 2013468
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the userid parameter?
    context: Understanding the exact injection syntax reveals attack sophistication and intent.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - http.request.body.content

  - question: What specific Joomla Community component functionality was targeted?
    context: Identifying the targeted component helps assess vulnerability scope and impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.referrer

  - question: Is this part of authorized penetration testing or security scanning?
    context: Legitimate security assessments may trigger SQL injection detection rules.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - http.user_agent
        - url.path

  - question: What other web application attacks originated from this source IP?
    context: Multiple attack vectors from same source indicate coordinated exploitation attempt.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: What was the sequence of HTTP requests leading to this injection attempt?
    context: Request patterns reveal reconnaissance activities and attack progression.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.method
        - url.path
        - http.response.status_code
        - http.user_agent

  - question: Did the SQL injection attempt result in successful database access?
    context: Response analysis indicates whether the injection was successful or blocked.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - network.bytes_sent
        - network.bytes_received

  - question: What database errors or responses were returned to the attacker?
    context: Error messages can reveal database structure and successful injection indicators.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.body.content
        - http.response.status_code
        - network.bytes_sent

  - question: Are there signs of data exfiltration following the injection attempt?
    context: Large response sizes may indicate successful data extraction from the database.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - network.bytes_sent
        - network.bytes_received
        - network.protocol

  - question: What authentication context was used for this injection attempt?
    context: Session information reveals whether attack used legitimate or compromised credentials.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.headers
        - http.request.cookies
        - url.path

  - question: Are other systems showing similar Joomla exploitation attempts?
    context: Enterprise-wide attacks indicate coordinated campaign targeting Joomla installations.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "Joomla"
          rule.category: "web-application-attack"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: What related SQL injection IOCs appear across the organization?
    context: Similar attack patterns help identify campaign scope and threat actor TTPs.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "SQL Injection"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path