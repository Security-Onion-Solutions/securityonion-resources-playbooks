name: ET WEB_SPECIFIC_APPS Joomla Community component userid parameter UPDATE SET SQL Injection Attempt
id: 22013471
description: |
  Detects SQL injection attempts targeting Joomla Community component via UPDATE SET statements.
  May trigger on legitimate database administration or application updates in rare cases.
type: detection
detection_id: 2013471
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the userid parameter?
    context: Understanding the full payload reveals the attacker's database manipulation intent.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.uri
        - http.request.body.content

  - question: Is this legitimate Joomla Community component administration?
    context: Administrators may perform legitimate database updates through the component interface.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains: "option=com_community"
        condition: selection
      fields:
        - src_ip
        - http.request.headers.user_agent
        - url.query

  - question: What reconnaissance activity preceded this SQL injection attempt?
    context: Attackers typically enumerate application structure before launching targeted SQL injection.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code
        - http.request.method

  - question: What other Joomla components were targeted by this attacker?
    context: SQL injection campaigns often target multiple vulnerable components systematically.
    range: -1h/+1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains: "option=com_"
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code

  - question: Did the SQL injection attempt succeed or get blocked?
    context: Response codes and error messages indicate if the database was successfully manipulated.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.headers.content_length

  - question: What database records could be modified by this UPDATE statement?
    context: Understanding target tables and columns helps assess data integrity impact.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains: "option=com_community"
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - http.response.body.content

  - question: What specific UPDATE SET operations were attempted?
    context: Analyzing the SQL syntax reveals the attacker's database modification objectives.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: Are there signs of automated SQL injection tools or manual testing?
    context: Tool signatures and request patterns distinguish between automated scanners and skilled attackers.
    range: -30m/+30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - http.request.method
        - url.path

  - question: What authentication bypass or privilege escalation was attempted?
    context: SQL injection in user management components often targets authentication mechanisms.
    range: -30m/+30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/index.php"
        condition: selection
      fields:
        - url.query
        - http.request.headers.cookie
        - http.response.headers.set_cookie

  - question: Are other Joomla sites in the environment being targeted similarly?
    context: Attackers often target multiple Joomla installations with the same vulnerability.
    range: -2h/+2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains: "UPDATE"
          url.query|contains: "SET"
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query

  - question: What is the scope of this SQL injection campaign across the enterprise?
    context: Coordinated attacks may target multiple web applications using similar SQL injection techniques.
    range: -4h/+4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "SQL Injection"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name