name: ET WEB_SPECIFIC_APPS OneFileCMS p parameter Cross Site Scripting Attempt
id: 22013568
description: |
  Detects cross-site scripting (XSS) attempts targeting the OneFileCMS p parameter.
  Identifies malicious JavaScript injection attempts that could lead to administrative session hijacking.
  Legitimate CMS navigation does not contain script tags or event handlers in parameters.
type: detection
detection_id: 2013568
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload injected into the OneFileCMS p parameter?
    context: The specific payload reveals the attacker's intent and targeting of CMS functionality.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query
        - http.request.body.content

  - question: What HTTP headers and user agent were used in this CMS attack?
    context: Headers provide insight into the attack tool and potential targeting of specific browsers.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.headers
        - http.request.user_agent
        - http.request.referrer

  - question: How did the OneFileCMS respond to the XSS injection attempt?
    context: Server response indicates if the XSS payload was reflected and potentially executed.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.headers

  # Type 2: Triage Assessment
  - question: Is this a legitimate administrator testing the CMS or an external attack?
    context: Determines if this is authorized security testing or malicious exploitation attempt.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "onefilecms"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.request.user_agent

  - question: Does this source IP show patterns of CMS vulnerability scanning?
    context: Multiple CMS-targeted attacks indicate automated exploitation attempts.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - "cms"
            - "admin"
            - "wp-"
            - "drupal"
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query

  # Type 3: Activity Context
  - question: What other web application attacks targeted this CMS before the XSS attempt?
    context: Identifies if this is part of a broader CMS compromise campaign.
    range: -4h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.category|contains: "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - url.path
        - url.query

  - question: What reconnaissance activity occurred before targeting this CMS?
    context: Reveals attacker methodology and CMS identification process.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.request.method: GET
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.user_agent

  - question: Were there any authentication attempts against the CMS before the XSS attack?
    context: Shows if the attacker attempted direct access before resorting to XSS.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.request.method: POST
        condition: selection
      fields:
        - url.path
        - http.request.body.content
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did any CMS administrators access the system after this XSS attempt?
    context: Determines if administrative sessions could have been compromised.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "onefilecms"
        condition: selection
      fields:
        - src_ip
        - http.request.user_agent
        - http.request.headers
        - url.query

  - question: Were any files modified or uploaded to the CMS after the attack?
    context: Identifies if the XSS attack led to successful CMS compromise or defacement.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.request.method: POST
          url.path|contains: "onefilecms"
        condition: selection
      fields:
        - src_ip
        - http.request.body.content
        - http.response.status_code

  # Type 5: Forensic Deep-Dive
  - question: What specific OneFileCMS version and configuration is running on the target?
    context: Determines vulnerability status and available security controls.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "onefilecms"
        condition: selection
      fields:
        - http.response.headers
        - http.response.body.content
        - url.path

  - question: What other XSS vulnerabilities exist in this CMS installation?
    context: Identifies additional attack vectors and security weaknesses in the CMS.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "Cross Site Scripting"
        condition: selection
      fields:
        - rule.name
        - src_ip
        - url.path

  - question: Are there signs of successful administrative session hijacking?
    context: Determines if the XSS attack progressed to full CMS compromise.
    range: +6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "onefilecms"
        condition: selection
      fields:
        - http.request.method
        - http.request.headers
        - url.query

  # Type 6: Enterprise Correlation
  - question: Are other CMS installations in the network under similar XSS attack?
    context: Determines attack campaign scope and identifies additional vulnerable systems.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "Cross Site Scripting"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: What other CMS vulnerabilities are being exploited by this attacker?
    context: Identifies attacker methodology and additional CMS security risks.
    range: +/-7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains: "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path