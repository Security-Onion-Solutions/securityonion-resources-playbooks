name: ET WEB_SPECIFIC_APPS WordPress Tune Library Plugin letter parameter INSERT INTO SQL Injection Attempt
id: 22013676
description: |
  Detects SQL injection attempts targeting the WordPress Tune Library Plugin via the letter parameter.
  This specific variant attempts INSERT INTO operations to add malicious data to database tables.
  May trigger on legitimate queries containing these SQL keywords in user input.
type: detection
detection_id: 2013676
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact INSERT INTO SQL injection payload in the letter parameter?
    context: Understanding the complete insertion statement reveals what malicious data the attacker is attempting to add to the database.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content

  - question: What table and column values are being inserted by this injection attempt?
    context: Specific table names and inserted values indicate whether this is user creation, privilege escalation, or malicious content injection.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.referrer

  - question: Is this a legitimate data insertion operation by authorized site administrators?
    context: INSERT operations might be part of authorized content management or user registration activities during normal business hours.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - user_agent.original

  - question: Are there other data manipulation attempts being made by this attacker?
    context: Multiple data modification operations indicate systematic database compromise and potential backdoor installation attempts.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'INSERT INTO'
            - 'UPDATE SET'
            - 'CREATE TABLE'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.full

  - question: What database reconnaissance preceded this INSERT injection attempt?
    context: Understanding the attack timeline helps identify how the attacker determined the database structure for successful data insertion.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code
        - user_agent.original

  - question: Did the INSERT injection receive a response indicating successful data insertion?
    context: Response codes and database feedback reveal whether the malicious data was successfully inserted into the database.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: What type of malicious content could be inserted through this injection?
    context: Successful INSERT operations can create backdoor accounts, inject malicious scripts, or establish persistent access mechanisms.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/tune-library/'
        condition: selection
      fields:
        - http.response.body.bytes
        - http.response.status_code
        - url.query

  - question: Are there signs of backdoor account creation or privilege escalation following this insertion?
    context: Successful data insertion may result in new administrative accounts or elevated privileges for continued access.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-admin/'
            - '/wp-login.php'
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - http.response.status_code
        - url.query

  - question: Has this INSERT injection technique been used against other WordPress sites?
    context: Multiple targets suggest an automated campaign for establishing persistent access across multiple WordPress installations.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/tune-library/tune-library-ajax.php'
        condition: selection
      fields:
        - dst_ip
        - url.query
        - http.response.status_code

  - question: Are there other persistence mechanisms being deployed by this threat actor?
    context: Multiple persistence techniques indicate advanced attack methodology and long-term compromise objectives.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'WordPress'
            - 'Web Shell'
            - 'Backdoor'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.full

  - question: What is the strategic intent behind this INSERT injection attack campaign?
    context: Attack patterns and inserted content analysis helps determine whether this is credential harvesting, botnet recruitment, or data theft preparation.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - source.geo.country_name
        - source.as.organization.name
        - user_agent.original