name: ET WEB_SPECIFIC_APPS Mambo N-Myndir INSERT INTO SQL Injection Attempt
id: 22013707
description: |
  Detects SQL injection attempts targeting the Mambo N-Myndir component using INSERT INTO statements.
  May trigger on legitimate database operations, but typically indicates malicious attempts to insert unauthorized data.
type: detection
detection_id: 2013707
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete INSERT INTO SQL injection payload?
    context: Understanding the insertion attempt reveals what data the attacker is trying to inject into the database.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - rule.name

  - question: Is this a legitimate data insertion operation by an authorized user?
    context: Administrative users may perform legitimate INSERT operations that could trigger this signature.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: What reconnaissance activity preceded this injection attempt?
    context: Attackers typically probe the application structure before attempting data insertion attacks.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.full
        - http.response.status_code

  - question: Did the server respond with error messages indicating successful injection?
    context: Database error messages or unexpected responses suggest the injection attempt was processed.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_ip|expand: '%src_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: Are there signs of successful data insertion or database modification?
    context: Successful INSERT attacks may result in unauthorized user accounts or malicious content being added.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.response.body.bytes
        - http.response.status_code

  - question: What is the threat profile of the attacking IP address?
    context: IP reputation and geolocation help assess the severity and origin of the attack.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - src_ip
        - geoip.country_name
        - threat.indicator.type

  - question: Has this attacker attempted other SQL injection techniques?
    context: Multiple injection methods indicate sophisticated attackers with comprehensive exploitation tools.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  - question: Are there authentication bypass attempts from this source?
    context: INSERT injection combined with authentication attacks suggests attempts to create backdoor accounts.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - "login"
            - "admin"
            - "register"
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: What is the security posture of the targeted Mambo installation?
    context: Identifying version and configuration helps assess vulnerability to this specific attack vector.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "mambo"
        condition: selection
      fields:
        - http.response.headers
        - url.path
        - http.response.body.content

  - question: Are multiple systems experiencing coordinated INSERT injection attacks?
    context: Widespread attacks suggest automated tools or organized threat actors targeting the infrastructure.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "INSERT INTO SQL Injection"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: Is this attack part of a larger web application exploitation campaign?
    context: Sequential attacks across different vulnerabilities indicate comprehensive penetration testing or malicious campaigns.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path