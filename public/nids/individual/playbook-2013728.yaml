name: ET MALWARE Win32/OnLineGames GetMyIP Style Checkin
id: 22013728
description: |
  Detects Win32/OnLineGames malware attempting to retrieve external IP address through HTTP requests.
  This pattern indicates command-and-control communication where malware queries its public IP.
  Legitimate applications may also check external IP, but the specific URI pattern is suspicious.
type: detection
detection_id: 2013728
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact URI pattern and parameters used in the GetMyIP request?
    context: Understanding the specific ASP parameters reveals the malware variant and C2 communication method.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.path
        - url.query
        - http.request.body.content

  - question: Is this system authorized to make external IP lookup requests?
    context: Legitimate network discovery tools may check external IP, but gaming malware typically does this covertly.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - "GetMyIP"
            - "whatismyip"
            - "myip"
        condition: selection
      fields:
        - dst_ip
        - url.domain
        - url.path
        - http.request.method

  - question: What process initiated this HTTP request on the source system?
    context: Identifying the parent process helps determine if this is malware execution or legitimate software.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 80
        condition: selection
      fields:
        - src_port
        - network.bytes_sent
        - network.bytes_received
        - network.protocol

  - question: What other network connections occurred from this system around the same time?
    context: OnLineGames malware typically establishes multiple connections for data exfiltration and C2 communication.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - network.bytes_sent
        - network.bytes_received

  - question: Are there signs of gaming credential theft or keylogging activity?
    context: Win32/OnLineGames malware specifically targets gaming accounts and may log keystrokes.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          file.name|contains:
            - "keylog"
            - "game"
            - "account"
            - "password"
            - ".dat"
        condition: selection
      fields:
        - file.path
        - file.name
        - file.size
        - file.hash.md5

  - question: What data was transmitted in subsequent HTTP requests after IP discovery?
    context: After obtaining external IP, malware typically sends system information or stolen credentials to C2 servers.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.request.method: "POST"
        condition: selection
      fields:
        - dst_ip
        - url.full
        - http.request.body.content
        - http.response.status_code

  - question: Has this system established persistent connections to gaming or C2 servers?
    context: OnLineGames malware maintains persistent connections to exfiltrate gaming credentials and receive commands.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 80
            - 443
            - 8080
            - 9999
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.bytes_sent
        - network.bytes_received

  - question: Are there registry modifications indicating malware persistence?
    context: Gaming malware often modifies registry keys for persistence and to disable security software.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          registry.path|contains:
            - "Run"
            - "RunOnce"
            - "Services"
            - "Winlogon"
        condition: selection
      fields:
        - registry.path
        - registry.key
        - registry.value.name
        - registry.value.data

  - question: What processes were created around the time of the malicious HTTP request?
    context: Understanding process execution timeline helps identify malware installation and execution chain.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - process.name
        - process.command_line
        - process.parent.name
        - process.parent.command_line
        - user.name

  - question: Are other systems in the network showing similar GetMyIP communication patterns?
    context: Gaming malware campaigns often target multiple systems simultaneously for credential harvesting.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          url.query|contains:
            - "GetMyIP"
            - "Action=GetMyIP"
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.full
        - http.request.method

  - question: What DNS queries were made for the destination domain before the HTTP request?
    context: DNS resolution patterns can reveal if the malware uses domain generation algorithms or hardcoded C2 domains.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.question.name
        - dns.resolved_ip
        - dns.question.type