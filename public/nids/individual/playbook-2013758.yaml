name: ET WEB_SPECIFIC_APPS Wordpress Zingiri webshop plugin Remote File inclusion Attempt
id: 22013758
description: |
  Detects remote file inclusion attempts targeting the Zingiri webshop WordPress plugin.
  Legitimate plugin usage would not include external file paths in the wpabspath parameter.
type: detection
detection_id: 2013758
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete malicious URL and file inclusion payload?
    context: Understanding the exact RFI payload reveals the attacker's intended remote file and exploitation method.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method

  - question: What remote file or protocol was specified in the wpabspath parameter?
    context: The wpabspath parameter content indicates the attacker's remote payload location.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.query

  # Type 2: Triage Assessment
  - question: Is this WordPress site known to use the Zingiri webshop plugin legitimately?
    context: Confirming plugin installation helps distinguish between targeted attacks and scanning attempts.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/zingiri-web-shop/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Has this source IP attempted similar WordPress plugin exploits recently?
    context: Multiple plugin exploitation attempts indicate automated scanning or focused targeting.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/wp-content/plugins/'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.response.status_code

  # Type 3: Activity Context
  - question: What other WordPress reconnaissance occurred from this source before the RFI attempt?
    context: Attackers often enumerate WordPress installations and plugins before attempting exploitation.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-admin/'
            - '/wp-content/'
            - '/wp-includes/'
            - 'wp-login.php'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - user_agent.original

  - question: What was the server's response to this RFI attempt?
    context: Server response codes indicate if the exploitation attempt was successful or blocked.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/zingiri-web-shop/fws/ajax/init.inc.php'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.query

  # Type 4: Impact Assessment
  - question: Did the web server successfully include any remote files from the specified URL?
    context: Successful file inclusion could lead to code execution and full server compromise.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.bytes
        - network.protocol

  - question: Are there signs of successful code execution following this RFI attempt?
    context: Process creation or file modifications indicate successful exploitation beyond the initial attempt.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User

  # Type 5: Forensic Deep-Dive
  - question: What specific remote file was the attacker attempting to include?
    context: Analysis of the remote file URL reveals the intended payload and attacker infrastructure.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.headers

  - question: Has this remote file URL been used in other attacks across the network?
    context: Reused payload URLs indicate campaign scope and attacker infrastructure.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          url.query|contains: 'wpabspath='
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.query

  # Type 6: Enterprise Correlation
  - question: Are other WordPress sites in the environment being targeted with similar RFI attacks?
    context: Multiple targeted sites indicate a coordinated campaign against WordPress infrastructure.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          url.path|contains: '/wp-content/plugins/'
          url.query|contains: 'wpabspath='
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.path