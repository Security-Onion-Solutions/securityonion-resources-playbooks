name: ET WEB_SPECIFIC_APPS Mambo AHS Shop component UPDATE SET SQL Injection Attempt
id: 22013763
description: |
  Detects SQL injection attempts targeting the AHS Shop component in Mambo CMS using UPDATE SET statements.
  Legitimate usage of this component would not contain SQL UPDATE statements in URL parameters.
type: detection
detection_id: 2013763
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete SQL injection payload in the flokkur parameter?
    context: Understanding the exact SQL payload reveals the attacker's intended database manipulation.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method

  - question: What specific UPDATE SET statement was attempted in the injection?
    context: The UPDATE statement content indicates what database fields the attacker intended to modify.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  # Type 2: Triage Assessment
  - question: Is this server known to run Mambo CMS with the AHS Shop component?
    context: Confirming the presence of the target application helps distinguish between targeted attacks and scanning.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains: 'option=com_ahsshop'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Has this source IP attempted other SQL injection attacks recently?
    context: Multiple SQL injection attempts indicate automated scanning or focused database targeting.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'SELECT'
            - 'UPDATE'
            - 'INSERT'
            - 'DELETE'
            - 'UNION'
        condition: selection
      fields:
        - dst_ip
        - url.query
        - http.response.status_code

  # Type 3: Activity Context
  - question: What other Mambo CMS components were accessed before this SQL injection attempt?
    context: Attackers often enumerate CMS components and functionality before attempting exploitation.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains: 'option=com_'
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - user_agent.original

  - question: What was the application's response to this SQL injection attempt?
    context: Response codes and content indicate if the injection was successful or blocked by security controls.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains: 'flokkur='
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.query

  # Type 4: Impact Assessment
  - question: Are there signs of successful database modification following this injection attempt?
    context: Database changes indicate successful exploitation and potential data integrity compromise.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - 'mysql'
            - 'mysqld'
            - 'postgres'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User

  - question: Did the attacker attempt to access or modify sensitive database tables?
    context: Successful database access could lead to data theft or privilege escalation.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'users'
            - 'admin'
            - 'password'
            - 'user_'
        condition: selection
      fields:
        - url.query
        - http.response.status_code

  # Type 5: Forensic Deep-Dive
  - question: What specific database tables or columns were targeted in the UPDATE statement?
    context: Targeted database elements reveal the attacker's objectives and potential data at risk.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.headers

  - question: Has this SQL injection pattern been used against other systems in the network?
    context: Reused injection patterns indicate campaign scope and attacker methodology.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          url.query|contains:
            - 'UPDATE'
            - 'SET'
            - 'flokkur='
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.query

  # Type 6: Enterprise Correlation
  - question: Are other Mambo CMS installations being targeted with similar SQL injection attacks?
    context: Multiple targeted CMS installations indicate a coordinated campaign against web applications.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          url.query|contains: 'option=com_'
          url.query|contains:
            - 'UPDATE'
            - 'SELECT'
            - 'INSERT'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.query