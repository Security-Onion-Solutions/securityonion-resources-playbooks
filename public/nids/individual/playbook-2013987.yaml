name: ET WEB_SPECIFIC_APPS Zabbix popup.php UPDATE SET SQL Injection Vulnerability
id: 22013987
description: |
  Detects SQL injection attempts targeting Zabbix monitoring system popup.php script using UPDATE SET statements.
  This alert indicates potential database modification attempts against the Zabbix infrastructure monitoring platform.
  Legitimate Zabbix usage should not contain raw SQL UPDATE statements in popup.php parameters.
type: detection
detection_id: 2013987
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload with UPDATE SET statement attempted against Zabbix?
    context: The specific SQL payload reveals the attacker's database modification intent and target data fields.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query

  - question: What specific database fields and values are being modified by the UPDATE statement?
    context: Understanding the target modifications helps assess potential system compromise and data integrity impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.user_agent

  - question: Is this a legitimate Zabbix administrator performing configuration updates?
    context: Zabbix administrators regularly modify configurations, but should not trigger SQL injection detection patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - "zabbix"
            - "popup.php"
        condition: selection
      fields:
        - url.full
        - http.user_agent

  - question: What other SQL injection techniques have been attempted against this Zabbix instance?
    context: SQL injection attacks often involve multiple techniques including both UPDATE and INSERT statements.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.category: "WEB_APPLICATION_ATTACK"
          rule.name|contains: "SQL"
        condition: selection
      fields:
        - src_ip
        - rule.name

  - question: Has the Zabbix database server responded with successful update confirmations or error messages?
    context: Server responses indicate whether the SQL injection attempt successfully modified database records.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes

  - question: Are there signs of successful database modification or configuration tampering?
    context: Successful UPDATE injection may result in altered monitoring configurations, user privileges, or system settings.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "zabbix"
        condition: selection
      fields:
        - url.full
        - http.request.method
        - network.bytes

  - question: What is the attack sequence suggesting systematic database enumeration and exploitation?
    context: Understanding attack progression helps determine if this is targeted Zabbix compromise or opportunistic scanning.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.user_agent
        - http.request.method

  - question: Has this UPDATE SQL injection pattern been used against other infrastructure monitoring systems?
    context: Attackers often target multiple monitoring platforms to gain comprehensive network visibility and control.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "SQL"
            - "UPDATE"
        condition: selection
      fields:
        - dst_ip
        - rule.name

  - question: What critical monitoring configurations and alert settings could be compromised?
    context: Understanding Zabbix deployment scope helps assess the potential impact of successful database modification.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "zabbix"
        condition: selection
      fields:
        - src_ip
        - url.full

  - question: Are there indicators of privilege escalation or administrative account compromise?
    context: Successful SQL injection against monitoring systems may provide elevated access to infrastructure management.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol

  - question: What database integrity controls and backup systems are protecting this Zabbix deployment?
    context: Understanding data protection mechanisms helps assess recovery options if database modification was successful.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.response.headers
        - http.response.status_code