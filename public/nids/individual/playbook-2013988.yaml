name: ET WEB_SPECIFIC_APPS Zabbix popup.php INSERT INTO SQL Injection Vulnerability
id: 22013988
description: |
  Detects SQL injection attempts targeting Zabbix monitoring system popup.php script using INSERT INTO statements.
  This alert indicates potential database manipulation attempts against the Zabbix infrastructure monitoring platform.
  Legitimate Zabbix usage should not contain raw SQL INSERT statements in popup.php parameters.
type: detection
detection_id: 2013988
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload attempted against the Zabbix popup.php script?
    context: The specific SQL payload reveals the attacker's database manipulation intent and technical sophistication.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query

  - question: What specific database tables and fields are being targeted by the INSERT statement?
    context: Understanding the target database structure helps assess potential data compromise and system impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.user_agent

  - question: Is this a legitimate Zabbix administrator accessing the monitoring interface?
    context: Zabbix administrators regularly access popup interfaces for configuration, but should not trigger SQL injection patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - "zabbix"
            - "popup.php"
        condition: selection
      fields:
        - url.full
        - http.user_agent

  - question: What other SQL injection attempts have been made against this Zabbix instance?
    context: SQL injection attacks often involve multiple attempts to identify vulnerable parameters and exploit techniques.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.category: "WEB_APPLICATION_ATTACK"
          rule.name|contains: "SQL"
        condition: selection
      fields:
        - src_ip
        - rule.name

  - question: Has the Zabbix server responded with database errors or successful query execution?
    context: Server responses indicate whether the SQL injection attempt was successful or blocked by security controls.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes

  - question: Are there signs of successful database compromise or data exfiltration?
    context: Successful SQL injection may result in unauthorized data access, configuration changes, or credential theft.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - network.bytes

  - question: What is the attack methodology suggesting automated scanning vs targeted exploitation?
    context: Understanding attack patterns helps determine if this is opportunistic scanning or targeted Zabbix compromise.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.user_agent
        - http.request.method

  - question: Has this SQL injection pattern been attempted against other monitoring systems?
    context: Attackers often target multiple monitoring platforms to gain visibility into network infrastructure.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "SQL"
            - "Injection"
        condition: selection
      fields:
        - dst_ip
        - rule.name

  - question: What monitoring data and system configurations are accessible through this Zabbix instance?
    context: Understanding Zabbix deployment scope helps assess the potential impact of successful compromise.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "zabbix"
        condition: selection
      fields:
        - src_ip
        - url.full

  - question: Are there indicators of post-exploitation activity or infrastructure reconnaissance?
    context: Successful Zabbix compromise may provide attackers with detailed network topology and system information.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol

  - question: What database security controls and monitoring are implemented for this Zabbix deployment?
    context: Understanding existing database protections helps assess the likelihood of successful SQL injection exploitation.
    range: +/-30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.response.headers
        - http.response.status_code