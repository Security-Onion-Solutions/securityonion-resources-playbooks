name: ET WEB_SPECIFIC_APPS Joomla com_dshop Component INSERT INTO SQL Injection Attempt
id: 22014064
description: |
  Detects SQL injection attempts targeting Joomla com_dshop component using INSERT INTO statements.
  May trigger on legitimate database operations containing similar keywords in specific contexts.
type: detection
detection_id: 2014064
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact INSERT INTO SQL injection payload in the com_dshop request?
    context: Understanding the complete injection string reveals the attacker's intent to insert malicious data.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - rule.name

  - question: Which database tables or columns were targeted for data insertion?
    context: Analyzing the INSERT payload reveals what database modifications the attacker attempted.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - "INSERT"
            - "INTO"
            - "option=com_dshop"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - url.path

  # Type 2: Triage Assessment
  - question: Is this com_dshop component actively used for legitimate e-commerce operations?
    context: Determining legitimate usage patterns helps distinguish malicious injections from normal operations.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains: "option=com_dshop"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Are there authorized database maintenance activities on this system?
    context: Legitimate database operations might involve INSERT statements, helping assess false positive potential.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/administrator/"
            - "/index.php"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  # Type 3: Activity Context
  - question: What reconnaissance preceded this INSERT-based SQL injection attempt?
    context: Attackers typically probe for injection points before attempting data manipulation attacks.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Was this INSERT attempt part of a multi-stage SQL injection attack?
    context: Understanding the attack sequence helps identify the overall campaign methodology.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "SQL Injection"
        condition: selection
      fields:
        - rule.name
        - url.full
        - http.request.method

  # Type 4: Impact Assessment
  - question: Did the INSERT injection attempt succeed in modifying database content?
    context: Successful INSERT attacks may result in specific response patterns or status codes.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.full

  - question: Are there signs of persistent backdoor or webshell insertion?
    context: INSERT attacks often aim to add malicious users or backdoor entries to the database.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/administrator/"
            - "/index.php"
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  # Type 5: Forensic Deep-Dive
  - question: What specific data was the attacker attempting to insert into the database?
    context: Analyzing the INSERT payload reveals the attacker's objectives and potential persistence mechanisms.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "INSERT INTO SQL Injection"
        condition: selection
      fields:
        - rule.name
        - url.full
        - http.request.body.content

  - question: Are there indicators of automated SQL injection tools being used?
    context: Tool signatures help identify attack sophistication and potential for automated exploitation.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - url.path
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other Joomla installations experiencing similar INSERT-based attacks?
    context: Coordinated campaigns often target multiple similar applications with the same injection techniques.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "Joomla"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: Is this part of a broader database manipulation campaign?
    context: INSERT attacks often occur alongside other SQL injection attempts targeting data modification.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SQL Injection"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - rule.category