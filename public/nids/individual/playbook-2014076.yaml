name: ET WEB_SPECIFIC_APPS jbShop e107 CMS plugin item_id parameter UNION SELECT SQL Injection Attempt
id: 22014076
description: |
  Detects SQL injection attempts targeting the jbShop e107 CMS plugin's item_id parameter using UNION SELECT statements.
  May trigger on legitimate complex database queries or automated security testing tools.
type: detection
detection_id: 2014076
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What database columns were targeted in the UNION SELECT injection payload?
    context: UNION SELECT attacks reveal database structure and attempt to extract sensitive information.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method

  - question: Is this authorized database testing or development activity?
    context: Developers may use UNION SELECT statements for legitimate data retrieval during testing.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - user_agent.original
        - http.request.method

  - question: What database enumeration techniques preceded this UNION SELECT attack?
    context: UNION attacks typically follow reconnaissance to determine column count and data types.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - rule.name
        - url.path
        - timestamp

  - question: Did the UNION SELECT injection successfully extract database information?
    context: Successful UNION attacks return sensitive data in HTTP responses, indicating compromise.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.body.bytes

  - question: What sensitive information was potentially extracted from the database?
    context: UNION SELECT attacks commonly target user credentials, personal data, and system information.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'password'
            - 'username'
            - 'email'
            - 'hash'
        condition: selection
      fields:
        - url.full
        - http.response.body.bytes

  - question: Has the attacker attempted to extract database schema information?
    context: Advanced UNION attacks target system tables to map database structure for further exploitation.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'information_schema'
            - 'table_name'
            - 'column_name'
        condition: selection
      fields:
        - url.full
        - http.response.status_code

  - question: Are there signs of credential harvesting following the UNION SELECT attack?
    context: Extracted credentials may be immediately tested for authentication bypass or lateral movement.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.request.method: 'POST'
          url.path|contains:
            - 'login'
            - 'admin'
            - 'auth'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.response.status_code

  - question: Has the attacker escalated privileges using extracted administrative credentials?
    context: UNION SELECT attacks may reveal admin passwords enabling full system compromise.
    range: +3h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: 'admin'
          http.response.status_code: '200'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - user_agent.original

  - question: What automated tools were used for this UNION SELECT injection?
    context: Tool fingerprinting helps identify attack sophistication and potential threat actor attribution.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - user_agent.original
        - http.request.headers

  - question: Are other web applications showing similar UNION SELECT exploitation attempts?
    context: Coordinated UNION attacks may indicate automated scanning across multiple targets.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'UNION SELECT'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path