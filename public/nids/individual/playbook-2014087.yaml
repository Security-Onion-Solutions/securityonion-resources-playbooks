name: ET WEB_SPECIFIC_APPS Mambo Zorder zorder Parameter SELECT FROM SQL Injection Vulnerability
id: 22014087
description: |
  Detects SQL injection attempts targeting the Mambo CMS zorder parameter via SELECT FROM statements.
  This vulnerability allows attackers to extract database information through the administrator interface.
  May trigger on legitimate administrative operations involving database queries or content management.
type: detection
detection_id: 2014087
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete SQL SELECT FROM payload in the zorder parameter?
    context: Understanding the injection syntax reveals the specific database information being targeted for extraction.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.query

  - question: What specific database tables or columns were targeted in the SELECT statement?
    context: Identifying queried database elements helps assess the scope of potential information disclosure.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/administrator/index2.php'
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  # Type 2: Triage Assessment
  - question: Is this Mambo CMS administrator interface legitimately accessed by authorized users?
    context: Distinguishing between legitimate administrative queries and malicious data extraction attempts.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/administrator/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Are there normal database query operations performed through the zorder parameter?
    context: The zorder parameter may be used for legitimate content ordering queries in CMS administration.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains: 'zorder='
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.status_code

  # Type 3: Activity Context
  - question: What authentication or session establishment preceded this administrator access?
    context: SQL injection through admin interfaces often follows authentication bypass or credential compromise.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/administrator/'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What other administrator interface parameters were tested before the zorder exploitation?
    context: Attackers typically enumerate multiple parameters before finding exploitable injection points.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/administrator/index2.php'
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - http.response.body.bytes

  # Type 4: Impact Assessment
  - question: Did the SQL injection attempt successfully extract database information?
    context: HTTP response size and content patterns indicate whether the SELECT query returned sensitive data.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/administrator/index2.php'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.mime_type

  - question: Are there signs of database enumeration or credential harvesting following the injection?
    context: Successful SELECT injection may lead to user account discovery and credential extraction.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/administrator/'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  # Type 5: Forensic Deep-Dive
  - question: What other SQL injection techniques has this attacker used against the Mambo CMS?
    context: Understanding the full scope of SQL injection attempts reveals attacker methodology and persistence.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'Mambo'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.full

  - question: Has this source IP attempted to exploit other CMS platforms with similar vulnerabilities?
    context: Coordinated attacks often target multiple CMS installations using similar SQL injection techniques.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains: 'web-application-attack'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  # Type 6: Enterprise Correlation
  - question: Are other systems showing similar Mambo CMS SELECT FROM injection attempts?
    context: Identifying campaign scope across multiple CMS installations helps understand attack coordination.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'Mambo Zorder'
          rule.name|contains: 'SELECT FROM'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name