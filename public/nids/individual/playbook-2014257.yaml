name: ET WEB_SPECIFIC_APPS pfile file.php id Parameter UPDATE SET SQL Injection Attempt
id: 22014257
description: |
  Detects SQL injection attempts targeting the pfile application's file.php script via the id parameter using UPDATE SET statements.
  UPDATE-based injection can modify existing data, escalate privileges, or alter application behavior.
type: detection
detection_id: 2014257
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What specific data fields are being modified through the UPDATE injection?
    context: Understanding modification targets reveals whether attacker is changing credentials, permissions, or application data.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.uri
        - url.query
        - http.request.body.content
        - alert.signature

  - question: Has this source IP previously performed reconnaissance on the pfile application?
    context: Prior enumeration indicates targeted exploitation with specific knowledge of application structure.
    range: -12h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/file.php'
        condition: selection
      fields:
        - http.request.method
        - url.query
        - http.response.status_code
        - http.response.bytes

  - question: Did the UPDATE statement execute successfully based on application response?
    context: Successful updates confirm data modification and potential compromise of application integrity.
    range: +3m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.bytes

  - question: Are there attempts to modify user credentials or authentication data?
    context: Credential modification through injection enables persistent unauthorized access to the application.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'password'
            - 'passwd'
            - 'login'
            - 'user'
            - 'auth'
            - 'credential'
        condition: selection
      fields:
        - dst_ip
        - url.query
        - http.response.status_code

  - question: What privilege escalation attempts follow the UPDATE injection?
    context: Successful data modification may be followed by attempts to leverage elevated privileges.
    range: +20m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.query|contains:
            - 'admin'
            - 'root'
            - 'privilege'
            - 'role'
            - 'permission'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code

  - question: Has the attacker attempted to verify successful data modification?
    context: Verification queries indicate sophisticated attack methodology and confirm modification success.
    range: +10m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/file.php'
          http.request.method: 'GET'
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - http.response.bytes

  - question: Are there signs of application configuration or security setting modifications?
    context: Configuration changes through injection can disable security controls or create persistent backdoors.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - 'config'
            - 'setting'
            - 'security'
            - 'debug'
            - 'log'
            - 'enable'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - url.query
        - http.response.status_code

  - question: What other SQL injection techniques has this attacker employed?
    context: Multiple injection methods indicate comprehensive database exploitation capabilities.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'SQL Injection'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - alert.signature
        - http.uri

  - question: Are there coordinated UPDATE injection attempts across the enterprise?
    context: Multiple server targeting suggests organized campaign requiring enterprise-wide response.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'pfile'
          alert.signature|contains: 'UPDATE'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - http.uri

  - question: What is the broader attack pattern and infrastructure of this threat actor?
    context: Understanding attacker TTPs helps predict next moves and implement appropriate countermeasures.
    range: -48h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains: 'web-application-attack'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - alert.signature
        - rule.category