name: ET WEB_SPECIFIC_APPS starCMS q parameter Cross Site Scripting Attempt
id: 22014327
description: |
  Detects cross-site scripting attempts targeting starCMS via the q parameter in search functionality.
  May trigger on legitimate JavaScript content but typically indicates XSS exploitation attempts.
type: detection
detection_id: 2014327
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload in the q parameter?
    context: Understanding the specific payload reveals the attack technique and potential impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method

  - question: Which JavaScript events or HTML elements were used in the XSS attempt?
    context: The specific XSS vector indicates sophistication and potential for exploitation.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  # Type 2: Triage Assessment
  - question: Is this starCMS installation actively used and maintained?
    context: Active usage patterns help distinguish between legitimate and malicious interactions.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/index.php"
        condition: selection
      fields:
        - src_ip
        - http.response.status_code
        - url.query

  - question: Are there legitimate search queries to this starCMS instance?
    context: Normal search patterns would show different query types and user behavior.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains: "actionsuche="
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.response.status_code

  # Type 3: Activity Context
  - question: What reconnaissance activity preceded this XSS attempt?
    context: Understanding the attack sequence reveals how the attacker discovered the vulnerability.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.request.method
        - http.response.status_code

  - question: How did the server respond to the XSS payload?
    context: Server response indicates whether the payload was executed or filtered.
    range: +2m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.bytes

  # Type 4: Impact Assessment
  - question: Did the XSS attempt result in successful payload execution?
    context: Successful XSS may lead to session hijacking or further exploitation.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.headers
        - http.response.status_code

  - question: Are there signs of session hijacking or credential theft following this XSS?
    context: Successful XSS attacks often lead to unauthorized access or data theft.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.headers

  # Type 5: Forensic Deep-Dive
  - question: What is the attack pattern and sophistication level of this XSS attempt?
    context: Understanding the attack complexity helps assess threat actor capabilities.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - alert.severity

  - question: Are there other XSS attempts from this source targeting different parameters?
    context: Multiple XSS vectors indicate systematic vulnerability testing.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "Cross Site Scripting"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.query

  # Type 6: Enterprise Correlation
  - question: Are other web applications in the environment being targeted with XSS attacks?
    context: Coordinated XSS attacks across multiple systems indicate a broader campaign.
    range: -12h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "Cross Site Scripting"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name