name: ET WEB_SPECIFIC_APPS Event Calendar PHP cal_year Parameter Cross Site Scripting Attempt
id: 22014449
description: |
  Detects cross-site scripting (XSS) attempts targeting the Event Calendar PHP application's cal_year parameter.
  May trigger on legitimate JavaScript or HTML content in parameters, but typically indicates malicious injection attempts.
type: detection
detection_id: 2014449
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload injected in the cal_year parameter?
    context: Understanding the specific script injection reveals the attacker's intent and potential impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query
        - http.request.method

  - question: Which specific JavaScript events or HTML attributes were used in the injection?
    context: Different XSS vectors indicate varying levels of sophistication and potential impact.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/demo_eventcalendar.php"
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - user_agent.original

  # Type 2: Triage Assessment
  - question: Is this Event Calendar PHP application legitimately deployed in the environment?
    context: Confirms whether the target application is actually present and accessible to users.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "eventcalendar"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Has this source IP accessed the Event Calendar application normally before?
    context: Distinguishes between targeted attacks and opportunistic scanning of vulnerable applications.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "eventcalendar"
        condition: selection
      fields:
        - url.query
        - http.response.status_code
        - user_agent.original

  # Type 3: Activity Context
  - question: What web scanning or reconnaissance activity preceded this XSS attempt?
    context: XSS attacks often follow directory enumeration or vulnerability scanning phases.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - user_agent.original

  - question: What was the sequence of parameter manipulation attempts on this application?
    context: Attackers often test multiple parameters before finding successful injection points.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: "/demo_eventcalendar.php"
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.response.status_code

  # Type 4: Impact Assessment
  - question: Did the XSS payload successfully execute based on server responses?
    context: Response codes and content help determine if the injection was successful or blocked.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.mime_type

  - question: Are there signs of session hijacking or credential theft following the XSS attempt?
    context: Successful XSS can lead to session token theft or credential harvesting.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.headers.cookie

  # Type 5: Forensic Deep-Dive
  - question: What is the complete attack chain from initial access to XSS injection?
    context: Understanding the full sequence helps identify all compromised components and attack vectors.
    range: -4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code
        - user_agent.original

  - question: Are there indicators of automated XSS scanning tools or manual exploitation?
    context: Tool signatures help determine threat actor sophistication and attribution.
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - user_agent.original
        - http.request.headers.accept
        - url.path

  # Type 6: Enterprise Correlation
  - question: Are other web applications in the environment being targeted with similar XSS attempts?
    context: Identifies whether this is part of a broader web application attack campaign.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "Cross Site Scripting"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name