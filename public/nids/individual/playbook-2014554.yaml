name: ET WEB_SPECIFIC_APPS WordPress Pretty Link plugin url Parameter Cross Site Scripting Attempt
id: 22014554
description: |
  Detects cross-site scripting attempts targeting the WordPress Pretty Link plugin's url parameter.
  May trigger on legitimate usage of JavaScript or HTML content in URL parameters.
type: detection
detection_id: 2014554
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload used in the Pretty Link plugin attack?
    context: Analyzing the payload reveals the attacker's intent and potential impact of the XSS attempt.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.path
        - url.query
        - http.request.body.content

  - question: What specific JavaScript or HTML elements were injected in the url parameter?
    context: Understanding the XSS vector helps assess the potential for session hijacking or data theft.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.headers
        - http.request.referrer

  # Type 2: Triage Assessment
  - question: Is WordPress with the Pretty Link plugin actually installed on this server?
    context: Confirming if the targeted application exists to determine if this is a real threat.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-content/plugins/pretty-link/"
        condition: selection
      fields:
        - src_ip
        - http.response.status_code
        - url.path
        - user_agent.original

  - question: Are there legitimate administrative activities on this WordPress site?
    context: Determining if this could be authorized testing or administration of the plugin.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          src_ip|expand: '%src_ip%'
          url.path|contains:
            - "/wp-admin/"
            - "/wp-login.php"
        condition: selection
      fields:
        - http.request.method
        - http.response.status_code
        - user_agent.original
        - url.query

  # Type 3: Activity Context
  - question: What other web application attacks has this source IP attempted?
    context: Understanding if this is part of broader web application reconnaissance or exploitation.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains:
            - "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path
        - alert.severity

  - question: What WordPress-specific attacks preceded this XSS attempt?
    context: Identifying if this is part of systematic WordPress site exploitation.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - "WordPress"
            - "WP"
        condition: selection
      fields:
        - rule.name
        - url.path
        - alert.severity
        - http.request.method

  - question: What was the sequence of requests leading to this XSS attempt?
    context: Understanding the attack progression and reconnaissance activities.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code
        - user_agent.original

  # Type 4: Impact Assessment
  - question: Did the XSS attack succeed in executing malicious JavaScript?
    context: Determining if the vulnerability was successfully exploited.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - bytes_sent
        - bytes_received

  - question: Are there signs of session hijacking or credential theft following this XSS?
    context: Assessing if the XSS was used to steal user sessions or sensitive data.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-login.php"
            - "/wp-admin/"
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - http.response.status_code
        - user_agent.original

  # Type 5: Forensic Deep-Dive
  - question: What user accounts were accessed following this XSS attempt?
    context: Identifying if the attack led to unauthorized access to WordPress accounts.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.response.status_code: 302
          url.path|contains:
            - "/wp-admin/"
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.headers
        - user_agent.original

  - question: Were any WordPress files modified or uploaded after this attack?
    context: Checking for web shell deployment or malicious file uploads.
    range: +24h
    query: |
      aggregation: true
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.path|contains:
            - "wp-content"
            - ".php"
        condition: selection
      fields:
        - file.path
        - file.name
        - file.hash.md5
        - process.name
        - user.name

  - question: Are there signs of privilege escalation or administrative access abuse?
    context: Determining if the XSS led to broader WordPress site compromise.
    range: +12h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-admin/users.php"
            - "/wp-admin/plugins.php"
            - "/wp-admin/themes.php"
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - url.query
        - user_agent.original

  # Type 6: Enterprise Correlation
  - question: Are other WordPress sites in the network being targeted with XSS attacks?
    context: Determining the scope of the WordPress-focused attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "WordPress"
            - "XSS"
            - "Cross Site Scripting"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path
        - alert.severity

  - question: What other cross-site scripting attempts have been detected across the enterprise?
    context: Understanding if this is part of a broader XSS attack campaign.
    range: +/-7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - "Cross Site Scripting"
            - "XSS"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - url.domain
        - alert.severity