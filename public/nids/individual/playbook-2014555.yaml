name: ET WEB_SPECIFIC_APPS WordPress flash-album-gallery plugin i Parameter Cross Site Scripting Attempt
id: 22014555
description: |
  Detects Cross-Site Scripting (XSS) attempts targeting the WordPress flash-album-gallery plugin's facebook.php script via the 'i' parameter.
  May trigger on legitimate use of JavaScript event handlers or styling in plugin parameters.
type: detection
detection_id: 2014555
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload in the 'i' parameter?
    context: Understanding the specific JavaScript injection reveals the attacker's intent and payload sophistication.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: What JavaScript event handlers or script tags were detected in the request?
    context: Identifying specific XSS vectors helps determine the attack's technical approach and potential impact.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.headers
        - url.path

  # Type 2: Triage Assessment
  - question: Is this WordPress site legitimately using the flash-album-gallery plugin?
    context: Confirms if the targeted plugin is actually installed and in use on this server.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/flash-album-gallery/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Are there normal administrative activities on this WordPress installation?
    context: Legitimate admin activity suggests an active WordPress site that could be a valid target.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-admin/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  # Type 3: Activity Context
  - question: What other requests did this source IP make to the WordPress site?
    context: Understanding the attack sequence reveals if this is part of a broader reconnaissance or exploitation campaign.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Were there any WordPress plugin enumeration attempts before this XSS attempt?
    context: Plugin enumeration often precedes targeted attacks on specific vulnerable plugins.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.method

  # Type 4: Impact Assessment
  - question: Did the XSS attempt receive a successful HTTP response?
    context: A successful response indicates the vulnerable script processed the malicious input.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: Are there signs of successful XSS execution or data exfiltration?
    context: Follow-up requests may indicate successful payload execution or credential harvesting.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.headers
        - http.request.body.content

  # Type 5: Forensic Deep-Dive
  - question: What is the complete attack pattern and payload structure?
    context: Detailed payload analysis helps identify the specific XSS technique and potential automation tools used.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.referrer
        - user_agent.original

  - question: Are there indicators of automated scanning tools or manual testing?
    context: User agent and request patterns can reveal if this is automated vulnerability scanning or targeted manual exploitation.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - user_agent.original
        - url.path
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other WordPress sites in the environment being targeted with similar XSS attempts?
    context: Identifies if this is part of a broader campaign against WordPress installations.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'WordPress'
          rule.name|contains: 'Cross Site Scripting'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name