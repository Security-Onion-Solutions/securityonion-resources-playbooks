name: ET WEB_SPECIFIC_APPS Wordpress yousaytoo-auto-publishing plugin submit Cross-Site Scripting Attempt
id: 22014589
description: |
  Detects Cross-Site Scripting (XSS) attempts targeting the WordPress yousaytoo-auto-publishing plugin via the 'submit' parameter.
  May trigger on legitimate JavaScript usage or HTML content in plugin submission forms.
type: detection
detection_id: 2014589
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the specific XSS payload injected via the submit parameter?
    context: Understanding the exact JavaScript injection reveals the attack vector and potential impact on users.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: What JavaScript event handlers or script elements were detected in the request?
    context: Identifying specific XSS techniques helps assess the sophistication and intended outcome of the attack.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.method
        - http.request.headers

  # Type 2: Triage Assessment
  - question: Is the yousaytoo-auto-publishing plugin actively installed and used on this WordPress site?
    context: Confirms if the targeted plugin exists and is accessible, validating the attack's potential success.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/yousaytoo-auto-publishing-plugin/'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Are there legitimate users submitting content through this plugin?
    context: Normal plugin usage patterns help distinguish between malicious attacks and legitimate user activity.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'yousaytoo.php'
          http.request.method: 'POST'
        condition: selection
      fields:
        - src_ip
        - http.response.status_code
        - user_agent.original

  # Type 3: Activity Context
  - question: What other WordPress-related requests did this attacker make?
    context: Understanding the attack sequence reveals if this is part of broader WordPress reconnaissance or exploitation.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Were there WordPress plugin enumeration attempts before this XSS attack?
    context: Plugin discovery often precedes targeted attacks on specific vulnerable WordPress plugins.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.method

  # Type 4: Impact Assessment
  - question: Did the XSS injection receive a successful response from the server?
    context: A successful response indicates the vulnerable script processed the malicious input and may have executed it.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.body.content

  - question: Are there signs of successful XSS execution or session hijacking attempts?
    context: Follow-up requests may indicate successful payload execution or attempts to steal user credentials.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.headers
        - http.request.body.content

  # Type 5: Forensic Deep-Dive
  - question: What specific XSS technique was employed in this attack?
    context: Detailed payload analysis helps categorize the attack method and assess potential automated tool usage.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.referrer
        - user_agent.original

  - question: Are there indicators of manual testing versus automated vulnerability scanning?
    context: Request patterns and user agent analysis help determine if this is targeted manual exploitation or automated scanning.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - user_agent.original
        - url.path
        - http.request.method

  # Type 6: Enterprise Correlation
  - question: Are other WordPress installations being targeted with similar XSS attacks?
    context: Identifies if this is part of a coordinated campaign against WordPress sites in the environment.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'Wordpress'
          rule.name|contains: 'Cross'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: Is this source IP conducting broader web application attacks across the network?
    context: Reveals the scope of the threat actor's activities and helps prioritize defensive measures.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'WEB_SPECIFIC_APPS'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path