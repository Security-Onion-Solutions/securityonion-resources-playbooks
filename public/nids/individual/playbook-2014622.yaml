name: ET WEB_SPECIFIC_APPS WordPress 1-jquery-photo-gallery-slideshow-flash plugin page Cross-Site Scripting Attempt
id: 22014622
description: |
  Detects XSS attempts targeting WordPress 1-jquery-photo-gallery-slideshow-flash plugin page parameter.
  May trigger on legitimate JavaScript content or authorized WordPress plugin testing.
type: detection
detection_id: 2014622
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload injected into the page parameter?
    context: Understanding the payload reveals the attack sophistication and potential browser exploitation.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method

  - question: What JavaScript events or script elements were detected in the request?
    context: Identifies the specific XSS technique and potential impact on WordPress users.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - user_agent.original

  # Type 2: Triage Assessment
  - question: Is the vulnerable WordPress plugin actually installed on this site?
    context: Confirms plugin presence and validates whether the attack vector exists.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-content/plugins/1-jquery-photo-gallery-slideshow-flash/'
            - 'wp-1pluginjquery.php'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Has this source IP legitimately accessed WordPress content recently?
    context: Distinguishes between targeted attacks and normal WordPress user activity.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-'
            - 'wordpress'
        condition: selection
      fields:
        - url.path
        - user_agent.original
        - http.response.status_code

  # Type 3: Activity Context
  - question: What WordPress reconnaissance preceded this plugin-specific attack?
    context: Plugin attacks typically follow WordPress version detection and plugin enumeration.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-content/plugins/'
            - '/wp-admin/'
            - '/wp-includes/'
        condition: selection
      fields:
        - url.path
        - url.query
        - http.response.status_code

  - question: What other WordPress security alerts were triggered by this source?
    context: Identifies if this is part of a broader WordPress-focused attack campaign.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'WordPress'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path
        - alert.severity

  # Type 4: Impact Assessment
  - question: Did the XSS attempt succeed based on the server response?
    context: Response analysis determines if the vulnerable plugin processed the malicious input.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.mime_type

  - question: Were there subsequent requests indicating successful XSS exploitation?
    context: Successful XSS may lead to WordPress admin session hijacking or further attacks.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-admin/'
            - '/wp-login.php'
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.headers
        - user_agent.original

  # Type 5: Forensic Deep-Dive
  - question: What WordPress user sessions were active during the attack timeframe?
    context: Identifies potential victims for session compromise and privilege escalation assessment.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-'
          http.request.headers|contains: 'wordpress'
        condition: selection
      fields:
        - src_ip
        - user_agent.original
        - url.path

  - question: Were any WordPress administrative actions performed after the XSS attempt?
    context: Successful XSS against WordPress admins could lead to site compromise.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '/wp-admin/post.php'
            - '/wp-admin/plugin-install.php'
            - '/wp-admin/theme-install.php'
            - '/wp-admin/user-new.php'
        condition: selection
      fields:
        - src_ip
        - url.query
        - http.request.method

  - question: What files were modified in the WordPress installation after the attack?
    context: Successful exploitation may result in malicious file uploads or theme modifications.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - 'wp-content'
            - 'wp-includes'
            - '.php'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessName

  # Type 6: Enterprise Correlation
  - question: Are other WordPress installations being targeted with similar plugin attacks?
    context: Identifies if this is part of a broader campaign against WordPress sites.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'WordPress'
            - 'Cross-Site Scripting'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - rule.name