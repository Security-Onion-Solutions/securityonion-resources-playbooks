name: ET WEB_SPECIFIC_APPS WordPress Skysa Official submit parameter Cross-Site Scripting Attempt
id: 22014656
description: |
  Detects Cross-Site Scripting attempts targeting WordPress Skysa Official plugin submit parameter.
  May trigger on legitimate JavaScript content but typically indicates XSS exploitation attempts.
type: detection
detection_id: 2014656
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete XSS payload injected into the submit parameter?
    context: Understanding the exact script injection reveals the attacker's intent and payload sophistication.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.body.content
        - rule.name

  - question: What JavaScript events or functions were used in the XSS attempt?
    context: Analyzing the script structure helps identify the attack vector and potential impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.referrer
        - http.response.status_code

  # Type 2: Triage Assessment
  - question: Is the WordPress Skysa Official plugin legitimately installed on this site?
    context: Legitimate plugin installations may have this endpoint, but script injection attempts are always malicious.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-content/plugins/skysa-official/"
            - "skysa.php"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Has this source IP attempted other WordPress plugin exploits recently?
    context: Multiple plugin exploitation attempts indicate systematic WordPress vulnerability scanning.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "WordPress"
            - "wp-content"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  # Type 3: Activity Context
  - question: What WordPress reconnaissance activity preceded this XSS attempt?
    context: XSS attempts often follow initial reconnaissance to identify vulnerable WordPress installations and plugins.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-admin/"
            - "/wp-content/"
            - "wp-login.php"
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What was the sequence of requests leading to this XSS exploitation attempt?
    context: Understanding the attack progression helps identify the attacker's methodology and other potential targets.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code
        - http.response.body.bytes

  # Type 4: Impact Assessment
  - question: Did the XSS attempt result in successful script execution or data exfiltration?
    context: Response patterns and subsequent requests indicate whether the XSS payload was successfully executed.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.request.method: "POST"
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.response.body.bytes

  - question: Are there signs of session hijacking or credential theft following the XSS attempt?
    context: Successful XSS can lead to session token theft or credential harvesting.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "wp-login.php"
            - "wp-admin"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method
        - http.response.status_code

  # Type 5: Forensic Deep-Dive
  - question: What specific browser exploitation techniques were used in the XSS payload?
    context: Advanced XSS payloads may include browser fingerprinting or exploit kit components.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.query|contains:
            - "document.cookie"
            - "window.location"
            - "eval("
        condition: selection
      fields:
        - url.query
        - http.request.referrer
        - http.response.body.bytes

  - question: Are there signs of persistent XSS or stored script injection?
    context: Stored XSS poses greater risk as it affects multiple users visiting the compromised page.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - "Cross-Site Scripting"
            - "XSS"
        condition: selection
      fields:
        - src_ip
        - rule.name
        - url.path

  # Type 6: Enterprise Correlation
  - question: Are other WordPress installations in the environment being targeted with similar XSS attempts?
    context: Coordinated XSS attacks across multiple WordPress sites indicate systematic vulnerability exploitation.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name: "ET WEB_SPECIFIC_APPS WordPress Skysa Official submit parameter Cross-Site Scripting Attempt"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - url.path