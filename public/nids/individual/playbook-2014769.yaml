name: ET WEB_SPECIFIC_APPS WordPress CataBlog plugin category Cross-Site Scripting Attempt
id: 22014769
description: |
  Detects XSS attempts targeting WordPress CataBlog plugin via category parameter in admin interface.
  May trigger on legitimate gallery category configurations with special characters.
type: detection
detection_id: 2014769
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload in the category parameter?
    context: Understanding the injection pattern reveals the attacker's technique and intended impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - http.request.method

  - question: What script or event handler was embedded in the category value?
    context: Identifying the specific JavaScript payload helps assess attack sophistication.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-admin/admin.php"
          url.query|contains: "page=catablog-gallery"
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  # Type 2: Triage Assessment
  - question: Is this WordPress site actively using the CataBlog plugin?
    context: Legitimate plugin usage may generate similar admin traffic during gallery management.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.query|contains: "page=catablog"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  - question: Does this source IP have legitimate WordPress admin access?
    context: Valid administrators may trigger similar patterns during plugin configuration.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-admin/"
          http.response.status_code: 200
        condition: selection
      fields:
        - url.path
        - user_agent.original
        - http.request.referrer

  # Type 3: Activity Context
  - question: What was the attack sequence leading to this XSS attempt?
    context: Understanding the reconnaissance phase reveals if this was targeted or automated scanning.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code
        - user_agent.original

  - question: How did the attacker discover the CataBlog plugin installation?
    context: Plugin discovery methods indicate reconnaissance sophistication and targeting.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-content/plugins/"
            - "/readme.txt"
            - "/wp-admin/admin.php"
        condition: selection
      fields:
        - url.full
        - http.response.status_code
        - http.response.body.bytes

  # Type 4: Impact Assessment
  - question: Did the XSS payload execute successfully in the admin interface?
    context: Server response indicates if the vulnerability was exploitable in the admin context.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.mime_type

  - question: Are there signs of admin session compromise following this attempt?
    context: Successful admin XSS may lead to elevated privilege abuse or configuration changes.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-admin/"
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code
        - user_agent.original

  # Type 5: Forensic Deep-Dive
  - question: What other WordPress admin vulnerabilities has this attacker attempted?
    context: Multiple admin-targeted attempts indicate systematic WordPress administrative targeting.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "WordPress"
            - "wp-admin"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - rule.category

  - question: Are there attempts to modify WordPress configuration or install backdoors?
    context: Post-XSS activity may include attempts to establish persistence through admin access.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-admin/plugin-install.php"
            - "/wp-admin/themes.php"
            - "/wp-admin/options-general.php"
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.request.body.content

  # Type 6: Enterprise Correlation
  - question: Are other WordPress admin interfaces being targeted across the organization?
    context: Coordinated admin-level attacks may indicate enterprise-wide WordPress compromise attempts.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "WordPress"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - rule.category