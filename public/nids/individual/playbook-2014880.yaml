name: ET WEB_SPECIFIC_APPS Wordpress wp-livephp plugin wp-live.php Cross-Site Scripting Attempt
id: 22014880
description: |
  Detects cross-site scripting attempts targeting WordPress LivePHP plugin via the s parameter.
  Legitimate plugin usage with user-generated content may trigger false positives.
type: detection
detection_id: 2014880
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload injected into the wp-live.php s parameter?
    context: Understanding the XSS payload reveals the attack vector and potential impact on users.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method
        - http.request.body.content

  - question: What JavaScript events or HTML tags were used in the XSS attempt?
    context: The specific XSS technique reveals the sophistication and intended execution method.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'wp-live.php'
        condition: selection
      fields:
        - url.query
        - http.request.referrer
        - user_agent.original

  # Type 2: Triage Assessment
  - question: Is this a legitimate user testing the LivePHP plugin functionality?
    context: Plugin testing or development work may involve script execution that triggers XSS detection.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'wp-content/plugins'
        condition: selection
      fields:
        - url.path
        - user_agent.original
        - count

  - question: Does this source have authorized access to WordPress administration?
    context: Legitimate administrators may access plugin files for configuration or testing.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'wp-admin'
        condition: selection
      fields:
        - http.response.status_code
        - url.path
        - count

  # Type 3: Activity Context
  - question: What WordPress enumeration or scanning preceded this XSS attempt?
    context: Attackers typically perform reconnaissance before targeting specific vulnerabilities.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'wp-'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - user_agent.original

  - question: Were there other plugin-specific attacks from this source?
    context: Multiple plugin attacks indicate systematic WordPress exploitation attempts.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'Wordpress'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path

  # Type 4: Impact Assessment
  - question: Did the XSS payload successfully execute based on server responses?
    context: HTTP response analysis reveals whether the malicious script was processed and returned.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'wp-live.php'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.query

  - question: Were there subsequent requests indicating successful XSS exploitation?
    context: Follow-up requests may indicate the XSS payload executed and performed additional actions.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.referrer
        - user_agent.original

  # Type 5: Forensic Deep-Dive
  - question: What sensitive data could be accessed through this XSS vulnerability?
    context: Understanding data exposure helps assess the full impact of successful exploitation.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'wp-admin'
            - 'wp-login'
        condition: selection
      fields:
        - url.full
        - http.request.body.content
        - http.response.status_code

  - question: Did the attacker attempt to steal authentication cookies or session data?
    context: XSS attacks often target session hijacking through cookie theft.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.headers
        - http.response.headers

  # Type 6: Enterprise Correlation
  - question: Are other WordPress sites showing similar LivePHP plugin attacks?
    context: Multiple site targeting suggests automated exploitation or coordinated campaign.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'wp-livephp'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - count

  - question: Is this part of a broader WordPress vulnerability scanning campaign?
    context: Related WordPress attacks indicate systematic exploitation across the organization.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'Wordpress'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - count