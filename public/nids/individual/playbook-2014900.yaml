name: ET WEB_SPECIFIC_APPS WordPress 2 Click Social Media Buttons plugin pinterest-url parameter Cross-Site Scripting Attempt
id: 22014900
description: |
  Detects cross-site scripting (XSS) attempts targeting the WordPress 2 Click Social Media Buttons plugin's pinterest-url parameter.
  May trigger on legitimate social media sharing functionality or security testing.
type: detection
detection_id: 2014900
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact XSS payload in the pinterest-url parameter?
    context: Understanding the payload reveals the attack method and potential impact on users.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query
        - http.request.method
  - question: Is this legitimate social media sharing activity?
    context: Normal users may interact with Pinterest sharing buttons generating similar URLs.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: '/wp-content/plugins/2-click-socialmedia-buttons/'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - user_agent.original
  - question: What other social media plugin interactions occurred from this source?
    context: Legitimate users typically engage with multiple social features, while attackers focus on exploitation.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: 'socialmedia'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - http.request.method
  - question: Did the XSS attempt succeed based on server response?
    context: HTTP response analysis reveals if the malicious payload was processed and potentially executed.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - http.response.mime_type
  - question: Are there signs of successful XSS exploitation in subsequent requests?
    context: Successful XSS may lead to session theft or malicious script execution in victim browsers.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.headers.cookie
        - http.request.headers.referer
  - question: What is the reputation and geographic location of the source IP?
    context: Malicious actors often operate from known bad IP ranges or unexpected geographic locations.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - src_ip
        - source.geo.country_name
        - destination.geo.country_name
  - question: Are there other XSS attempts against WordPress social media plugins?
    context: Attackers often target multiple social media plugin vulnerabilities in coordinated campaigns.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'Cross-Site Scripting'
          url.path|contains: 'social'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - url.path
  - question: What user-agent and request characteristics were used?
    context: Automated exploit tools often have distinctive fingerprints in headers and request patterns.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - user_agent.original
        - http.request.headers.accept
        - http.request.headers.accept_language
  - question: Are there similar attacks against other WordPress sites in the network?
    context: Mass exploitation campaigns often target multiple WordPress installations with the same vulnerability.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'WordPress'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path
  - question: What processes were running on the web server during this attack?
    context: Compromised servers may exhibit unusual process behavior or new network connections.
    range: +/-15m
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid