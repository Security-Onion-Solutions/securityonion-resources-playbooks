name: ET WEB_SPECIFIC_APPS WordPress church_admin Plugin Cross-Site Scripting Attempt
id: 22015496
description: |
  Detects XSS attempts targeting WordPress church_admin plugin via malicious JavaScript in the id parameter.
  May trigger on legitimate plugin usage with special characters in church member data or form validation.
type: detection
detection_id: 2015496
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact XSS payload targeting the church_admin plugin?
    context: The specific script injection reveals attack intent and potential impact on church management data.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.body.content
        - http.request.method

  - question: Is this legitimate church administration activity?
    context: Church staff may access member validation features with names containing special characters.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: 'church-admin'
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: What other church_admin plugin functions were accessed?
    context: Understanding normal plugin usage patterns helps distinguish attacks from legitimate administration.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: 'church-admin'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: What is the attack sequence leading to this XSS attempt?
    context: Analyzing request patterns reveals whether this is targeted exploitation or automated scanning.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - user_agent.original

  - question: Did the XSS payload execute successfully based on server response?
    context: Response characteristics indicate whether the malicious script was processed or blocked.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.bytes
        - http.response.body.content

  - question: Are there signs of successful XSS exploitation affecting church data?
    context: Successful XSS could compromise sensitive church member information or administrative access.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.headers
        - http.request.body.content

  - question: What sensitive church management data could be exposed?
    context: Understanding plugin functionality helps assess potential privacy and security impact.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - 'church-admin'
            - 'validate.php'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - src_ip

  - question: Are there indicators of automated WordPress plugin scanning?
    context: User agent patterns and request timing help identify vulnerability scanners versus targeted attacks.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/wp-content/plugins/'
        condition: selection
      fields:
        - user_agent.original
        - url.path
        - http.response.status_code

  - question: What other WordPress plugins were probed from this source?
    context: Comprehensive plugin scanning suggests systematic vulnerability assessment rather than targeted attack.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: '/wp-content/plugins/'
        condition: selection
      fields:
        - url.full
        - http.response.status_code

  - question: Are other WordPress sites experiencing similar church_admin attacks?
    context: Coordinated attacks against specific plugins indicate targeted campaign activity.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: 'church_admin'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: Is this part of a broader WordPress XSS attack campaign?
    context: Multiple XSS attempts across different plugins suggest systematic WordPress exploitation.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - 'WordPress'
            - 'Cross-Site Scripting'
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - rule.severity