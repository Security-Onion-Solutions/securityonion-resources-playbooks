name: ET WEB_SERVER .PHP being served from WP 1-flash-gallery Upload DIR (likely malicious)
id: 22015518
description: |
  Detects PHP files being accessed from WordPress 1-flash-gallery plugin upload directory.
  This typically indicates malicious file upload and potential webshell deployment.
  May trigger on legitimate plugin functionality if PHP files are intentionally stored in upload directories.
type: detection
detection_id: 2015518
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What specific PHP file was accessed in the flash gallery upload directory?
    context: Identifies the potentially malicious file and its naming pattern for IOC development.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.path
        - url.query
        - http.request.method

  - question: What parameters or commands were passed to the suspected PHP webshell?
    context: Reveals the attacker's intended actions and system commands being executed.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this a legitimate WordPress administrator accessing plugin files?
    context: Authorized WordPress administrators may legitimately access plugin directories for maintenance.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-admin/"
            - "/wp-login.php"
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Does this source IP have a history of legitimate WordPress activity?
    context: Established users may have legitimate reasons to access plugin directories.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-"
        condition: selection
      fields:
        - url.path
        - http.request.method
        - src_ip

  # Type 3: Activity Context
  - question: What file upload activity preceded this PHP file access?
    context: Recent uploads may indicate how the malicious PHP file was placed on the server.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.request.method: "POST"
          url.path|contains: "/wp-content/uploads/"
        condition: selection
      fields:
        - url.full
        - http.request.body.bytes
        - http.response.status_code

  - question: What WordPress vulnerability exploitation attempts occurred before this access?
    context: Initial compromise may have enabled the file upload that led to webshell deployment.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - "WordPress"
            - "WP"
        condition: selection
      fields:
        - rule.name
        - url.path

  # Type 4: Impact Assessment
  - question: Did the PHP file execution return successful responses indicating webshell functionality?
    context: Success responses suggest active webshell deployment and potential system compromise.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-content/uploads/fgallery/"
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes
        - url.full

  - question: What system commands or file operations were executed through the webshell?
    context: Identifies the scope of system compromise and attacker capabilities.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: ".php"
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - http.response.body.content

  # Type 5: Forensic Deep-Dive
  - question: What is the exact content and functionality of the suspected webshell?
    context: Understanding webshell capabilities helps assess compromise scope and attacker intentions.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.body.content
        - http.request.body.content

  - question: Are there signs of lateral movement or additional file drops from this webshell?
    context: Webshells often serve as initial access points for broader network compromise.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.request.method: "POST"
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.request.body.bytes

  # Type 6: Enterprise Correlation
  - question: Are other WordPress sites showing similar malicious PHP file access patterns?
    context: Coordinated attacks may target multiple WordPress installations simultaneously.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "PHP being served"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - src_ip

  - question: What other WordPress plugin vulnerabilities are being exploited enterprise-wide?
    context: Identifies broader WordPress security issues requiring immediate attention.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - "WordPress"
            - "WP"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - rule.name
        - dst_ip