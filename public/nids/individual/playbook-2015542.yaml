name: ET WEB_SPECIFIC_APPS Wordpress clickdesk-live-support-chat plugin cdwidgetid parameter Cross-Site Scripting Attempt
id: 22015542
description: |
  Detects cross-site scripting attempts targeting the WordPress Clickdesk Live Support Chat plugin.
  The vulnerability exists in the cdwidgetid parameter of the clickdesk.php file.
  May trigger on legitimate widget configuration or administrative activities involving the chat plugin.
type: detection
detection_id: 2015542
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the specific XSS payload targeting the cdwidgetid parameter?
    context: Understanding the payload reveals attack intent and helps assess exploitation success.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - url.query
        - http.request.method
        - http.request.body.content

  - question: What JavaScript events or functions were embedded in the XSS attempt?
    context: Specific JavaScript patterns indicate sophistication and intended impact of the attack.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  # Type 2: Triage Assessment
  - question: Is this legitimate WordPress administration of the Clickdesk plugin?
    context: Authorized administrators may legitimately configure chat widget parameters.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-admin/"
            - "/wp-login.php"
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Does this source have established WordPress administrative privileges?
    context: Regular WordPress administrators may have legitimate access to plugin configuration.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-admin/"
            - "/wp-content/plugins/"
        condition: selection
      fields:
        - url.path
        - http.request.method
        - src_ip

  # Type 3: Activity Context
  - question: What WordPress reconnaissance or vulnerability scanning preceded this XSS attempt?
    context: Systematic scanning may indicate automated exploitation of known WordPress vulnerabilities.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-"
            - "wordpress"
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What other WordPress plugin vulnerabilities were exploited in this session?
    context: Attackers often target multiple plugin vulnerabilities simultaneously.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - "WordPress"
            - "WP"
        condition: selection
      fields:
        - rule.name
        - url.path

  # Type 4: Impact Assessment
  - question: Did the XSS payload execute successfully based on server responses?
    context: Successful execution may lead to session hijacking or administrative compromise.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "clickdesk.php"
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.body.bytes

  - question: Are there signs of WordPress administrative session compromise following this attempt?
    context: Successful XSS may enable attackers to hijack administrator sessions.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-admin/"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  # Type 5: Forensic Deep-Dive
  - question: What WordPress version and Clickdesk plugin version are installed on the target?
    context: Version information helps determine vulnerability scope and required security updates.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - "/wp-"
            - "clickdesk"
        condition: selection
      fields:
        - http.response.headers
        - http.response.body.content

  - question: Are there signs of persistent XSS payload injection into WordPress database?
    context: Stored XSS poses ongoing risk to all WordPress users and visitors.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-"
          http.request.method: "GET"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.body.content

  - question: What WordPress configuration changes or malicious plugin installations followed this exploit?
    context: Successful compromise may lead to backdoor installation or site defacement.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "/wp-admin/"
          http.request.method: "POST"
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.body.bytes

  # Type 6: Enterprise Correlation
  - question: Are other WordPress installations experiencing similar Clickdesk plugin exploitation?
    context: Coordinated attacks may target the same vulnerability across multiple WordPress sites.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "clickdesk"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.path

  - question: What other WordPress plugin vulnerabilities are being exploited enterprise-wide?
    context: Identifies broader WordPress security issues requiring immediate patching across all sites.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - "WordPress"
            - "WP"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - rule.name
        - dst_ip