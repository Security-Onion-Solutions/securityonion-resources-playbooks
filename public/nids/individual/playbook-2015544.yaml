name: ET WEB_SPECIFIC_APPS phpProfiles topic_title parameter Cross-Site Scripting Attempt
id: 22015544
description: |
  Detects cross-site scripting attempts targeting phpProfiles application via the topic_title parameter.
  Legitimate usage would not contain script tags or event handlers in topic titles.
type: detection
detection_id: 2015544
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact XSS payload injected into the topic_title parameter?
    context: Understanding the payload reveals the attacker's intent and potential impact on users.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - url.full

  - question: What type of XSS attack vector was used - reflected, stored, or DOM-based?
    context: The attack vector determines persistence and scope of potential victim impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.method
        - url.path

  # Type 2: Triage Assessment
  - question: Is this a legitimate user posting content to the phpProfiles community forum?
    context: Normal forum usage might include HTML formatting that could trigger false positives.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: "community.php"
        condition: selection
      fields:
        - http.request.method
        - url.query

  - question: Are there established user sessions or authentication cookies for this source?
    context: Legitimate users would typically have valid session tokens when posting to forums.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.request.headers.cookie|contains: "session"
        condition: selection
      fields:
        - http.request.headers.cookie

  # Type 3: Activity Context
  - question: What other forum activities preceded this XSS attempt?
    context: Attack patterns often involve reconnaissance of forum structure and user behavior.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          url.path|contains: "community.php"
        condition: selection
      fields:
        - url.query
        - http.request.method

  - question: What user agent and browser characteristics were used for this request?
    context: Automated XSS tools often have distinctive user agent strings that help identify attacks.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - http.request.headers.accept

  # Type 4: Impact Assessment
  - question: Did the web application accept and process the malicious topic_title content?
    context: Successful XSS attacks require the application to accept and render the malicious content.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes

  - question: Are there subsequent requests that might indicate successful XSS execution?
    context: Successful XSS often leads to additional requests for malicious scripts or data exfiltration.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.referrer

  # Type 5: Forensic Deep-Dive
  - question: What specific JavaScript functions or event handlers were included in the payload?
    context: Analyzing the malicious code reveals the attacker's capabilities and intended actions.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content

  - question: Are there other XSS attempts from this source targeting different parameters or applications?
    context: Attackers often test multiple XSS vectors to find vulnerable input fields.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "Cross-Site Scripting"
        condition: selection
      fields:
        - rule.name
        - dst_ip

  # Type 6: Enterprise Correlation
  - question: Are other web applications in the environment being targeted with similar XSS attacks?
    context: Coordinated XSS campaigns often target multiple applications to maximize attack surface.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "Cross-Site Scripting"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name