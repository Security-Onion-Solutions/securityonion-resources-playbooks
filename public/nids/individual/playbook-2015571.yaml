name: ET WEB_SPECIFIC_APPS pragmaMx img_url parameter Cross-Site Scripting Attempt
id: 22015571
description: |
  Detects XSS attempts targeting pragmaMx CMS via the img_url parameter in image popup functionality.
  May trigger on legitimate image popup usage with unusual URL parameters.
type: detection
detection_id: 2015571
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact XSS payload in the img_url parameter?
    context: Understanding the payload reveals attack intent and potential for image-based XSS exploitation.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: Is this normal pragmaMx image popup functionality usage?
    context: Legitimate users regularly use image popup features for content viewing and sharing.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'img_popup.php'
        condition: selection
      fields:
        - src_ip
        - url.query
        - user_agent.original

  - question: What image URL was being referenced in the attack?
    context: The img_url parameter content may reveal the attacker's payload delivery method or target images.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.referrer
        - http.request.method

  - question: Are there signs of successful XSS execution in the popup window?
    context: Follow-up requests may indicate if the XSS payload executed in the image popup context.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.response.status_code
        - http.response.body.bytes

  - question: What other pragmaMx components were accessed by this source?
    context: Attackers may explore multiple pragmaMx modules after discovering XSS vulnerabilities.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'pragma'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Has this source attempted XSS on other CMS platforms?
    context: Systematic CMS targeting indicates broader web application attack campaign.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'Cross-Site Script'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.full

  - question: What user session context exists for this pragmaMx access?
    context: Session cookies and authentication state help determine if this was an authenticated attack.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.headers.cookie
        - http.request.headers.authorization
        - user_agent.original

  - question: Are there indicators of pragmaMx content manipulation or data extraction?
    context: Successful XSS may lead to attempts to modify CMS content or extract user data.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.response.body.bytes
        - url.query
        - http.request.method

  - question: What image files were accessed during this attack timeframe?
    context: Image-based XSS attacks may involve malicious image files or image upload attempts.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - '.jpg'
            - '.png'
            - '.gif'
            - '.bmp'
        condition: selection
      fields:
        - url.full
        - http.response.status_code
        - http.response.body.bytes

  - question: Are other pragmaMx installations in the environment being targeted?
    context: Organizations may run multiple pragmaMx instances that could be under coordinated attack.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'pragmaMx'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.full

  - question: What web reconnaissance preceded this pragmaMx attack?
    context: DNS queries and directory enumeration may reveal how the attacker discovered the CMS installation.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip