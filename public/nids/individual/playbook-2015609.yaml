name: ET WEB_SPECIFIC_APPS WordPress Advanced Text Widget plugin page parameter Cross-Site Script Attempt
id: 22015609
description: |
  Detects XSS attempts targeting WordPress Advanced Text Widget plugin via the page parameter.
  May trigger on legitimate plugin administration with unusual page parameter values.
type: detection
detection_id: 2015609
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact XSS payload in the page parameter?
    context: Understanding the payload reveals attack sophistication and potential impact on WordPress administration.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.full
        - url.query

  - question: Is this normal WordPress Advanced Text Widget plugin usage?
    context: Legitimate administrators regularly configure text widgets and plugin settings.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'advanced-text-widget'
        condition: selection
      fields:
        - src_ip
        - url.query
        - user_agent.original

  - question: What WordPress administrative context exists for this access?
    context: The page parameter and referrer indicate which WordPress admin section was being accessed.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - http.request.referrer
        - http.request.method

  - question: Are there signs of successful XSS execution in the WordPress admin?
    context: Follow-up requests may indicate if the XSS payload compromised the WordPress administration interface.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.response.status_code
        - http.response.body.bytes

  - question: What other WordPress plugins were accessed by this source?
    context: Attackers may systematically probe multiple WordPress plugins for vulnerabilities.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'wp-content/plugins'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: Has this source attempted XSS on other WordPress installations?
    context: Systematic WordPress targeting indicates broader CMS attack campaign.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'WordPress'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.full

  - question: What WordPress authentication context exists for this plugin access?
    context: Session cookies and authentication state help determine if this was an authenticated admin attack.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'wp-'
        condition: selection
      fields:
        - http.request.headers.cookie
        - http.request.headers.authorization
        - user_agent.original

  - question: Are there indicators of WordPress content manipulation or privilege escalation?
    context: Successful XSS in admin context may lead to content modification or user privilege changes.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'wp-admin'
        condition: selection
      fields:
        - http.response.body.bytes
        - url.query
        - http.request.method

  - question: What WordPress plugin enumeration occurred before this attack?
    context: Attackers often enumerate installed plugins before targeting specific vulnerabilities.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: 'wp-content/plugins'
        condition: selection
      fields:
        - url.path
        - http.response.status_code
        - user_agent.original

  - question: Are other WordPress sites in the environment being targeted?
    context: Organizations often host multiple WordPress installations that may be under coordinated attack.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: 'WordPress'
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - url.full

  - question: What WordPress reconnaissance preceded this plugin attack?
    context: DNS queries and WordPress-specific enumeration may reveal attack methodology.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip