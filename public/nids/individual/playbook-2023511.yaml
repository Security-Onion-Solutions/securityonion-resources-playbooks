name: ET EXPLOIT REDIS Attempted SSH Authorized Key Writing Attempt
id: 22023511
description: |
  Detects attempts to exploit Redis to write SSH authorized keys for unauthorized access.
  This technique allows attackers to establish persistent SSH access by manipulating Redis configuration.
  May trigger on legitimate Redis administration involving file operations.
type: detection
detection_id: 2023511
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete Redis command sequence used to configure SSH key writing?
    context: Understanding the exact command structure reveals the attacker's technique and target file path.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip
        - src_port
        - dst_port
        - payload_printable

  - question: What specific Redis configuration parameters were modified in this attack?
    context: The dbfilename and dir settings determine where the SSH key will be written on the target system.
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - src_bytes
        - dst_bytes

  # Type 2: Triage Assessment
  - question: Is this legitimate Redis database administration activity?
    context: Authorized Redis administrators may legitimately modify configuration settings for backup or maintenance.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - src_ip
        - connection_state
        - src_bytes
        - dst_bytes

  - question: Does this source IP have authorized access to Redis infrastructure?
    context: Redis should only be accessible from authorized management networks and applications.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 6379
        condition: selection
      fields:
        - dst_ip
        - connection_state
        - src_bytes
        - dst_bytes

  # Type 3: Activity Context
  - question: What Redis reconnaissance or scanning preceded this exploitation attempt?
    context: Attackers typically enumerate Redis instances and test authentication before attempting exploitation.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - dst_ip
        - connection_state
        - src_bytes
        - dst_bytes

  - question: What other database or service exploitation attempts originated from this source?
    context: Attackers often target multiple services once they gain network access or identify vulnerable systems.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 3306
            - 5432
            - 1433
            - 27017
            - 9200
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - proto
        - connection_state

  # Type 4: Impact Assessment
  - question: Was the SSH authorized_keys file successfully written to the target system?
    context: Successful exploitation would result in file creation enabling subsequent SSH access.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains: "authorized_keys"
        condition: selection
      fields:
        - TargetFilename
        - User
        - ProcessName
        - file.hash.md5

  - question: Are there subsequent SSH connection attempts from the attacking source?
    context: Successful SSH key installation would be followed by authentication attempts using the planted key.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 22
          proto: TCP
        condition: selection
      fields:
        - connection_state
        - src_bytes
        - dst_bytes

  # Type 5: Forensic Deep-Dive
  - question: What SSH public key was inserted into the Redis database for later extraction?
    context: The specific SSH key reveals attacker infrastructure and can be used for threat hunting across the environment.
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - src_bytes
        - dst_bytes
        - proto

  - question: What Redis authentication bypass or weak configuration enabled this attack?
    context: Understanding the security weakness helps identify other vulnerable Redis instances requiring remediation.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - src_ip
        - connection_state
        - src_bytes
        - dst_bytes

  - question: What persistence mechanisms were established beyond the SSH key installation?
    context: Sophisticated attackers may use multiple persistence methods to maintain access if one is discovered.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ProcessGuid

  # Type 6: Enterprise Correlation
  - question: Are other Redis instances in the environment vulnerable to similar SSH key injection attacks?
    context: Redis misconfigurations are often systemic, requiring enterprise-wide security assessment.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "REDIS"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: Is this attack part of a broader campaign targeting database services across the organization?
    context: Coordinated database attacks may indicate advanced persistent threat activity requiring comprehensive response.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category|contains: "exploit"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - rule.category