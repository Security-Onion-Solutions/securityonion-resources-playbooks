name: ET EXPLOIT REDIS Attempted SSH Key Upload
id: 22023512
description: |
  Detects attempts to upload SSH public keys through Redis SET commands for unauthorized access.
  This technique establishes persistent access by storing SSH keys in Redis for later file system extraction.
  May trigger on legitimate Redis operations involving SSH key management.
type: detection
detection_id: 2023512
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What is the complete SSH public key being uploaded through the Redis SET command?
    context: The SSH key reveals attacker infrastructure and can be used for threat hunting and attribution.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip
        - src_port
        - dst_port
        - payload_printable

  - question: What Redis key name is being used to store the SSH public key data?
    context: The key name pattern reveals attacker methodology and helps identify related malicious Redis operations.
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - src_bytes
        - dst_bytes

  # Type 2: Triage Assessment
  - question: Is this authorized SSH key management through Redis infrastructure?
    context: Some automated deployment systems may legitimately use Redis for SSH key distribution.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - src_ip
        - connection_state
        - src_bytes
        - dst_bytes

  - question: Does this source IP have legitimate access to Redis and SSH infrastructure?
    context: Authorized systems would have consistent access patterns and proper network segmentation.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 22
            - 6379
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection_state
        - src_bytes
        - dst_bytes

  # Type 3: Activity Context
  - question: What Redis enumeration or authentication testing preceded this SSH key upload?
    context: Attackers typically test Redis access and configuration before attempting key injection attacks.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - dst_ip
        - connection_state
        - src_bytes
        - dst_bytes

  - question: What other Redis commands were executed during this session?
    context: Understanding the complete command sequence reveals the full scope of the attack methodology.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - connection_state
        - src_bytes
        - dst_bytes

  # Type 4: Impact Assessment
  - question: Was the SSH key successfully stored in Redis and available for extraction?
    context: Successful key storage enables the next phase of the attack involving file system manipulation.
    range: +15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - connection_state
        - src_bytes
        - dst_bytes

  - question: Are there attempts to configure Redis for file system writing after key upload?
    context: The attack requires Redis configuration changes to write the key to the SSH authorized_keys file.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "REDIS"
        condition: selection
      fields:
        - rule.name
        - rule.category

  # Type 5: Forensic Deep-Dive
  - question: What SSH key fingerprint and algorithm type was used in this attack?
    context: Key characteristics help identify attacker tools and infrastructure across multiple incidents.
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - src_bytes
        - dst_bytes
        - proto

  - question: What Redis instance configuration allowed this unauthorized key upload?
    context: Identifying security weaknesses helps remediate other vulnerable Redis deployments.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - src_ip
        - connection_state
        - src_bytes
        - dst_bytes

  - question: What additional malicious payloads or tools were uploaded through Redis?
    context: Attackers may use Redis to store multiple attack components beyond SSH keys.
    range: +2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 6379
          proto: TCP
        condition: selection
      fields:
        - dst_ip
        - src_bytes
        - dst_bytes
        - connection_state

  # Type 6: Enterprise Correlation
  - question: Are other Redis instances in the environment targeted with similar SSH key injection attacks?
    context: Systematic targeting of Redis infrastructure indicates organized attack campaign requiring coordinated response.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - "REDIS"
            - "SSH"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: Is this SSH key being used for authentication attempts across multiple systems?
    context: Successful key injection may enable lateral movement requiring enterprise-wide SSH monitoring.
    range: +24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 22
          proto: TCP
        condition: selection
      fields:
        - dst_ip
        - connection_state
        - src_bytes
        - dst_bytes