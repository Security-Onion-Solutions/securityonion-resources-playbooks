name: ET SHELLCODE Linux/x86-64 - Polymorphic Flush IPTables Shellcode
id: 22024057
description: |
  Detects polymorphic shellcode designed to flush Linux iptables firewall rules.
  This shellcode is commonly used by attackers to disable firewall protections.
  May trigger on legitimate security tools or penetration testing frameworks using similar code patterns.
type: detection
detection_id: 2024057
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete shellcode payload detected in the network traffic?
    context: Understanding the exact shellcode reveals the specific iptables manipulation technique being employed.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload
        - payload_printable
        - alert.signature

  - question: What specific iptables commands does this shellcode execute?
    context: Identifying the exact firewall manipulation commands helps understand the attack's impact on system security.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload_printable
        - alert.metadata
        - flow.bytes_toserver

  # Type 2: Triage Assessment
  - question: Is this target system a Linux server that legitimately manages iptables rules?
    context: System administrators may use automated scripts that could contain similar binary patterns for firewall management.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - 'iptables'
            - '/sbin/iptables'
            - 'firewall'
        condition: selection
      fields:
        - User
        - Image
        - CommandLine

  - question: Are there authorized penetration testing activities that could generate this shellcode?
    context: Security testing tools may legitimately use shellcode patterns for firewall evasion testing.
    range: -1d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_port
        - bytes_toserver
        - proto

  # Type 3: Activity Context
  - question: What network service or application received this shellcode payload?
    context: Understanding the target service helps identify the attack vector and potential vulnerability being exploited.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - dst_port
        - proto
        - app_proto
        - bytes_toserver

  - question: What preceded this shellcode delivery in the network session?
    context: Understanding the attack chain helps identify the initial compromise vector and exploitation method.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - alert.signature
        - alert.category
        - dst_port

  # Type 4: Impact Assessment
  - question: Has the iptables firewall been successfully compromised on the target system?
    context: Determining if the shellcode executed successfully is critical for assessing security impact.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          CommandLine|contains:
            - 'iptables -F'
            - 'iptables --flush'
            - '/sbin/iptables'
        condition: selection
      fields:
        - CommandLine
        - User
        - Image
        - ProcessGuid

  - question: Are there signs of follow-up exploitation after firewall manipulation?
    context: Disabling firewall rules typically precedes additional attack activities or lateral movement.
    range: +30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_port
        - bytes_toserver
        - proto

  # Type 5: Forensic Deep-Dive
  - question: What exploitation framework or tool generated this polymorphic shellcode?
    context: Identifying the shellcode source helps understand attacker capabilities and predict additional attack vectors.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains: 'shellcode'
        condition: selection
      fields:
        - alert.signature
        - dst_ip
        - dst_port

  - question: Are there indicators of privilege escalation following the shellcode execution?
    context: Firewall manipulation often requires or leads to elevated privileges for continued system compromise.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          User|contains:
            - 'root'
            - 'sudo'
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage

  - question: What persistence mechanisms were established after firewall compromise?
    context: Attackers typically establish persistence after successfully disabling security controls.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - '/etc/crontab'
            - '/etc/rc.local'
            - '.bashrc'
            - '/etc/systemd'
        condition: selection
      fields:
        - TargetFilename
        - User
        - ProcessName

  # Type 6: Enterprise Correlation
  - question: Are other Linux systems showing similar shellcode-based firewall attacks?
    context: Coordinated shellcode deployment indicates a broader campaign targeting Linux infrastructure.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          alert.signature|contains: 'IPTables Shellcode'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - alert.signature

  - question: Is this part of a multi-stage attack campaign targeting the organization?
    context: Understanding campaign scope helps prioritize response and identify additional compromised systems.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains: 'shellcode'
        condition: selection
      fields:
        - dst_ip
        - alert.signature
        - alert.severity