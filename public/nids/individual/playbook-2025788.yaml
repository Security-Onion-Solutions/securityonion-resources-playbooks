name: ET EXPLOIT Oracle Weblogic Server Deserialization Remote Command Execution
id: 22025788
description: |
  Detects Java deserialization attacks targeting Oracle WebLogic Server via CVE-2018-2628.
  May trigger on legitimate RMI traffic but specific class patterns indicate exploitation attempts.
type: detection
detection_id: 2025788
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete Java RMI deserialization payload sent to WebLogic?
    context: Analyzing the serialized Java objects reveals the exploitation technique and payload.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload
        - payload_printable
        - packet_info.length

  - question: Which specific Java classes were involved in the deserialization attack?
    context: The combination of Registry, Proxy, and RemoteObjectInvocationHandler classes indicates RMI exploitation.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - alert.signature
        - src_ip
        - dst_ip
        - dst_port

  # Type 2: Triage Assessment
  - question: Is this WebLogic server configured to accept RMI connections on this port?
    context: Legitimate WebLogic RMI traffic helps distinguish between authorized access and exploitation.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - src_ip
        - bytes_toserver
        - bytes_toclient

  - question: Are there legitimate administrative connections to this WebLogic instance?
    context: Normal WebLogic administration patterns help identify if this is an unauthorized access attempt.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|contains:
            - 7001
            - 7002
            - 9002
        condition: selection
      fields:
        - src_ip
        - dst_port
        - flow.start

  # Type 3: Activity Context
  - question: What reconnaissance activity preceded this deserialization attack?
    context: Attackers often enumerate WebLogic services before attempting exploitation.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - proto
        - flow.state

  - question: What was the TCP session establishment pattern for this attack?
    context: Understanding the connection sequence helps identify the attack methodology.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - flow.start
        - bytes_toserver
        - bytes_toclient
        - flow.state

  # Type 4: Impact Assessment
  - question: Did the WebLogic server process exhibit signs of compromise after the attack?
    context: Successful deserialization attacks may result in code execution within the WebLogic JVM.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - 'java'
            - 'weblogic'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - User

  - question: Were any suspicious child processes spawned from the WebLogic JVM?
    context: Code execution through deserialization often results in spawning system commands.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          ParentImage|contains:
            - 'java'
          Image|contains:
            - 'cmd.exe'
            - 'sh'
            - 'bash'
            - 'powershell.exe'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid

  # Type 5: Forensic Deep-Dive
  - question: What WebLogic application logs show deserialization or RMI errors?
    context: WebLogic logs may contain evidence of deserialization attempts and exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - 'weblogic'
            - '.log'
            - 'server'
        condition: selection
      fields:
        - TargetFilename
        - ProcessGuid
        - file.hash.md5

  - question: What outbound network connections were made from the WebLogic server after the attack?
    context: Post-exploitation activity often includes downloading additional payloads or establishing C2.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - bytes_toserver
        - bytes_toclient

  - question: Were any Java class files or JAR files modified or created on the system?
    context: Attackers may deploy additional Java payloads through deserialization exploits.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - '.class'
            - '.jar'
            - '.war'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessGuid

  # Type 6: Enterprise Correlation
  - question: Are other WebLogic servers being targeted with similar deserialization attacks?
    context: CVE-2018-2628 exploitation often targets multiple WebLogic instances in the environment.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          alert.signature_id: 2025788
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port

  - question: Is this part of a broader Java application exploitation campaign?
    context: Deserialization attacks often target multiple Java-based enterprise applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains:
            - 'Java'
            - 'Deserialization'
            - 'WebLogic'
        condition: selection
      fields:
        - alert.signature
        - dst_ip
        - alert.severity