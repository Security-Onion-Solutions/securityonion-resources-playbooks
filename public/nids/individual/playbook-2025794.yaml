name: ET EXPLOIT xdebug OS Command Execution
id: 22025794
description: |
  Detects remote code execution attempts against PHP xdebug extension on port 9000.
  May trigger on legitimate xdebug traffic but base64 encoded eval commands indicate exploitation.
type: detection
detection_id: 2025794
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete xdebug command payload sent to the PHP server?
    context: Analyzing the eval command and base64 content reveals the exploitation technique and payload.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload
        - payload_printable
        - packet_info.length

  - question: What PHP code was embedded in the base64 encoded xdebug payload?
    context: Decoding the base64 content shows the exact PHP commands being executed remotely.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - alert.signature
        - src_ip
        - dst_ip
        - dst_port

  # Type 2: Triage Assessment
  - question: Is xdebug legitimately configured on this PHP server?
    context: Legitimate xdebug usage helps distinguish between authorized debugging and exploitation.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 9000
        condition: selection
      fields:
        - src_ip
        - bytes_toserver
        - bytes_toclient

  - question: Are there normal development activities from this client to the xdebug port?
    context: Regular debugging sessions help identify if this is an authorized development connection.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 9000
        condition: selection
      fields:
        - community_id
        - flow.start
        - bytes_toserver

  # Type 3: Activity Context
  - question: What network scanning preceded this xdebug exploitation attempt?
    context: Attackers often scan for exposed xdebug ports before attempting exploitation.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - proto
        - flow.state

  - question: What was the TCP session pattern for this xdebug attack?
    context: Understanding the connection sequence helps identify the attack methodology.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - flow.start
        - bytes_toserver
        - bytes_toclient
        - flow.state

  # Type 4: Impact Assessment
  - question: Did the PHP process execute any suspicious commands after the xdebug exploit?
    context: Successful xdebug exploitation results in PHP code execution on the target server.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - 'php'
            - 'apache'
            - 'nginx'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - User

  - question: Were any system commands spawned from the PHP web server process?
    context: The file_put_contents function suggests file creation or system command execution.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          ParentImage|contains:
            - 'php'
            - 'apache'
          Image|contains:
            - 'sh'
            - 'bash'
            - 'cmd.exe'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid

  # Type 5: Forensic Deep-Dive
  - question: What PHP or web server logs show xdebug activity or errors?
    context: Web server logs may contain evidence of xdebug exploitation and PHP execution.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - 'php'
            - 'apache'
            - 'nginx'
            - '.log'
        condition: selection
      fields:
        - TargetFilename
        - ProcessGuid
        - file.hash.md5

  - question: What files were created or modified through the xdebug exploitation?
    context: The payload suggests file operations which may create backdoors or download additional tools.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - '.php'
            - '/tmp/'
            - '/var/www/'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessGuid

  - question: What outbound network connections were made from the web server after exploitation?
    context: Post-exploitation activity often includes downloading payloads or establishing command and control.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - bytes_toserver
        - bytes_toclient

  # Type 6: Enterprise Correlation
  - question: Are other PHP servers with xdebug being targeted with similar exploits?
    context: xdebug exploitation often targets multiple development or staging PHP environments.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          alert.signature_id: 2025794
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port

  - question: Is this part of a broader web application exploitation campaign?
    context: xdebug attacks may be part of larger campaigns targeting PHP web applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains:
            - 'PHP'
            - 'Web'
            - 'xdebug'
        condition: selection
      fields:
        - alert.signature
        - dst_ip
        - alert.severity