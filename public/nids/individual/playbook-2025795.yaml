name: ET EXPLOIT Generic system shell command to php base64 encoded Remote Code Execution 1
id: 22025795
description: |
  Detects base64 encoded system shell commands being passed to PHP for execution.
  The pattern "c3lzdGVtKCIgcGhw" decodes to system commands targeting PHP execution.
  May trigger on legitimate applications that execute system commands through PHP interfaces.
type: detection
detection_id: 2025795
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What is the complete base64 encoded system command being passed to PHP?
    context: Decoding reveals the exact system commands being executed through PHP's system function.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.request.method
        - url.full
        - rule.name

  - question: What specific system commands are revealed after base64 decoding?
    context: Understanding the decoded commands reveals the attacker's intent and system impact.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.request.headers
        - url.path

  # Type 2: Triage Assessment
  - question: Is this PHP application authorized to execute system commands?
    context: Some legitimate applications use PHP's system function for administrative tasks.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - .php
            - /admin
            - /management
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: Does the source have legitimate administrative privileges on this system?
    context: Authorized administrators may use encoded commands for secure system management.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port|contains:
            - 22
            - 3389
            - 443
        condition: selection
      fields:
        - dst_port
        - protocol
        - bytes_toserver

  # Type 3: Activity Context
  - question: What PHP vulnerability or weakness enabled this system command injection?
    context: Understanding the attack vector reveals the security flaw being exploited.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.request.body.content

  - question: What reconnaissance activities preceded this system command execution?
    context: Attackers often probe for PHP applications vulnerable to command injection before exploitation.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.path
        - http.request.method
        - http.response.status_code

  - question: What parameters or input fields were used to deliver the encoded command?
    context: Identifying the injection point helps understand the vulnerability and remediation needs.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.query
        - http.request.body.content
        - http.request.headers

  # Type 4: Impact Assessment
  - question: Did the PHP system function successfully execute the encoded commands?
    context: Server responses indicate whether the malicious system commands were processed and executed.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - bytes_toclient

  - question: Are there signs of system command execution on the target server?
    context: Process creation events confirm whether the system commands were actually executed.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - cmd
            - bash
            - sh
            - powershell
        condition: selection
      fields:
        - User
        - CommandLine
        - ProcessGuid

  # Type 5: Forensic Deep-Dive
  - question: What additional tools or payloads were deployed through the system command execution?
    context: Successful command injection often leads to downloading additional attack tools.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - protocol
        - bytes_toserver

  - question: What files were created or modified following the system command execution?
    context: File system changes indicate successful command execution and potential persistence.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessGuid

  # Type 6: Enterprise Correlation
  - question: Are other PHP applications experiencing similar system command injection attacks?
    context: Coordinated attacks often target multiple PHP applications using encoded system commands.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "system shell command to php"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name