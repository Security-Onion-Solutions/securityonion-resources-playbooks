name: ET EXPLOIT file_put_contents php base64 encoded Remote Code Execution 1
id: 22025801
description: |
  Detects base64 encoded PHP file_put_contents() function calls attempting remote code execution.
  The pattern "ZmlsZV9wdXRfY29udGVudH" decodes to "file_put_content". May trigger on legitimate base64 encoded content containing similar patterns.
type: detection
detection_id: 2025801
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What is the complete base64 encoded payload containing the file_put_contents() function call?
    context: Decoding the full payload reveals the exact file being created and its malicious content.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.request.headers
        - payload_printable

  - question: What HTTP method and URI path was used to deliver this file creation payload?
    context: Understanding delivery mechanism helps identify vulnerable endpoints and file upload capabilities.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - url.path
        - http.request.body.content

  # Type 2: Triage Assessment
  - question: Is this web application known to legitimately use file_put_contents() for file operations?
    context: Some PHP applications legitimately use file_put_contents() for logging, caching, or data storage.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - src_ip
        - http.request.method
        - url.path

  - question: Does the source IP have a history of legitimate file upload or content management access?
    context: Known administrators or content managers may use encoded file operations for legitimate purposes.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - bytes_toserver
        - bytes_toclient

  # Type 3: Activity Context
  - question: What other HTTP requests preceded this file creation attempt?
    context: Understanding the attack sequence reveals reconnaissance and exploitation methodology.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.response.status_code
        - http.request.headers

  - question: Were there any file system activities following this exploitation attempt?
    context: Successful file_put_contents() execution would result in file creation on the target system.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.mime_type
        - ProcessName

  # Type 4: Impact Assessment
  - question: Did the web server process create any new PHP or executable files after this request?
    context: Successful exploitation often results in web shell deployment or backdoor installation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - '.php'
            - '.jsp'
            - '.aspx'
            - '.exe'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessName
        - User

  - question: Were any suspicious processes executed after the file creation attempt?
    context: File creation attacks may execute uploaded payloads or install persistent access mechanisms.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User

  # Type 5: Forensic Deep-Dive
  - question: What specific file path and content are being written by the file_put_contents() function?
    context: Detailed payload analysis reveals the target file location and malicious content being deployed.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "file_put_contents"
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - payload_printable
        - http.request.body.content
        - alert.signature

  - question: Are there indicators of web shell deployment or backdoor functionality in the created files?
    context: File creation attacks often deploy persistent access mechanisms with command execution capabilities.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - 'shell'
            - 'backdoor'
            - 'cmd'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessName
        - file.mime_type

  # Type 6: Enterprise Correlation
  - question: Are other web servers receiving similar file_put_contents() exploitation attempts?
    context: Coordinated attacks often target multiple systems simultaneously using automated tools.
    range: -1h/+1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "file_put_contents"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - alert.signature

  - question: Is this part of a broader campaign targeting PHP file upload vulnerabilities?
    context: Understanding campaign scope helps prioritize response and identify additional compromised systems.
    range: -2h/+2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.request.method: POST
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.response.status_code