name: ET EXPLOIT file_put_contents php base64 encoded Remote Code Execution 3
id: 22025803
description: |
  Detects another variant of base64 encoded PHP file_put_contents function in HTTP traffic, indicating potential remote code execution attempts.
  May trigger on legitimate PHP applications that use base64 encoding for file operations or data transmission.
type: detection
detection_id: 2025803
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing this specific base64 encoded file_put_contents variant?
    context: Analyzing the full request reveals the attack vector and intended file operations.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.request.method
        - url.full
        - http.request.headers

  - question: What does this specific base64 payload decode to and how does it differ from other variants?
    context: Understanding payload variations helps identify attack sophistication and evasion techniques.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.path
        - http.request.method

  - question: Is this part of documented PHP application functionality for this web server?
    context: Legitimate PHP applications may use various encoding methods for file operations.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.request.method: POST
        condition: selection
      fields:
        - src_ip
        - url.path
        - user_agent.original

  - question: What sequence of requests preceded this file_put_contents attempt?
    context: Understanding the attack chain helps identify reconnaissance and exploitation phases.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: What was the server's response to this specific exploitation attempt?
    context: Response analysis indicates exploitation success and potential server compromise.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.body.bytes

  - question: Has this source IP used multiple file_put_contents variants in attacks?
    context: Multiple variants suggest sophisticated attacker with evasion capabilities.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: file_put_contents
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - event.count

  - question: What system processes were executed following this file operation attempt?
    context: Successful exploitation typically results in command execution or malicious process spawning.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - process.name
        - process.command_line
        - process.parent.name
        - user.name

  - question: Were any suspicious files created on the web server after this request?
    context: file_put_contents attacks aim to create malicious files for persistence or further exploitation.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          event.action: created
        condition: selection
      fields:
        - file.path
        - file.name
        - file.hash.md5
        - file.size

  - question: Are there indicators of web shell or backdoor deployment following this attack?
    context: Successful file_put_contents exploitation often leads to persistent access mechanism installation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.extension:
            - php
            - jsp
            - asp
            - aspx
        condition: selection
      fields:
        - file.path
        - file.name
        - file.size
        - process.name

  - question: Which other web applications in the environment have been targeted with similar attacks?
    context: Identifies scope of web application exploitation campaign across the infrastructure.
    range: -2h/+2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: file_put_contents
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - event.severity

  - question: Is this attack coordinated with other exploitation attempts from the same source?
    context: Reveals if this is part of a broader multi-vector attack campaign.
    range: -4h/+1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: exploit
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - event.count