name: ET EXPLOIT bin bash base64 encoded Remote Code Execution 2
id: 22025805
description: |
  Detects another variant of base64 encoded /bin/bash references in HTTP traffic, indicating potential remote command execution attempts.
  May trigger on legitimate system administration tools or applications that reference shell paths in encoded data.
type: detection
detection_id: 2025805
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing this specific base64 encoded bash variant?
    context: Analyzing the full request reveals the command injection vector and encoding technique used.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.request.method
        - url.full
        - http.request.headers

  - question: What does this specific base64 variant decode to and how does it differ from other bash injection attempts?
    context: Understanding encoding variations helps identify attacker sophistication and evasion techniques.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.path
        - http.request.method

  - question: Is this part of authorized system administration for this web application?
    context: Legitimate applications may use various encoding methods for system integration tasks.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.request.method: POST
        condition: selection
      fields:
        - src_ip
        - url.path
        - user_agent.original

  - question: What reconnaissance activities preceded this bash injection attempt?
    context: Understanding the attack progression helps identify how the vulnerability was discovered.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: What was the application's response to this command injection variant?
    context: Response analysis indicates exploitation success and potential command output leakage.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.body.bytes

  - question: Has this source IP used multiple bash injection encoding variants?
    context: Multiple encoding variants suggest sophisticated attacker with advanced evasion capabilities.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: bash
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - event.count

  - question: What system commands were executed following this injection attempt?
    context: Successful command injection leads to shell execution and potential system compromise.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - process.name
        - process.command_line
        - process.parent.name
        - user.name

  - question: Were any outbound network connections established from the compromised system?
    context: Command injection often results in reverse shells or data exfiltration attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - network.bytes

  - question: Are there indicators of persistent access mechanism deployment?
    context: Successful shell access often leads to backdoor installation or persistence establishment.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          event.action: created
        condition: selection
      fields:
        - file.path
        - file.name
        - file.hash.md5
        - process.name

  - question: Which other web applications have been targeted with similar bash injection variants?
    context: Identifies scope of command injection campaign and vulnerable applications across infrastructure.
    range: -4h/+1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: bash
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - event.severity

  - question: Is this attack part of a coordinated multi-vector exploitation campaign?
    context: Reveals if bash injection is combined with other attack techniques from the same source.
    range: -6h/+1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: exploit
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - event.count