name: ET EXPLOIT php script base64 encoded Remote Code Execution 1
id: 22025807
description: |
  Detects base64 encoded PHP script tags in HTTP traffic, indicating potential remote code execution attempts via PHP injection.
  May trigger on legitimate PHP development environments or applications that transmit encoded PHP code for processing.
type: detection
detection_id: 2025807
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the base64 encoded PHP script tags?
    context: Analyzing the full request reveals the PHP injection vector and intended code execution.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.request.method
        - url.full
        - http.request.headers

  - question: What does the base64 encoded PHP payload decode to and what functionality does it implement?
    context: Decoding reveals the actual PHP code being injected and its malicious capabilities.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.body.content
        - url.path
        - http.request.method

  - question: Is this normal PHP development activity for this web application?
    context: Legitimate PHP applications may transmit encoded PHP code for dynamic execution or templating.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.request.method: POST
        condition: selection
      fields:
        - src_ip
        - url.path
        - user_agent.original

  - question: What vulnerability assessment or exploitation attempts preceded this PHP injection?
    context: Understanding the attack sequence helps identify how the PHP injection point was discovered.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: What was the PHP application's response to this code injection attempt?
    context: Response analysis indicates if the PHP code was executed and what output was generated.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.body.bytes

  - question: Has this source IP attempted other PHP injection or web shell deployment techniques?
    context: Multiple PHP exploitation attempts suggest systematic web application penetration testing.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - php
            - script
            - injection
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - event.count

  - question: What PHP processes or web server activities occurred following this injection attempt?
    context: Successful PHP injection results in code execution within the web server context.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          process.name|contains:
            - php
            - apache
            - nginx
            - httpd
        condition: selection
      fields:
        - process.name
        - process.command_line
        - process.parent.name
        - user.name

  - question: Were any suspicious files created on the web server after this PHP injection?
    context: PHP injection attacks often result in web shell creation or malicious file deployment.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          event.action: created
          file.extension: php
        condition: selection
      fields:
        - file.path
        - file.name
        - file.hash.md5
        - file.size

  - question: Are there indicators of web shell deployment or persistent PHP backdoor installation?
    context: Successful PHP injection often leads to persistent access mechanism establishment.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.extension: php
          file.size|lt: 10000
        condition: selection
      fields:
        - file.path
        - file.name
        - file.hash.md5
        - process.name

  - question: What other PHP applications in the environment have been targeted with similar injection attacks?
    context: Identifies scope of PHP injection campaign and vulnerable applications across infrastructure.
    range: -4h/+1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: php
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - event.severity

  - question: Is this PHP injection part of a broader web application exploitation campaign?
    context: Reveals if PHP injection is combined with other web attack techniques from the same source.
    range: -6h/+1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: exploit
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - event.count