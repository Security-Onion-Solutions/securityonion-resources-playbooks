name: ET EXPLOIT php script base64 encoded Remote Code Execution 3
id: 22025809
description: |
  Detects base64 encoded PHP script execution in HTTP traffic targeting web servers.
  The pattern "vKjw/cGhwI" decodes to PHP script references indicating potential remote code execution.
  May trigger on legitimate applications that encode PHP scripts for dynamic execution.
type: detection
detection_id: 2025809
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What is the complete base64 encoded PHP payload detected in the traffic?
    context: Decoding the full payload reveals the exact PHP script structure and malicious intent.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.request.method
        - url.full
        - rule.name

  - question: What PHP functions or commands are contained within the decoded script?
    context: Analyzing decoded PHP reveals specific functions like eval, exec, or system used for code execution.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.request.body.content
        - http.request.headers
        - url.path

  # Type 2: Triage Assessment
  - question: Is this web application known to legitimately process base64 encoded PHP scripts?
    context: Some content management systems and frameworks may encode PHP for dynamic execution.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains:
            - .php
            - /admin
            - /wp-admin
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.request.method

  - question: Does the timing align with normal application maintenance or updates?
    context: Legitimate PHP script execution often occurs during scheduled maintenance windows.
    range: -1d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          http.request.method: POST
        condition: selection
      fields:
        - src_ip
        - url.path
        - http.response.status_code

  # Type 3: Activity Context
  - question: What vulnerability or attack vector enabled this PHP script injection?
    context: Understanding the initial compromise method reveals the attack chain and entry point.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.request.body.content

  - question: What specific PHP application or framework is being targeted?
    context: Identifying the target application helps determine specific vulnerabilities being exploited.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - url.path
        - http.request.headers
        - http.response.headers

  # Type 4: Impact Assessment
  - question: Did the PHP script execute successfully based on server responses?
    context: HTTP response patterns and status codes indicate whether the malicious PHP payload was processed.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - bytes_toclient

  - question: Are there signs of PHP process execution or web shell deployment?
    context: Successful PHP injection often results in web shell creation or additional script execution.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - php
            - apache
            - nginx
        condition: selection
      fields:
        - User
        - CommandLine
        - ProcessGuid

  # Type 5: Forensic Deep-Dive
  - question: What additional PHP files or web shells were created after the initial injection?
    context: Attackers often create persistent web shells following successful PHP code execution.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - .php
            - .phtml
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessGuid

  - question: What network connections were initiated from the compromised web server?
    context: Outbound connections may indicate data exfiltration or command and control communication.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - protocol
        - bytes_toserver

  # Type 6: Enterprise Correlation
  - question: Are other web applications experiencing similar PHP-based attacks?
    context: Coordinated campaigns often target multiple PHP applications using similar encoded payloads.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "php script base64 encoded"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name