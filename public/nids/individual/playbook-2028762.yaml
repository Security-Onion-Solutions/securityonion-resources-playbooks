name: ET JA3 Hash - [Abuse.ch] Possible Trickbot
id: 22028762
description: |
  Detects TLS connections using JA3 fingerprint associated with Trickbot malware.
  May trigger on legitimate applications sharing the same TLS client configuration.
type: detection
detection_id: 2028762
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What is the complete TLS handshake fingerprint for this connection?
    context: JA3 hash analysis reveals the exact TLS client configuration used by potential Trickbot.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - tls.ja3
        - tls.ja3_hash
        - tls.server.certificate.subject
        - tls.server.certificate.issuer

  - question: Is this TLS fingerprint commonly used by legitimate applications on this host?
    context: Some legitimate software may share TLS configurations with malware, creating false positives.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          tls.ja3_hash: "e62a5f4d538cbf169c2af71bec2399b4"
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - tls.server.certificate.subject

  - question: What process initiated this TLS connection?
    context: Identifying the source process helps distinguish between legitimate software and malware.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - process.name
        - process.pid
        - process.executable

  - question: Does this connection timing align with normal business operations?
    context: Trickbot often operates outside business hours to avoid detection.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_port
        - dst_port
        - network.bytes_sent
        - network.bytes_received

  - question: What triggered the establishment of this TLS connection?
    context: Understanding the connection trigger helps identify if this is user-initiated or automated malware behavior.
    range: -10m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - process.name
        - process.command_line
        - process.parent.name
        - user.name

  - question: What data volume was transferred over this connection?
    context: Trickbot typically transfers configuration files, stolen credentials, or additional payloads.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - network.bytes_sent
        - network.bytes_received
        - network.packets_sent
        - network.packets_received

  - question: Has this host made connections to known Trickbot command and control servers?
    context: Trickbot uses multiple C2 servers for redundancy and persistence.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 443
            - 449
            - 8080
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.bytes_sent

  - question: Are there signs of credential theft or banking trojan activity?
    context: Trickbot is primarily a banking trojan that steals credentials and financial information.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          process.name|contains:
            - "browser"
            - "chrome"
            - "firefox"
            - "edge"
        condition: selection
      fields:
        - process.command_line
        - process.parent.name
        - user.name

  - question: What files were created or modified around the time of this connection?
    context: Trickbot drops configuration files, modules, and stolen data to disk.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          file.extension|contains:
            - "exe"
            - "dll"
            - "dat"
            - "cfg"
        condition: selection
      fields:
        - file.name
        - file.path
        - file.hash.md5
        - process.name

  - question: Are other hosts in the network showing similar JA3 fingerprints?
    context: Trickbot spreads laterally through networks, creating similar TLS patterns across multiple hosts.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          tls.ja3_hash: "e62a5f4d538cbf169c2af71bec2399b4"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - tls.server.certificate.subject

  - question: Is there evidence of lateral movement or network reconnaissance?
    context: Trickbot performs network scanning and attempts to spread to other systems.
    range: +4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 135
            - 139
            - 445
            - 3389
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol