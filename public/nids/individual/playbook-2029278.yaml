name: ET MALWARE Observed Certificate Containing Possible Base64 Encoded Powershell Inbound
id: 22029278
description: |
  Detects SSL certificates containing base64 encoded PowerShell commands.
  Legitimate certificates should never contain PowerShell payloads, indicating malicious activity.
type: detection
detection_id: 2029278
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What PowerShell commands are embedded in the certificate?
    context: Decoding the base64 content reveals the specific PowerShell payload and intent.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - file.data
        - http.response.body.content
        - tls.server.certificate.raw

  - question: What is the complete certificate structure and issuer information?
    context: Understanding certificate details helps identify the delivery infrastructure.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - tls.server.certificate.issuer
        - tls.server.certificate.subject
        - tls.server.certificate.serial_number

  # Type 2: Triage Assessment
  - question: Is this certificate from a legitimate PowerShell-related service?
    context: Verifying if the source could legitimately contain PowerShell content.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - tls.server.certificate.issuer
        - tls.server.certificate.subject
        - dst_port

  - question: Does this system normally receive PowerShell-related certificates?
    context: Establishing baseline behavior for this host and destination.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "PowerShell"
        condition: selection
      fields:
        - rule.name
        - dst_ip

  # Type 3: Activity Context
  - question: What HTTP requests triggered this certificate delivery?
    context: Understanding the request sequence reveals how the malicious certificate was obtained.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - http.request.method
        - url.full
        - http.request.headers
        - user_agent.original

  - question: What network activity surrounded this certificate exchange?
    context: Identifying related connections shows the complete attack chain.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - protocol
        - bytes_sent
        - bytes_received

  # Type 4: Impact Assessment
  - question: Did PowerShell execute on the affected system after certificate receipt?
    context: Determining if the embedded PowerShell payload was extracted and executed.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          Image|contains: "powershell"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - ParentImage

  - question: Were any suspicious files or registry changes made post-certificate?
    context: Checking for persistence mechanisms or payload drops from PowerShell execution.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.extension

  # Type 5: Forensic Deep-Dive
  - question: What PowerShell obfuscation techniques are present in the payload?
    context: Analyzing obfuscation methods helps identify the malware family and sophistication.
    range: -1d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - "PowerShell"
            - "Base64"
            - "Certificate"
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip

  - question: Are there indicators of PowerShell-based persistence or lateral movement?
    context: Identifying advanced PowerShell techniques reveals threat actor capabilities.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          CommandLine|contains:
            - "-EncodedCommand"
            - "-WindowStyle Hidden"
            - "IEX"
            - "Invoke-Expression"
        condition: selection
      fields:
        - CommandLine
        - ProcessGuid
        - ParentProcessGuid

  # Type 6: Enterprise Correlation
  - question: Have other systems received similar PowerShell-laden certificates?
    context: Identifying campaign scope for coordinated incident response.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name: "ET MALWARE Observed Certificate Containing Possible Base64 Encoded Powershell Inbound"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: Are there related PowerShell execution patterns across the enterprise?
    context: Correlating PowerShell activity reveals the broader attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          Image|contains: "powershell"
          CommandLine|contains: "base64"
        condition: selection
      fields:
        - host.ip
        - CommandLine
        - ProcessGuid