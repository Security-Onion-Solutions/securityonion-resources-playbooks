name: ET MALWARE JsOutProx CnC Activity - Outbound
id: 22034289
description: |
  Detects JsOutProx malware command and control communication via HTTP POST.
  This JavaScript-based proxy malware uses encoded cookies for C2 channels.
  May rarely trigger on legitimate applications using similar cookie patterns.
type: detection
detection_id: 2034289
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the decoded content of the JsOutProx cookie data?
    context: JsOutProx uses encoded cookies containing system information and command responses.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.headers
        - http.cookie
        - http.request.body.content
        - url.full

  - question: What system information is being exfiltrated in the cookie?
    context: The encoded cookie contains Windows system details that reveal compromise scope.
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          http.request.method: 'POST'
        condition: selection
      fields:
        - http.cookie
        - http.user_agent
        - http.request.headers

  - question: Is this HTTP POST activity part of legitimate web application usage?
    context: Normal web applications may use POST requests but with different cookie patterns.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.request.method: 'POST'
        condition: selection
      fields:
        - dst_ip
        - url.path
        - http.content_type
        - http.user_agent

  - question: What process initiated this JsOutProx C2 communication?
    context: Identifying the source process reveals the malware execution context and parent application.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage

  - question: Are there JavaScript files or browser-based malware indicators?
    context: JsOutProx operates through JavaScript, often delivered via browser exploitation.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetFilename|contains:
            - '.js'
            - '.html'
            - 'temp'
            - 'cache'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.mime_type

  - question: What was the C2 server response to this proxy communication?
    context: Server responses may contain proxy configuration or additional malicious payloads.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.content
        - http.response.headers

  - question: Are there signs of proxy or tunneling activity from this host?
    context: JsOutProx creates proxy connections that may show unusual traffic patterns.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - flow.bytes_toserver
        - flow.bytes_toclient

  - question: What browser or JavaScript engine processes are running?
    context: JsOutProx requires JavaScript execution environment to operate effectively.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          Image|contains:
            - 'chrome'
            - 'firefox'
            - 'iexplore'
            - 'edge'
            - 'node'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid

  - question: Are there multiple JsOutProx C2 sessions from this host?
    context: Understanding communication frequency helps determine active infection status.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.cookie|contains: '5f7c5f'
        condition: selection
      fields:
        - dst_ip
        - url.path

  - question: Are other systems in the network showing JsOutProx activity?
    context: JsOutProx campaigns may target multiple systems through web-based infection vectors.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name: 'ET MALWARE JsOutProx CnC Activity - Outbound'
        condition: selection
      fields:
        - src_ip
        - dst_ip

  - question: What DNS queries were made for the JsOutProx C2 infrastructure?
    context: DNS patterns reveal C2 domain infrastructure and potential additional malicious domains.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          dns.resolved_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip