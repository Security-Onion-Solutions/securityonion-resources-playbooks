name: ET MALWARE NanoCore RAT CnC 23
id: 22046919
description: |
  Detects NanoCore Remote Access Trojan command and control communication based on specific binary signature.
  This indicates active RAT communication allowing remote system control and data theft.
type: detection
detection_id: 2046919
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What is the exact binary signature and payload structure of the NanoCore communication?
    context: The specific 12-byte signature helps identify the NanoCore variant and communication protocol.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - alert.signature
        - payload_printable
        - flow.bytes_toserver
        - flow.bytes_toclient

  - question: What is the communication pattern and frequency of NanoCore C2 traffic?
    context: Regular beaconing intervals indicate automated RAT communication behavior.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - community_id
        - flow.bytes_toserver
        - flow.bytes_toclient

  # Type 2: Triage Assessment
  - question: Are there legitimate applications on this system that use similar network protocols?
    context: Some legitimate remote administration tools may generate similar binary traffic.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          Image|contains:
            - 'TeamViewer'
            - 'VNC'
            - 'Remote'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User

  - question: Is this system authorized for remote administration or monitoring?
    context: Legitimate remote access tools would be documented and expected.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - community_id

  # Type 3: Activity Context
  - question: What processes were running when the NanoCore C2 communication occurred?
    context: Identifies the RAT process and potential parent processes used for execution.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - Image
        - ProcessGuid
        - ParentImage
        - CommandLine

  - question: What network activity preceded the NanoCore C2 establishment?
    context: Previous connections may reveal infection vector or initial payload delivery.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - proto
        - community_id

  - question: Were there any suspicious downloads or email attachments accessed recently?
    context: NanoCore is commonly delivered through phishing emails or malicious downloads.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          http.response.status_code: 200
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.body.bytes

  - question: What file creation or modification events occurred before the C2 communication?
    context: Recent file changes may indicate NanoCore installation or payload staging.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetFilename|contains: '.exe'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - Image

  # Type 4: Impact Assessment
  - question: Has the NanoCore RAT received commands from the threat actor?
    context: Return traffic indicates active remote control and potential system compromise.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_ip|expand: '%src_ip%'
          src_port|expand: '%dst_port%'
        condition: selection
      fields:
        - flow.bytes_toserver
        - flow.bytes_toclient
        - community_id

  - question: Are there signs of data exfiltration or file theft from this system?
    context: NanoCore capabilities include file transfer and data stealing functions.
    range: -4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          flow.bytes_toserver|gt: 10000
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - flow.bytes_toserver

  # Type 5: Forensic Deep-Dive
  - question: What executable files and persistence mechanisms has NanoCore established?
    context: Identifies the RAT payload location and methods for maintaining system access.
    range: -24h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetObject|contains:
            - 'Run'
            - 'RunOnce'
            - 'Startup'
        condition: selection
      fields:
        - TargetObject
        - Details
        - Image

  - question: What system files or directories has NanoCore accessed or modified?
    context: File access patterns reveal RAT capabilities and potential data compromise.
    range: -6h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - Image
        - ProcessGuid

  - question: What configuration or log files indicate NanoCore installation details?
    context: Configuration files may reveal C2 servers, capabilities, and campaign information.
    range: -24h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          TargetFilename|contains:
            - '.config'
            - '.ini'
            - '.dat'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - Image

  # Type 6: Enterprise Correlation
  - question: Are other systems showing NanoCore RAT communication to the same C2 infrastructure?
    context: Determines scope of NanoCore campaign across the enterprise network.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          alert.signature|contains: 'NanoCore'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - alert.signature

  - question: What other malware families are using this C2 server infrastructure?
    context: Threat actors often use shared infrastructure for multiple RAT campaigns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - src_ip
        - community_id