name: GPL RPC portmap admind request UDP
id: 22100575
description: |
  Detects UDP requests to the admind RPC service through portmap/rpcbind.
  The admind service has known vulnerabilities and is rarely used legitimately in modern environments.
type: detection
detection_id: 2100575
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What specific admind RPC procedure was requested through portmap?
    context: Different admind procedures have varying risk levels and exploitation potential.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - payload
        - alert.signature

  - question: What RPC program number and version were specified in the portmap query?
    context: RPC version information reveals specific service targeting and potential vulnerability knowledge.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload_printable
        - packet_info.payload
        - flow.bytes_toserver

  # Type 2: Triage Assessment
  - question: Is the target system legitimately running RPC services that require portmap?
    context: Modern systems rarely use RPC portmap; presence may indicate legacy systems or misconfigurations.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
        condition: selection
      fields:
        - src_ip
        - bytes_in
        - bytes_out

  - question: Has this source performed systematic RPC service enumeration recently?
    context: Multiple RPC queries suggest reconnaissance or automated exploitation attempts.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "rpc-portmap-decode"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - dst_port

  # Type 3: Activity Context
  - question: What other RPC services were queried before this admind request?
    context: RPC enumeration patterns reveal attack methodology and target service knowledge.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
        condition: selection
      fields:
        - rule.name
        - alert.signature
        - payload_printable

  - question: Were there any TCP port scans targeting RPC services before this UDP request?
    context: Port scanning may precede targeted RPC exploitation attempts.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.category|contains:
            - "attempted-recon"
            - "network-scan"
        condition: selection
      fields:
        - rule.name
        - dst_port
        - alert.signature

  # Type 4: Impact Assessment
  - question: Did the portmap service respond with admind service location information?
    context: Successful portmap responses enable subsequent direct attacks on vulnerable services.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
          dst_ip|expand: '%src_ip%'
          src_port: 111
        condition: selection
      fields:
        - bytes_out
        - bytes_in
        - duration

  - question: Were any subsequent connections made to discovered admind service ports?
    context: Follow-up connections to discovered RPC services indicate active exploitation attempts.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port|contains:
            - 32771
            - 32772
            - 32773
            - 4045
        condition: selection
      fields:
        - dst_port
        - bytes_toserver
        - duration

  # Type 5: Forensic Deep-Dive
  - question: What specific admind vulnerabilities could be targeted based on this request?
    context: Admind service has multiple known vulnerabilities that enable remote code execution.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.reference
        - alert.metadata
        - payload_printable

  - question: Are there indicators of automated RPC exploitation tools in the request patterns?
    context: Tool signatures in RPC requests reveal threat actor capabilities and methodologies.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "rpc-portmap-decode"
        condition: selection
      fields:
        - rule.name
        - alert.signature
        - payload_printable

  # Type 6: Enterprise Correlation
  - question: Are other systems receiving similar admind RPC queries from this source?
    context: Coordinated RPC reconnaissance indicates systematic network exploitation attempts.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "admind"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - alert.signature_id