name: GPL RPC portmap yppasswd request UDP
id: 22100589
description: |
  Detects UDP requests to RPC portmap service for yppasswd (NIS password service).
  May indicate legitimate NIS password changes or reconnaissance for RPC services.
type: detection
detection_id: 2100589
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete RPC portmap request structure for yppasswd?
    context: Understanding the RPC call structure reveals the specific NIS service being requested.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip
        - src_port
        - dst_port
        - payload

  - question: What NIS services are being queried through portmap?
    context: Analyzing RPC program numbers helps identify targeted NIS components.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
          protocol: udp
        condition: selection
      fields:
        - src_ip
        - bytes_sent
        - bytes_received

  # Type 2: Triage Assessment
  - question: Is this system configured to use NIS authentication?
    context: Legitimate NIS environments regularly query yppasswd for password changes.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
        condition: selection
      fields:
        - src_ip
        - connection_count

  - question: Does the source IP have authorization for NIS operations?
    context: Internal systems may legitimately access NIS services for user management.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - protocol

  # Type 3: Activity Context
  - question: What other RPC services were queried around the same time?
    context: Attackers often enumerate multiple RPC services during reconnaissance.
    range: +/-15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 111
        condition: selection
      fields:
        - dst_ip
        - connection_count

  - question: Was there preceding network scanning activity?
    context: RPC enumeration often follows port scanning of target systems.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - connection_count

  # Type 4: Impact Assessment
  - question: Were any NIS password change attempts successful?
    context: Successful yppasswd operations could indicate compromised user accounts.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
        condition: selection
      fields:
        - bytes_sent
        - bytes_received
        - duration

  - question: Are there signs of successful RPC service exploitation?
    context: Large data transfers or long connections may indicate successful RPC exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - bytes_sent
        - bytes_received
        - duration

  # Type 5: Forensic Deep-Dive
  - question: What specific RPC vulnerabilities might be targeted?
    context: Historical RPC vulnerabilities in yppasswd could be exploitation targets.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - rule.name
        - rule.category

  - question: Are there indicators of buffer overflow attempts?
    context: RPC services are susceptible to buffer overflow attacks through malformed requests.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
        condition: selection
      fields:
        - bytes_sent
        - protocol

  # Type 6: Enterprise Correlation
  - question: Are other systems receiving similar RPC enumeration?
    context: Widespread RPC scanning indicates coordinated reconnaissance campaign.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "RPC portmap"
        condition: selection
      fields:
        - dst_ip
        - rule.name

  - question: Is this part of broader NIS infrastructure targeting?
    context: Multiple NIS service queries suggest targeted attack on authentication infrastructure.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 111
            - 834
            - 835
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection_count