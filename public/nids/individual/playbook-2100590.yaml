name: GPL RPC portmap ypserv request UDP
id: 22100590
description: |
  Detects UDP requests to RPC portmap service for ypserv (NIS server service).
  May indicate legitimate NIS operations or reconnaissance for vulnerable RPC services.
type: detection
detection_id: 2100590
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete RPC portmap request structure for ypserv?
    context: Understanding the RPC call structure reveals the specific NIS server service being requested.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip
        - src_port
        - dst_port
        - payload

  - question: What RPC program numbers are being queried?
    context: Analyzing specific RPC program identifiers helps determine targeted services.
    range: -15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
          protocol: udp
        condition: selection
      fields:
        - src_ip
        - bytes_sent
        - bytes_received

  # Type 2: Triage Assessment
  - question: Is this system part of a legitimate NIS domain?
    context: Production NIS environments regularly query ypserv for directory services.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
        condition: selection
      fields:
        - src_ip
        - connection_count

  - question: Does the timing align with normal NIS operations?
    context: NIS queries typically follow predictable patterns during business hours.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 111
        condition: selection
      fields:
        - dst_ip
        - connection_count

  # Type 3: Activity Context
  - question: What other RPC services were enumerated simultaneously?
    context: Attackers often query multiple RPC services during reconnaissance phases.
    range: +/-15m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 111
        condition: selection
      fields:
        - dst_ip
        - connection_count

  - question: Was there systematic port scanning before RPC queries?
    context: RPC enumeration typically follows discovery of open portmap services.
    range: -30m
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - connection_count

  # Type 4: Impact Assessment
  - question: Were any NIS database queries successful?
    context: Successful ypserv responses could indicate information disclosure.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
        condition: selection
      fields:
        - bytes_sent
        - bytes_received
        - duration

  - question: Are there signs of RPC service exploitation attempts?
    context: Unusual traffic patterns may indicate exploitation of known RPC vulnerabilities.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - bytes_sent
        - bytes_received
        - duration

  # Type 5: Forensic Deep-Dive
  - question: What specific CVEs might be targeted in this ypserv query?
    context: Historical vulnerabilities like CVE-2000-1042 and CVE-2002-1232 affect ypserv implementations.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - rule.name
        - rule.category

  - question: Are there indicators of buffer overflow exploitation?
    context: RPC services are vulnerable to buffer overflows through malformed procedure calls.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
        condition: selection
      fields:
        - bytes_sent
        - protocol

  # Type 6: Enterprise Correlation
  - question: Are multiple systems being targeted for RPC enumeration?
    context: Coordinated RPC scanning suggests systematic infrastructure reconnaissance.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "RPC portmap"
        condition: selection
      fields:
        - dst_ip
        - rule.name

  - question: Is this part of broader NIS infrastructure compromise attempts?
    context: Multiple NIS service targeting indicates focused attack on authentication systems.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 111
            - 834
            - 835
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection_count