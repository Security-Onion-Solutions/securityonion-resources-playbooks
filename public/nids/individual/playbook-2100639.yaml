name: GPL SHELLCODE SGI NOOP
id: 22100639
description: |
  Detects SGI IRIX NOOP sled patterns commonly used in buffer overflow exploits.
  May indicate shellcode injection attempts or legitimate binary data transmission.
type: detection
detection_id: 2100639
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete NOOP sled pattern detected?
    context: Understanding the shellcode structure reveals exploitation technique and target architecture.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip
        - src_port
        - dst_port
        - payload

  - question: What service or application received the shellcode?
    context: Identifying the target service helps determine exploitation vector and vulnerability.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - protocol
        - bytes_sent
        - bytes_received

  # Type 2: Triage Assessment
  - question: Is this legitimate binary data transfer to the target service?
    context: Some applications may transmit binary data that resembles NOOP patterns.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - src_ip
        - bytes_sent
        - connection_count

  - question: Does this system normally receive data on the targeted port?
    context: Regular traffic patterns help distinguish between normal operations and attacks.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - src_ip
        - connection_count

  # Type 3: Activity Context
  - question: What preceded this shellcode transmission?
    context: Understanding the attack sequence reveals exploitation methodology.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - bytes_sent
        - bytes_received

  - question: Was there vulnerability scanning before the shellcode attempt?
    context: Attackers often scan for vulnerabilities before delivering exploit payloads.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - connection_count

  # Type 4: Impact Assessment
  - question: Did the shellcode execution succeed?
    context: Successful exploitation may result in command execution or system compromise.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          Hostname|expand: '%dst_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid

  - question: Are there signs of post-exploitation activity?
    context: Successful shellcode may lead to backdoor installation or data exfiltration.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - bytes_sent
        - bytes_received

  # Type 5: Forensic Deep-Dive
  - question: What specific SGI IRIX vulnerability is being exploited?
    context: SGI NOOP patterns target specific buffer overflow vulnerabilities in IRIX systems.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - rule.name
        - rule.category

  - question: What payload follows the NOOP sled?
    context: The actual shellcode after the NOOP sled reveals attacker intentions.
    range: +/-5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - bytes_sent
        - protocol

  - question: Are there file system changes after the exploit attempt?
    context: Successful exploitation may result in file creation or modification.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.mime_type

  # Type 6: Enterprise Correlation
  - question: Are other systems receiving similar shellcode patterns?
    context: Widespread shellcode distribution indicates coordinated exploitation campaign.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SHELLCODE"
        condition: selection
      fields:
        - dst_ip
        - rule.name

  - question: Is this part of broader buffer overflow exploitation campaign?
    context: Multiple shellcode variants suggest systematic exploitation of buffer overflow vulnerabilities.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "shellcode-detect"
        condition: selection
      fields:
        - dst_ip
        - rule.name