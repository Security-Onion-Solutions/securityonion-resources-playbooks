name: GPL SHELLCODE Digital UNIX NOOP
id: 22100641
description: |
  Detects Digital UNIX (Tru64) NOOP sled patterns used in buffer overflow exploits.
  May indicate shellcode injection attempts or legitimate binary data containing similar patterns.
type: detection
detection_id: 2100641
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete Digital UNIX NOOP pattern detected?
    context: Understanding the shellcode structure reveals target architecture and exploitation technique.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip
        - src_port
        - dst_port
        - payload

  - question: What application or service was targeted by the shellcode?
    context: Identifying the target service helps determine the specific vulnerability being exploited.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - protocol
        - bytes_sent
        - bytes_received

  # Type 2: Triage Assessment
  - question: Is this system running Digital UNIX or compatible architecture?
    context: Digital UNIX NOOP patterns are specific to Alpha architecture systems.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_port
        - connection_count

  - question: Could this be legitimate binary data transmission?
    context: Some applications may transmit binary data that coincidentally matches NOOP patterns.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - src_ip
        - bytes_sent
        - connection_count

  # Type 3: Activity Context
  - question: What activity preceded this shellcode transmission?
    context: Understanding the attack sequence helps identify the exploitation vector.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - bytes_sent
        - bytes_received

  - question: Was there reconnaissance activity before the exploit?
    context: Attackers typically perform reconnaissance to identify vulnerable services.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - connection_count

  # Type 4: Impact Assessment
  - question: Did the shellcode execution result in process creation?
    context: Successful exploitation may spawn new processes or execute commands.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          Hostname|expand: '%dst_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid

  - question: Are there signs of successful system compromise?
    context: Post-exploitation activity may include backdoor installation or data access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - bytes_sent
        - bytes_received

  # Type 5: Forensic Deep-Dive
  - question: What Digital UNIX vulnerabilities might be targeted?
    context: Specific buffer overflow vulnerabilities in Digital UNIX services could be exploited.
    range: +/-1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - rule.name
        - rule.category

  - question: What payload follows the NOOP sled in the exploit?
    context: The actual shellcode reveals the attacker's intended actions after exploitation.
    range: +/-5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - bytes_sent
        - protocol

  - question: Were any files created or modified after the exploit?
    context: Successful shellcode execution may result in file system changes.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.mime_type

  # Type 6: Enterprise Correlation
  - question: Are other systems receiving similar Digital UNIX shellcode?
    context: Multiple targets suggest coordinated exploitation of Digital UNIX vulnerabilities.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SHELLCODE"
        condition: selection
      fields:
        - dst_ip
        - rule.name

  - question: Is this part of broader buffer overflow campaign?
    context: Multiple shellcode variants indicate systematic exploitation across different architectures.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "shellcode-detect"
        condition: selection
      fields:
        - dst_ip
        - rule.name