name: GPL SHELLCODE Linux shellcode
id: 22100652
description: |
  Detects Linux shellcode containing NOP sleds and /bin/sh execution patterns.
  May trigger on legitimate binary data transfers or compressed files containing similar byte patterns.
type: detection
detection_id: 2100652
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete payload containing the shellcode pattern?
    context: Examining the full payload reveals the exploitation technique and target.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload
        - payload_printable
        - alert.signature

  - question: What application or service received this shellcode?
    context: Identifying the target service helps determine exploitation vector and impact.
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - dst_port
        - network.protocol
        - network.bytes
        - network.direction

  # Type 2: Triage Assessment
  - question: Is this connection to a known vulnerable service on this system?
    context: Determining if the target port runs exploitable services helps assess legitimacy.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port|expand: '%dst_port%'
        condition: selection
      fields:
        - src_ip
        - network.bytes
        - count

  - question: Has this source IP attempted similar shellcode delivery before?
    context: Repeated shellcode attempts indicate coordinated attack rather than false positive.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains:
            - 'shellcode'
            - 'exploit'
        condition: selection
      fields:
        - alert.signature
        - dst_ip
        - count

  # Type 3: Activity Context
  - question: What network activity preceded this shellcode delivery?
    context: Understanding the attack sequence reveals exploitation method and entry vector.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - network.protocol
        - network.bytes
        - network.direction

  - question: What process activity occurred on the target system during this timeframe?
    context: Process execution following shellcode delivery indicates successful exploitation.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - process.name
        - process.command_line
        - process.parent.name
        - user.name

  # Type 4: Impact Assessment
  - question: Did shell execution succeed on the target system?
    context: Confirming shell spawning indicates successful shellcode execution and system compromise.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          process.name|contains:
            - 'sh'
            - 'bash'
            - 'dash'
        condition: selection
      fields:
        - process.command_line
        - process.parent.name
        - process.pid
        - user.name

  - question: What network connections were established after the shellcode delivery?
    context: Post-exploitation connections indicate successful compromise and potential data exfiltration.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - network.bytes

  # Type 5: Forensic Deep-Dive
  - question: What files were created or modified following the shellcode execution?
    context: File system changes reveal persistence mechanisms and malware deployment.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - file.path
        - file.name
        - file.hash.md5
        - process.name

  - question: Were any system configuration files accessed after exploitation?
    context: Access to sensitive files indicates privilege escalation or credential harvesting attempts.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          file.path|contains:
            - '/etc/passwd'
            - '/etc/shadow'
            - '/etc/sudoers'
            - '/.ssh/'
        condition: selection
      fields:
        - file.path
        - process.name
        - user.name

  # Type 6: Enterprise Correlation
  - question: Are other systems in the network showing similar shellcode attacks?
    context: Multiple shellcode deliveries indicate broader campaign targeting the organization.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          alert.signature|contains: 'shellcode'
          src_ip|expand: '%src_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - count