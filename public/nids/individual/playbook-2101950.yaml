name: GPL RPC portmap SET attempt UDP 111
id: 22101950
description: |
  Detects RPC portmap SET requests on UDP port 111.
  May indicate legitimate service registration or reconnaissance/attack attempts.
type: detection
detection_id: 2101950
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete RPC portmap SET request structure?
    context: Analyzing the RPC call structure reveals the service being registered and potential malicious intent.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload
        - payload_printable
        - src_ip
        - dst_ip

  - question: What service and port is being registered via portmap?
    context: Understanding the service registration helps determine legitimacy and security implications.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload
        - app_proto
        - flow_id

  # Type 2: Triage Assessment
  - question: Is this system authorized to register RPC services?
    context: Legitimate servers may register services, while workstations typically should not.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 111
        condition: selection
      fields:
        - src_ip
        - proto
        - bytes_toserver

  - question: Does this align with expected NFS or RPC service operations?
    context: Understanding normal RPC activity patterns helps identify anomalous behavior.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          alert.signature|contains: "RPC"
        condition: selection
      fields:
        - src_ip
        - alert.signature
        - dst_port

  # Type 3: Activity Context
  - question: What other RPC activity preceded this SET attempt?
    context: RPC enumeration often precedes service registration in attack scenarios.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          alert.signature|contains: "RPC"
        condition: selection
      fields:
        - alert.signature
        - dst_port
        - payload_printable

  - question: Was there prior portmap enumeration from this source?
    context: Attackers typically enumerate services before attempting to register malicious ones.
    range: -1h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port: 111
        condition: selection
      fields:
        - dst_ip
        - bytes_toserver
        - bytes_toclient

  # Type 4: Impact Assessment
  - question: Was the portmap SET request successful?
    context: Successful registration may indicate compromise or unauthorized service deployment.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - bytes_toclient
        - duration
        - conn_state

  - question: Are there signs of service exploitation following registration?
    context: Registered services may be immediately exploited for persistence or lateral movement.
    range: +1h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          alert.severity|contains:
            - "High"
            - "Critical"
        condition: selection
      fields:
        - src_ip
        - alert.signature
        - dst_port

  # Type 5: Forensic Deep-Dive
  - question: What is the RPC program number and version being registered?
    context: Specific program numbers reveal the type of service and potential attack vectors.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload
        - app_proto_orig
        - app_proto_resp

  - question: Are there indicators of backdoor or malicious RPC service registration?
    context: Unusual program numbers or service types may indicate malicious activity.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains: "portmap"
        condition: selection
      fields:
        - dst_ip
        - alert.signature
        - payload_printable

  # Type 6: Enterprise Correlation
  - question: Are other systems receiving similar portmap SET attempts?
    context: Multiple targets may indicate a coordinated attack or worm activity.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          alert.signature: "GPL RPC portmap SET attempt UDP 111"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - payload_printable

  - question: Is this part of broader RPC-based attack campaign?
    context: RPC attacks often target multiple services and systems simultaneously.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains: "RPC"
        condition: selection
      fields:
        - dst_ip
        - alert.signature
        - dst_port