name: GPL SHELLCODE x86 0x71FB7BAB NOOP unicode
id: 22102313
description: |
  Detects x86 shellcode containing specific NOOP sled patterns in unicode encoding.
  This signature identifies shellcode designed to bypass unicode filtering and DEP protections.
  May rarely trigger on legitimate binary data containing similar byte patterns.
type: detection
detection_id: 2102313
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete shellcode payload structure and encoding method detected?
    context: Understanding the shellcode structure reveals the exploitation technique and target architecture.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - src_ip
        - dst_ip
        - dst_port
        - community_id

  - question: What application protocol was used to deliver this unicode shellcode?
    context: The delivery protocol indicates the exploitation vector and target application vulnerability.
    range: +/-5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - src_port
        - dst_port
        - protocol
        - bytes_toserver

  - question: What is the decoded functionality of this x86 shellcode payload?
    context: Decoded shellcode reveals the intended malicious actions such as reverse shell or payload download.
    range: +/-5m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "SHELLCODE"
        condition: selection
      fields:
        - rule.name
        - rule.category
        - dst_port

  # Type 2: Triage Assessment
  - question: Is this target system known to be vulnerable to unicode-based buffer overflow attacks?
    context: Older applications and systems may be susceptible to unicode encoding exploitation techniques.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - src_ip
        - dst_port
        - bytes_toserver

  - question: Does this match any legitimate application data transfer patterns for these systems?
    context: Some applications may legitimately transfer binary data that resembles shellcode patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_port
        - bytes_toserver
        - bytes_toclient

  # Type 3: Activity Context
  - question: What vulnerability scanning or exploitation attempts preceded this shellcode delivery?
    context: Shellcode delivery is typically preceded by vulnerability identification and exploitation setup.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "EXPLOIT"
            - "SCAN"
            - "OVERFLOW"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - dst_port

  - question: What application or service was targeted for this unicode shellcode injection?
    context: Identifying the target application helps understand the exploitation vector and potential impact.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - "iis"
            - "apache"
            - "nginx"
            - "java"
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ProcessGuid

  - question: Were there any buffer overflow or memory corruption alerts from the target system?
    context: Shellcode injection often follows successful buffer overflow or memory corruption exploitation.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - "overflow"
            - "corruption"
            - "heap"
        condition: selection
      fields:
        - rule.name
        - src_ip
        - rule.category

  # Type 4: Impact Assessment
  - question: Did the shellcode successfully execute on the target system?
    context: Successful shellcode execution leads to unauthorized code execution and potential system compromise.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - "cmd.exe"
            - "powershell"
            - "sh"
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ProcessGuid

  - question: Are there signs of reverse shell or command and control communication following shellcode delivery?
    context: Successful shellcode often establishes persistent communication channels for remote control.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - bytes_toserver
        - bytes_toclient

  # Type 5: Forensic Deep-Dive
  - question: What specific x86 instructions and NOOP sled techniques were used in this shellcode?
    context: Shellcode analysis reveals sophistication level and potential attribution to specific exploit kits.
    range: +/-30m
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "SHELLCODE"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - rule.category

  - question: Are there indicators of known exploit kits or shellcode generators being used?
    context: Specific shellcode patterns can be attributed to known exploit kits or automated generation tools.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "EXPLOIT"
            - "KIT"
            - "METASPLOIT"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - rule.category

  - question: What payload was downloaded or executed following successful shellcode injection?
    context: Shellcode often serves as a dropper for additional malware or tools.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - ".exe"
            - ".dll"
            - ".bat"
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.size

  # Type 6: Enterprise Correlation
  - question: Are other systems in the network receiving similar unicode shellcode attacks?
    context: Coordinated shellcode delivery indicates worm propagation or targeted campaign activity.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "SHELLCODE x86"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name

  - question: Is this part of a broader exploitation campaign targeting unicode vulnerabilities?
    context: Multiple unicode-based attacks may indicate systematic exploitation of legacy application vulnerabilities.
    range: +/-6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - "unicode"
            - "SHELLCODE"
          rule.category|contains: "shellcode-detect"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name