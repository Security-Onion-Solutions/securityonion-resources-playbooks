name: GPL NETBIOS SMB-DS NDdeSetTrustedShareW little endian andx overflow attempt
id: 22102969
description: |
  Detects little-endian variant buffer overflow attempts targeting NDdeSetTrustedShareW function in Windows NetDDE service.
  This CVE-2004-0206 exploit variant uses specific byte ordering. Legitimate NetDDE usage is extremely rare in modern networks.
type: detection
detection_id: 2102969
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What little-endian byte patterns were used in this NetDDE overflow attempt?
    context: Endianness analysis reveals exploit sophistication and target architecture assumptions.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.name
        - payload
        - alert.signature

  - question: How does this little-endian variant differ from standard NetDDE exploits?
    context: Comparing exploit variants helps identify threat actor tools and capabilities.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains: "NDdeSetTrustedShareW"
        condition: selection
      fields:
        - rule.name
        - alert.signature_id
        - payload_printable

  # Type 2: Triage Assessment
  - question: Is the target system architecture compatible with little-endian exploitation?
    context: Architecture mismatch may indicate automated tools or reconnaissance phase.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 445
        condition: selection
      fields:
        - src_ip
        - bytes_in
        - bytes_out

  - question: Has this source attempted multiple endianness variants of the same exploit?
    context: Multiple variants suggest automated exploitation tools or thorough attack methodology.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "NDdeSetTrustedShareW"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - alert.signature_id

  # Type 3: Activity Context
  - question: What SMB session negotiation occurred before this little-endian exploit?
    context: SMB capabilities negotiation may reveal target system architecture details.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - rule.name
        - alert.signature
        - flow.state

  - question: Were there reconnaissance activities to determine target architecture?
    context: Architecture fingerprinting may precede endianness-specific exploits.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.category|contains:
            - "attempted-recon"
            - "network-scan"
        condition: selection
      fields:
        - rule.name
        - alert.signature
        - dst_port

  # Type 4: Impact Assessment
  - question: Did the little-endian overflow cause different system behavior than standard variants?
    context: Architecture-specific exploits may have different success rates and impact patterns.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          Image|contains:
            - "services.exe"
            - "netdde.exe"
            - "rundll32.exe"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid

  - question: Were any architecture-specific payloads executed successfully?
    context: Little-endian exploits may deploy different shellcode or payloads.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          ParentImage|contains: "netdde.exe"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid

  # Type 5: Forensic Deep-Dive
  - question: What specific little-endian shellcode patterns are present in the exploit?
    context: Endianness-specific shellcode reveals exploit kit sophistication and target specificity.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload_printable
        - packet_info.payload
        - alert.metadata

  - question: Does the exploit indicate knowledge of specific Windows architecture versions?
    context: Architecture-aware exploits suggest advanced threat actor capabilities or tools.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - rule.reference
        - alert.signature
        - flow.bytes_toserver

  # Type 6: Enterprise Correlation
  - question: Are other systems receiving architecture-specific NetDDE exploits from this source?
    context: Coordinated architecture-aware attacks indicate sophisticated threat campaigns.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "little endian"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - alert.signature_id