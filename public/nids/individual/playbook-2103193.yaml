name: GPL EXPLOIT .cmd executable file parsing attack
id: 22103193
description: |
  Detects attempts to exploit .cmd file parsing vulnerabilities through web requests.
  Legitimate usage would not include .cmd files with command injection characters in web contexts.
type: detection
detection_id: 2103193
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the complete .cmd file path and command injection payload used in the attack?
    context: Understanding the full payload reveals the attacker's intent and target command execution.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.full
        - http.request.body.content
        - url.query

  - question: What specific commands or system functions are being targeted through the .cmd exploitation?
    context: The injected commands reveal the attacker's objectives and potential system impact.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.path
        - http.request.method

  # Type 2: Triage Assessment
  - question: Is this a legitimate request to a web application that processes .cmd files?
    context: Some applications legitimately handle command files for automation or configuration purposes.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          url.path|contains: ".cmd"
        condition: selection
      fields:
        - url.path
        - http.request.method

  - question: Are there authorized administrative activities that might involve .cmd file processing?
    context: Legitimate system administration might involve command file execution through web interfaces.
    range: -4h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          url.path|contains: "admin"
        condition: selection
      fields:
        - src_ip
        - url.path

  # Type 3: Activity Context
  - question: What other web requests preceded this .cmd exploitation attempt?
    context: Attack sequences often involve reconnaissance and multiple exploitation attempts.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - url.full
        - http.request.method
        - http.response.status_code

  - question: What user agent and client characteristics were used for this attack?
    context: Automated exploitation tools often use distinctive user agents that help identify attack patterns.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - http.request.headers.user_agent
        - http.request.headers.accept

  # Type 4: Impact Assessment
  - question: Did the web server successfully process the .cmd file exploitation request?
    context: A successful response indicates the command injection attempt may have executed system commands.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - http.response.status_code
        - http.response.body.bytes

  - question: Are there signs of successful command execution or system compromise following this request?
    context: Successful command injection often leads to additional malicious activities or system access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%dst_ip%'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.bytes_sent

  # Type 5: Forensic Deep-Dive
  - question: What specific system commands or executables were targeted in the injection attempt?
    context: Analyzing target commands helps identify the attacker's objectives and system knowledge.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - url.query
        - url.path

  - question: Are there other command injection attacks from this source targeting different vulnerabilities?
    context: Attackers often use multiple command injection vectors against the same target to increase success probability.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.category: "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - dst_ip

  - question: What other CVE-2000-0886 related activities have been detected in the environment?
    context: This specific vulnerability may be part of a broader exploitation campaign targeting legacy systems.
    range: -6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "CVE-2000-0886"
        condition: selection
      fields:
        - src_ip
        - dst_ip

  # Type 6: Enterprise Correlation
  - question: Are other web servers in the environment being targeted with similar command injection attacks?
    context: Coordinated attacks often target multiple systems simultaneously to maximize impact.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: ".cmd executable"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name