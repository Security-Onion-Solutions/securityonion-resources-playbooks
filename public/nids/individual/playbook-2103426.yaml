name: GPL NETBIOS SMB CoGetInstanceFromFile Little Endian Attempt
id: 22103426
description: |
  Detects little-endian SMB CoGetInstanceFromFile DCOM exploitation attempts via named pipes.
  May indicate legitimate DCOM operations or potential remote code execution attacks using little-endian encoding.
  Little-endian encoding may indicate specific exploitation tools or evasion techniques.
type: detection
detection_id: 2103426
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the little-endian encoded DCOM CoGetInstanceFromFile request structure?
    context: Little-endian encoding analysis reveals specific exploitation tools and byte order manipulation techniques.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - dcom.interface_uuid
        - dcom.opnum
        - smb.path
        - payload_printable
        - dcom.endianness

  - question: What specific byte patterns indicate little-endian DCOM exploitation?
    context: Byte pattern analysis helps identify exploitation frameworks and tool signatures.
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id|expand: '%community_id%'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - bytes_toserver
        - smb.named_pipe

  # Type 2: Triage Assessment
  - question: Is little-endian DCOM encoding typical for this source system?
    context: Endianness patterns help distinguish between legitimate applications and exploitation tools.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "little endian"
            - "DCOM"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - dcom.endianness

  - question: Does this system architecture typically use little-endian byte ordering?
    context: System architecture context helps determine if endianness is expected or indicates tool usage.
    range: -30d
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "endian"
        condition: selection
      fields:
        - rule.name
        - system.architecture

  # Type 3: Activity Context
  - question: What DCOM binding sequence preceded this little-endian exploitation attempt?
    context: Complete DCOM sequence reveals exploitation methodology and tool characteristics.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - "DCOM"
            - "ISystemActivator"
            - "bind"
        condition: selection
      fields:
        - rule.name
        - dcom.interface_uuid
        - dcom.opnum
        - dcom.endianness

  - question: Were there failed big-endian attempts before this little-endian exploitation?
    context: Endianness switching indicates adaptive exploitation tools or manual testing approaches.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - "CoGetInstanceFromFile"
            - "DCOM"
        condition: selection
      fields:
        - rule.name
        - dcom.endianness
        - dcom.response_status

  # Type 4: Impact Assessment
  - question: Did the little-endian DCOM exploitation succeed where big-endian failed?
    context: Successful endianness-based evasion indicates sophisticated exploitation tools or techniques.
    range: +5m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          rule.name|contains:
            - "DCOM"
            - "success"
            - "response"
        condition: selection
      fields:
        - rule.name
        - dcom.response_status
        - smb.response.status

  - question: What code execution occurred after successful little-endian DCOM exploitation?
    context: Process creation following endianness-based exploitation reveals payload execution success.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          Hostname|expand: '%dst_ip%'
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid
        - ParentImage

  # Type 5: Forensic Deep-Dive
  - question: What exploitation framework or tool uses little-endian DCOM techniques?
    context: Tool identification helps attribute attacks and understand threat actor capabilities.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains:
            - "framework"
            - "tool"
            - "exploit"
        condition: selection
      fields:
        - rule.name
        - user_agent
        - dcom.client_info

  - question: What payloads were deployed via little-endian DCOM exploitation?
    context: Payload analysis reveals attacker objectives and post-exploitation capabilities.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetFilename|contains:
            - ".exe"
            - ".dll"
            - ".bat"
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - ProcessName
        - file.size

  - question: What persistence mechanisms were established after little-endian exploitation?
    context: Persistence establishment indicates successful compromise and ongoing threat presence.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          TargetObject|contains:
            - "Run"
            - "Service"
            - "Task"
        condition: selection
      fields:
        - TargetObject
        - Details
        - ProcessName

  # Type 6: Enterprise Correlation
  - question: Are other systems experiencing little-endian DCOM exploitation from this source?
    context: Multiple little-endian attacks indicate specialized tool usage or advanced threat actor.
    range: -2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          rule.name|contains: "little endian"
        condition: selection
      fields:
        - dst_ip
        - rule.name

  - question: Is this part of a coordinated DCOM exploitation campaign using endianness techniques?
    context: Coordinated endianness-based attacks indicate advanced persistent threat with deep Windows knowledge.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - "DCOM"
            - "endian"
            - "CoGetInstanceFromFile"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - dcom.endianness