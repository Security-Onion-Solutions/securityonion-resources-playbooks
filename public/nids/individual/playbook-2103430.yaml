name: GPL NETBIOS SMB CoGetInstanceFromFile little endian andx attempt
id: 22103430
description: |
  Detects little-endian variant of DCOM exploitation attempts via SMB CoGetInstanceFromFile.
  This targets Windows DCOM vulnerabilities using specific byte ordering for payload delivery.
  May trigger on legitimate applications using little-endian DCOM calls over SMB.
type: detection
detection_id: 2103430
detection_category:
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  # Type 1: Artifact Analysis
  - question: What was the exact little-endian byte structure in the DCOM call?
    context: Analyzing endianness reveals exploitation technique adaptation and target architecture awareness.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - payload
        - alert.signature
        - rule.name

  - question: How does this payload differ from big-endian DCOM exploitation attempts?
    context: Comparing endianness variants helps understand attacker tool sophistication and methodology.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          alert.signature|contains: 'CoGetInstanceFromFile'
        condition: selection
      fields:
        - alert.signature
        - payload_printable
        - rule.name

  - question: What SMB AndX command chaining was used in the little-endian variant?
    context: Command chaining patterns reveal exploitation framework capabilities and evasion techniques.
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          document_id|expand: '%document_id%'
        condition: selection
      fields:
        - smb.command
        - flow.bytes_toserver
        - payload_len

  # Type 2: Triage Assessment
  - question: Is this consistent with legitimate little-endian DCOM client behavior?
    context: Some applications may use specific endianness based on platform or framework requirements.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          dst_port: 139
          app_proto: 'smb'
        condition: selection
      fields:
        - src_ip
        - flow.bytes_toserver
        - conn_state

  - question: Does the source system architecture match the endianness used?
    context: Architecture consistency helps distinguish legitimate applications from exploitation attempts.
    range: -24h
    query: |
      aggregation: true
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%src_ip%'
          Image|contains:
            - 'dcom'
            - 'ole'
            - 'rpc'
        condition: selection
      fields:
        - Image
        - User
        - CommandLine

  # Type 3: Activity Context
  - question: What DCOM interface enumeration preceded this attempt?
    context: Attackers often enumerate DCOM interfaces before selecting appropriate exploitation techniques.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_port|contains:
            - 135
            - 139
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - flow.bytes_toserver

  - question: What authentication context was established for this DCOM call?
    context: Understanding authentication helps identify access methods and privilege escalation attempts.
    range: -15m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          dst_ip|expand: '%dst_ip%'
          alert.signature|contains:
            - 'SMB'
            - 'authentication'
            - 'NTLM'
        condition: selection
      fields:
        - alert.signature
        - rule.name
        - alert.severity

  # Type 4: Impact Assessment
  - question: Did the little-endian technique bypass existing security controls?
    context: Different endianness may evade certain IDS signatures or exploit mitigations.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          User: 'SYSTEM'
          ParentImage|contains: 'dllhost.exe'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid

  - question: Are there signs of successful DCOM service compromise?
    context: Confirming service compromise determines incident response priority and containment scope.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          alert.signature|contains:
            - 'backdoor'
            - 'trojan'
            - 'remote access'
        condition: selection
      fields:
        - alert.signature
        - src_ip
        - dst_port

  # Type 5: Forensic Deep-Dive
  - question: What specific little-endian exploitation framework was employed?
    context: Framework identification helps attribute attacks and predict follow-on malicious activities.
    range: +/-2h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains:
            - 'Metasploit'
            - 'exploit'
            - 'payload'
        condition: selection
      fields:
        - alert.signature
        - dst_ip
        - rule.name

  - question: Are there memory corruption indicators in the DCOM service?
    context: Memory corruption patterns help confirm successful exploitation versus failed attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip|expand: '%dst_ip%'
          alert.signature|contains:
            - 'overflow'
            - 'corruption'
            - 'crash'
        condition: selection
      fields:
        - alert.signature
        - alert.severity
        - rule.name

  - question: What post-exploitation artifacts were created?
    context: Successful DCOM exploitation often results in file drops, registry modifications, or service changes.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip|expand: '%dst_ip%'
          User: 'SYSTEM'
        condition: selection
      fields:
        - TargetFilename
        - file.hash.md5
        - file.mime_type

  # Type 6: Enterprise Correlation
  - question: Are other systems targeted with endianness-specific DCOM exploits?
    context: Coordinated attacks may use different endianness based on target system reconnaissance.
    range: +/-4h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains:
            - 'little endian'
            - 'CoGetInstanceFromFile'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - alert.signature

  - question: Is this part of an architecture-aware DCOM attack campaign?
    context: Sophisticated attackers tailor exploits based on target system architecture analysis.
    range: +/-6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          src_ip|expand: '%src_ip%'
          alert.signature|contains:
            - 'DCOM'
            - 'SMB'
            - 'endian'
        condition: selection
      fields:
        - dst_ip
        - alert.signature
        - rule.name