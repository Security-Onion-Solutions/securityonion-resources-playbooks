name: ET EXPLOIT libpng tRNS overflow attempt
id: 1244701
description: |
  Detects attempts to exploit a buffer overflow vulnerability in libpng transparency chunk processing.
  May trigger on legitimate PNG files with large transparency chunks or security testing tools.
type: detection
detection_id: 2001058
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the malformed PNG file?
    context: Reveals the full PNG file structure and tRNS chunk details for exploitation analysis.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally download PNG files from external sources?
    context: Determines if PNG file downloads represent typical user behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What application was used to access the resource containing the malformed PNG?
    context: Identifies the client application that may be vulnerable to the libpng overflow.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host after the PNG download?
    context: Identifies potential follow-up communications if exploitation was successful.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created after the PNG file was received?
    context: Detects files that may have been created through successful buffer overflow exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts downloading similar PNG files from the same source?
    context: Determines scope of potential exploitation campaign targeting libpng vulnerabilities.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did any image processing applications crash or restart after this activity?
    context: Identifies application instability that may indicate exploitation attempts.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{source.ip}'
          Image|contains:
            - "photoshop"
            - "gimp"
            - "paint"
            - "imageview"
            - "firefox"
            - "chrome"
            - "safari"
            - "edge"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
  - question: Were any graphics libraries or image processing tools executed during this timeframe?
    context: Identifies applications that process PNG files and may be vulnerable.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - mspaint.exe
          - photoshop.exe
          - gimp.exe
          - firefox.exe
          - chrome.exe
          - msedge.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: What other PNG files were downloaded from the same server?
    context: Reveals additional potentially malicious PNG files from the same source.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: ".png"
        condition: selection
      fields:
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Are there similar alerts across the organization involving PNG file exploits?
    context: Determines if this is part of a coordinated campaign targeting image processing vulnerabilities.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
