name: ET EXPLOIT libPNG - Width exceeds limit
id: 1245094
description: |
  Detects PNG files with width values exceeding the safe limit (0x80000000), potentially indicating malformed images used for exploitation.
  May trigger on legitimate but unusually large image files or corrupted downloads.
type: detection
detection_id: 2001191
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP response containing the oversized PNG file?
  context: Reveals the full context of how the malformed PNG was delivered.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally download PNG files from external sources?
  context: Determines if image downloads represent typical user behavior.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What process or application requested the malformed PNG file?
  context: Identifies the client application that may be vulnerable to PNG processing flaws.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other image files were downloaded from the same source?
  context: Assesses whether multiple malformed images were delivered.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - .png
        - .gif
        - .jpg
        - .jpeg
        - .bmp
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - http.status_code
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Were any executable files created after the PNG download?
  context: Identifies potential exploitation artifacts or dropped payloads.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: What other external connections occurred from this host after the PNG download?
  context: Identifies additional network activity that may indicate successful exploitation.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts downloading similar oversized PNG files?
  context: Determines scope of potential campaign targeting PNG processing vulnerabilities.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What image processing applications were executed around this time?
  context: Identifies software that may have processed the malformed PNG.
  range: +/-30m
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|contains:
        - mspaint.exe
        - photoshop.exe
        - gimp.exe
        - firefox.exe
        - chrome.exe
        - iexplore.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: Did any crashes or error events occur after the PNG file was received?
  context: Indicates potential exploitation attempts causing application instability.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        Image|contains:
        - WerFault.exe
        - dwwin.exe
        - drwtsn32.exe
        host.ip: '{source.ip}'
    fields:
    - Image
    - CommandLine
    - ParentImage
    logsource:
      category: process_creation
- question: Are there related alerts involving the same external IP address?
  context: Reveals additional malicious activity from the same source.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
