name: ET EXPLOIT SYS get_domain_index_tables Access
id: 1242678
description: |
  Detects Oracle SQL queries accessing sys.dbms_export_extension.get_domain_index_tables function.
  May indicate privilege escalation attempts or legitimate database administration activities.
type: detection
detection_id: 2002887
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL query containing the get_domain_index_tables function call?
    context: Reveals the full database command and context of the potential exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: tcp
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this client normally access Oracle database functions on this server?
    context: Determines if database access from this source represents normal administrative patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other database queries occurred in this connection session?
    context: Identifies the broader context of database activity and potential attack progression.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
          dst_port: [1521, 1522, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550]
        condition: selection
      fields:
        - connection.history
        - connection.state
        - network.bytes
        - network.packets
  - question: Were other Oracle exploitation techniques attempted from this source?
    context: Identifies additional database attack vectors or reconnaissance activities.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip: '{source.ip}'
          rule.name|contains:
            - "oracle"
            - "sql injection"
            - "database"
            - "dbms"
        condition: selection
      fields:
        - rule.name
        - rule.category
        - dst_ip
        - dst_port
  - question: What other external connections occurred from the client performing this database access?
    context: Identifies additional network activity that may be part of a broader attack campaign.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting similar Oracle database exploitation techniques?
    context: Determines if this represents part of a coordinated database attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of database connections between this client and server?
    context: Analyzes the timing and frequency of database access attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Were administrative database functions accessed after this query?
    context: Identifies potential privilege escalation or unauthorized administrative access.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          rule.name|contains:
            - "admin"
            - "privilege"
            - "sys."
            - "dba_"
            - "user_"
        condition: selection
      fields:
        - rule.name
        - rule.category
        - dst_port
  - question: Did the database server establish any outbound connections after this query?
    context: Detects potential data exfiltration or callback connections from compromised database.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        filter:
          dst_ip: '{network.private_ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state
  - question: Are there related alerts involving the same database server from other sources?
    context: Identifies coordinated attacks or scanning activities targeting the Oracle database.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
