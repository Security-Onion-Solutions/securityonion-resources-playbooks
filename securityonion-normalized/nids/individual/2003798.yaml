name: ET WEB_SPECIFIC_APPS CMS Made Simple SQL Injection Attempt -- stylesheet.php templateid UPDATE
id: 1246040
description: |
  Detects SQL injection attempts targeting CMS Made Simple's stylesheet.php with UPDATE SET patterns in templateid parameter.
  May trigger on legitimate administrative operations or security testing activities.
type: detection
detection_id: 2003798
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact SQL injection payload in the stylesheet.php request?
    context: Reveals the specific UPDATE SET pattern and templateid parameter manipulation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access CMS Made Simple admin functions?
    context: Determines if administrative access to stylesheet.php represents normal usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other HTTP requests to CMS Made Simple occurred from this source?
    context: Identifies broader enumeration or exploitation attempts against the CMS.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/stylesheet.php"
            - "/admin/"
            - "/index.php"
            - "/uploads/"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - http.status_code
  - question: Were there successful authentication attempts to CMS Made Simple from this source?
    context: Determines if the SQL injection attempt followed successful login.
    range: +/-30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.status_code: \n      - 200\n      - 302\n    http.uri|contains:\n      - \"login\"\n      - \"admin\"\n  condition: selection\nfields:\n  - http.uri\n  - http.status_code\n  - http.user_agent\n"
  - question: What was the web server's response to the SQL injection attempt?
    context: Indicates whether the injection was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "stylesheet.php"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are other hosts attempting similar SQL injection attacks against CMS Made Simple?
    context: Determines scope of the campaign targeting this CMS vulnerability.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "stylesheet.php"
          http.uri|contains: "templateid"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What files were accessed on the web server after the SQL injection attempt?
    context: Identifies potential file access or data exfiltration following successful injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the SQL injection attempt result in database-related process activity?
    context: Reveals whether the injection successfully interacted with the database layer.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|contains:
            - "mysql"
            - "mysqld"
            - "php"
            - "apache"
            - "nginx"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
  - question: Are there related alerts indicating successful compromise of this CMS installation?
    context: Correlates with other security events that may indicate successful exploitation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the pattern of web requests from this source over the past day?
    context: Reveals broader attack methodology and targeting patterns.
    range: -24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.user_agent
        - http.status_code
