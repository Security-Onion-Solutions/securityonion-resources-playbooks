name: ET WEB_SPECIFIC_APPS phpHoo3 SQL Injection Attempt -- admin.php ADMIN_USER SELECT
id: 1246812
description: |
  Detects SQL injection attempts targeting phpHoo3 admin.php with ADMIN_USER parameter containing SELECT statements.
  May trigger on legitimate database queries or security testing tools scanning for SQL injection vulnerabilities.
type: detection
detection_id: 2003805
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the exact payload and parameters used in the phpHoo3 exploitation attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the phpHoo3 admin interface?
  context: Determines if admin.php access represents normal administrative activity or unauthorized access attempts.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled the request to admin.php?
  context: Identifies the web application server processing the potential SQL injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests occurred from the same source around this time?
  context: Reveals additional scanning or exploitation attempts against the phpHoo3 application.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Did the source IP attempt SQL injection on other web applications?
  context: Identifies broader SQL injection scanning activity targeting multiple applications.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - SELECT
        - UNION
        - OR 1=1
        - ''' OR '''
        - admin
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.uri
    - http.method
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What files were accessed by the web server process after this request?
  context: Determines if the SQL injection attempt resulted in unauthorized file access.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        ProcessGuid: '{event_data.process.entity_id}'
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - User
- question: Are other hosts receiving similar phpHoo3 SQL injection attempts?
  context: Assesses whether this is part of a coordinated attack against phpHoo3 installations.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: Did the web application establish any external database connections after this request?
  context: Identifies potential data exfiltration attempts following successful SQL injection.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        dst_ip|cidr:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
      selection:
        dst_port:
        - 3306
        - 5432
        - 1433
        - 1521
        src_ip: '{destination.ip}'
    fields:
    - dst_ip
    - dst_port
    - network.transport
    - connection.state
    logsource:
      category: network
      service: connection
- question: What registry modifications occurred on the web server after this request?
  context: Detects potential persistence mechanisms established through successful exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: registry_event
    detection:
      selection:
        host.ip: '{related.ip}'
        TargetObject|contains:
        - Run
        - RunOnce
        - Services
        - Startup
        - Winlogon
        - Explorer
        - Shell
        - AppInit_DLLs
        - Image File Execution Options
        - Class
        - ContextMenuHandlers
        - ShellExecuteHooks
      condition: selection
    fields:
      - User
      - Image
      - ProcessGuid
      - TargetObject
      - Details
- question: Were any scheduled tasks created following this SQL injection attempt?
  context: Identifies automated persistence or execution mechanisms established after compromise.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|endswith:
        - schtasks.exe
        - taskeng.exe
        - taskhostw.exe
      condition: selection
    fields:
      - CommandLine
      - Image
      - ProcessGuid
      - User
      - ParentImage
- question: Did any lateral movement occur from the web server host?
  context: Determines if successful exploitation led to internal network compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
