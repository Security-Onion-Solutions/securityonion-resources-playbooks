name: ET WEB_SPECIFIC_APPS phpHoo3 SQL Injection Attempt -- admin.php ADMIN_PASS DELETE
id: 1246803
description: |
  Detects SQL injection attempts targeting phpHoo3 admin.php with DELETE FROM statements via ADMIN_PASS parameter.
  May trigger on legitimate database administration activities or security testing tools.
type: detection
detection_id: 2003814
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the admin.php request?
    context: Reveals the specific DELETE statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access phpHoo3 admin interfaces?
    context: Determines if administrative access to this application is typical.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool initiated the SQL injection request?
    context: Identifies whether this appears to be automated scanning or manual exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other admin.php requests occurred from this source?
    context: Reveals the scope of administrative interface targeting.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "admin.php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - http.status_code
  - question: Were any database-related files accessed after the SQL injection attempt?
    context: Assesses potential data access or modification through the injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What other external connections occurred from the web server?
    context: Identifies potential data exfiltration or command and control activity.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts receiving similar phpHoo3 SQL injection attempts?
    context: Determines if this is part of a broader campaign targeting phpHoo3 installations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did the web server process execute any database commands after the injection attempt?
    context: Identifies whether the SQL injection was successful in executing database operations.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          CommandLine|contains:
            - "mysql"
            - "mysqldump"
            - "DELETE"
            - "DROP"
            - "TRUNCATE"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: What is the pattern of HTTP responses to requests containing SQL injection payloads?
    context: Reveals whether the application is vulnerable based on response patterns.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "DELETE"
            - "FROM"
            - "ADMIN_PASS"
        condition: selection
      fields:
        - http.uri
        - http.status_code
        - http.request.body.length
        - http.response.body.length
  - question: Are there related alerts involving the same source IP targeting web applications?
    context: Identifies coordinated attacks against multiple web applications.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
