name: ET WEB_SPECIFIC_APPS RunCms SQL Injection Attempt -- debug_show.php executed_queries DELETE
id: 1246797
description: |
  Detects SQL injection attempts targeting RunCms debug_show.php with DELETE operations.
  May trigger on legitimate administrative activities or security testing of RunCms applications.
type: detection
detection_id: 2003820
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full URI and payload structure used in the RunCms exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access RunCms debug functionality?
    context: Determines if debug_show.php access represents normal administrative activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled this RunCms SQL injection request?
    context: Identifies the web application server that processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source around the same time?
    context: Identifies additional web application attacks or reconnaissance activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were any database-related files accessed after this SQL injection attempt?
    context: Determines if the injection attempt resulted in database file access or modification.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
        db_files:
          file.name|contains:
            - .sql
            - .db
            - .mdb
            - database
            - backup
        condition: selection and db_files
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Are other hosts being targeted with similar RunCms SQL injection attempts?
    context: Determines if this is part of a broader campaign against RunCms installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What user-agent was used in the SQL injection request?
    context: Identifies the client application or tool used for the attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - src_ip
        - dst_ip
  - question: Were any administrative or privileged operations attempted after the injection?
    context: Assesses whether the SQL injection led to elevated access attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        admin_tools:
          Image|contains:
            - mysqladmin
            - psql
            - sqlcmd
            - mysql
            - sqlite
        condition: selection and admin_tools
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Did the web server establish any new external connections after the injection attempt?
    context: Identifies potential data exfiltration or remote access establishment.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there other attempts to access RunCms debug or administrative interfaces?
    context: Reveals broader reconnaissance or exploitation attempts against RunCms.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        debug_access:
          http.uri|contains:
            - debug
            - admin
            - config
            - install
            - setup
        condition: selection and debug_access
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.status_code
