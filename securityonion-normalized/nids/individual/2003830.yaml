name: ET WEB_SPECIFIC_APPS ResManager SQL Injection Attempt -- edit_day.php id_reserv UNION SELECT
id: 1246793
description: |
  Detects SQL injection attempts targeting ResManager's edit_day.php with UNION SELECT statements in the id_reserv parameter.
  May trigger on legitimate database queries or security testing tools that use similar SQL syntax patterns.
type: detection
detection_id: 2003830
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the edit_day.php request?
    context: Reveals the specific UNION SELECT statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the ResManager application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application or process is hosting the ResManager edit_day.php script?
    context: Identifies the specific web server or application that received the injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host after the injection attempt?
    context: Identifies potential data exfiltration or additional attack infrastructure connections.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting similar SQL injection attacks against ResManager?
    context: Determines if this is part of a coordinated attack campaign targeting ResManager installations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created by the web server process after the injection attempt?
    context: Identifies potential web shells or malicious files uploaded through SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did the attacker attempt other SQL injection techniques against this web server?
    context: Reveals broader SQL injection testing or exploitation patterns.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "OR 1=1"
            - "' OR '"
            - "\" OR \""
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
  - question: What is the pattern of failed and successful HTTP responses from the ResManager application?
    context: Indicates whether the SQL injection attempts were successful or blocked.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "edit_day.php"
        condition: selection
      fields:
        - http.status_code
        - http.uri
        - http.method
  - question: Are there related alerts for web application attacks from this source IP?
    context: Identifies broader web application attack patterns or reconnaissance activities.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did this host perform reconnaissance scanning of the web application before the injection attempt?
    context: Reveals enumeration activities that may have preceded the targeted attack.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        suspicious_paths:
          http.uri|contains:
            - "admin"
            - "login"
            - "config"
            - "backup"
            - "database"
            - ".php"
            - ".asp"
            - ".jsp"
        condition: selection and suspicious_paths
      fields:
        - http.uri
        - http.status_code
        - http.user_agent
