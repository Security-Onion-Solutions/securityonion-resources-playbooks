name: ET WEB_SPECIFIC_APPS Jetbox CMS SQL Injection Attempt -- opentree.php id DELETE
id: 1246221
description: |
  Detects SQL injection attempts targeting Jetbox CMS opentree.php with DELETE operations.
  May trigger on legitimate database administration or security testing activities.
type: detection
detection_id: 2003966
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the opentree.php request?
    context: Reveals the specific DELETE statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Jetbox CMS admin interface?
    context: Determines if administrative access to this CMS is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to the CMS before this injection attempt?
    context: Identifies reconnaissance or authentication attempts preceding the attack.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "/admin/cms/"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: What other SQL injection patterns were attempted from this source?
    context: Reveals broader SQL injection campaign targeting multiple applications.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "DELETE"
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DROP"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.virtual_host
        - dst_ip
  - question: Are other hosts being targeted with similar Jetbox CMS injection attempts?
    context: Determines scope of campaign against this specific CMS vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "/admin/cms/opentree.php"
          http.uri|contains: "DELETE"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.method
  - question: What web application is running on the targeted server?
    context: Identifies the specific CMS version and configuration being attacked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Did the SQL injection attempt result in successful authentication?
    context: Assesses whether the injection bypassed authentication mechanisms.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.status_code:
            - 200
            - 302
            - 301
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: What files were accessed or modified on the web server after the injection attempt?
    context: Identifies potential data exfiltration or system compromise.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there related alerts from the same source IP across the organization?
    context: Reveals broader attack patterns against multiple systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What other external connections occurred from the targeted web server?
    context: Identifies potential reverse shells or data exfiltration channels.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did any database-related processes exhibit unusual activity after the injection?
    context: Detects successful database manipulation or compromise.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|contains:
            - "mysql"
            - "postgres"
            - "sqlserver"
            - "oracle"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
