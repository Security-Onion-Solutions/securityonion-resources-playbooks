name: ET WEB_SPECIFIC_APPS Jetbox CMS SQL Injection Attempt -- index.php login UPDATE
id: 1246229
description: |
  Detects HTTP requests to Jetbox CMS index.php containing SQL UPDATE statements in login parameters.
  May trigger on legitimate administrative activities or security testing of database functionality.
type: detection
detection_id: 2003974
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL UPDATE statement?
    context: Reveals the exact SQL injection payload and parameter structure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Jetbox CMS application?
    context: Determines if this represents normal application usage or external targeting.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this application?
    context: Identifies additional injection attempts that may be part of the same attack sequence.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "index.php"
        sql_patterns:
          http.uri|contains:
            - "SELECT"
            - "INSERT"
            - "DELETE"
            - "UNION"
            - "DROP"
            - "ALTER"
        condition: selection and sql_patterns
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: What was the application's response to the SQL injection attempt?
    context: Determines if the injection was successful or blocked by the application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
          src_port: '{destination.port}'
          dst_port: '{source.port}'
        timeframe:
          range: +5m
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.content_type
  - question: What other web application vulnerabilities were tested against this server?
    context: Reveals broader reconnaissance or exploitation attempts beyond SQL injection.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          src_ip: '{source.ip}'
        attack_patterns:
          http.uri|contains:
            - "../"
            - "phpinfo"
            - "admin"
            - "config"
            - "passwd"
            - "shadow"
            - "wp-admin"
            - ".bak"
        condition: selection and attack_patterns
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Did the same source IP target other web applications on this network?
    context: Assesses scope of web application scanning or targeted attacks.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        filter:
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.user_agent
  - question: What process was handling HTTP requests on the targeted server?
    context: Identifies the web server software that processed the injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any database-related processes active during the injection attempt?
    context: Determines if database activity correlates with the SQL injection timing.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - postgres.exe
          - sqlservr.exe
          - oracle.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: What files were accessed by the web application during the injection attempt?
    context: Identifies database files or configuration files that may have been compromised.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts experiencing similar Jetbox CMS targeting?
    context: Determines if this is part of a campaign targeting Jetbox CMS installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
