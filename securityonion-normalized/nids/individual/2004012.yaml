name: ET WEB_SPECIFIC_APPS WordPress SQL Injection Attempt -- admin-ajax.php cookie UNION SELECT
id: 1202075
description: |
  Detects SQL injection attempts targeting WordPress admin-ajax.php endpoint through cookie parameters.
  May trigger on legitimate database queries containing UNION SELECT statements or security testing tools.
type: detection
detection_id: 2004012
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full exploitation payload and request structure for analysis.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress admin endpoints?
    context: Establishes baseline for administrative access patterns to WordPress sites.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other WordPress admin endpoints were accessed from this source?
    context: Identifies broader reconnaissance or exploitation attempts against WordPress.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/wp-admin/"
            - "/wp-login"
            - "/wp-json/"
            - "/xmlrpc.php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: What was the server response to the SQL injection attempt?
    context: Determines if the injection was successful or blocked by security controls.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
  - question: Are there signs of successful SQL injection exploitation on the WordPress server?
    context: Looks for indicators of successful database compromise or data extraction.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "/wp-admin/admin-ajax.php"
        suspicious_responses:
          http.status_code: 200
          http.response.body.length|gt: 10000
        condition: selection and suspicious_responses
      fields:
        - http.uri
        - http.status_code
        - http.response.body.length
        - src_ip
  - question: What other external connections occurred from this host?
    context: Identifies additional attack vectors or lateral movement attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting similar WordPress SQL injection attacks?
    context: Determines if this is part of a coordinated campaign against WordPress sites.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What user-agent was used in the SQL injection attempt?
    context: Identifies automated tools or specific attack frameworks being used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: Were there any WordPress plugin enumeration attempts from this source?
    context: Reveals reconnaissance activities targeting WordPress plugin vulnerabilities.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/wp-content/plugins/"
            - "readme.txt"
            - "readme.html"
        condition: selection
      fields:
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Did any WordPress-related processes exhibit unusual activity after the injection attempt?
    context: Identifies potential compromise or exploitation of WordPress processes.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        wordpress_processes:
          Image|contains:
            - "php"
            - "apache"
            - "nginx"
            - "mysql"
        suspicious_commands:
          CommandLine|contains:
            - "SELECT"
            - "UNION"
            - "wp_"
            - "mysql"
        condition: selection and wordpress_processes and suspicious_commands
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Are there other hosts connecting to the same WordPress infrastructure?
    context: Identifies additional sources targeting the same WordPress installation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any files created or modified on the WordPress server after the injection attempt?
    context: Detects potential webshells or malicious files uploaded through SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
        web_directories:
          file.path|contains:
            - "/var/www/"
            - "/htdocs/"
            - "/public_html/"
            - "/wp-content/"
        suspicious_files:
          file.name|endswith:
            - ".php"
            - ".jsp"
            - ".asp"
            - ".aspx"
        condition: selection and web_directories and suspicious_files
      fields:
        - file.path
        - file.name
        - Image
        - User