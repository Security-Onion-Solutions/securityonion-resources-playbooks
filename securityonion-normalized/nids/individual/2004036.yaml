name: ET WEB_SPECIFIC_APPS CubeCart SQL Injection Attempt -- cart.inc.php UNION SELECT
id: 1223400
description: |
  Detects SQL injection attempts targeting CubeCart's cart.inc.php with UNION SELECT statements.
  May trigger on legitimate database queries or security testing against CubeCart installations.
type: detection
detection_id: 2004036
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the cart.inc.php request?
  context: Reveals the specific UNION SELECT syntax and potential data extraction attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally receive requests to CubeCart applications?
  context: Determines if CubeCart access represents normal e-commerce traffic patterns.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled the cart.inc.php request?
  context: Identifies the web application that processed the SQL injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other web requests occurred from the same source around this time?
  context: Reveals broader attack patterns against the web application.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: What database-related files were accessed after the SQL injection attempt?
  context: Identifies potential database file access or backup creation following exploitation.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection and database_files
      database_files:
        file.name|contains:
        - .sql
        - .db
        - .mdb
        - database
        - backup
      selection:
        host.ip: '{destination.ip}'
    fields:
    - file.path
    - file.name
    - Image
    - User
    logsource:
      category: file_event
- question: Are other hosts receiving similar CubeCart SQL injection attempts?
  context: Determines if this is part of a campaign targeting CubeCart installations.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What error responses did the web server return to these requests?
  context: Assesses whether the SQL injection attempts generated database errors.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: cart.inc.php
        src_ip: '{source.ip}'
    fields:
    - http.status_code
    - http.response.body.length
    - http.uri
    logsource:
      category: network
      service: http
- question: Did any PHP processes execute SQL commands after the injection attempt?
  context: Identifies whether the SQL injection resulted in database query execution.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection and php_processes and sql_commands
      php_processes:
        Image|contains: php
      selection:
        host.ip: '{destination.ip}'
      sql_commands:
        CommandLine|contains:
        - mysql
        - SELECT
        - UNION
        - database
    fields:
    - Image
    - CommandLine
    - ParentImage
    - User
    logsource:
      category: process_creation
- question: What is the pattern of requests to cart.inc.php from this source?
  context: Analyzes the frequency and timing of requests to identify automated scanning.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains: cart.inc.php
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - dst_ip
    logsource:
      category: network
      service: http
- question: Were any sensitive files accessed from the CubeCart application directory?
  context: Identifies potential unauthorized access to configuration or data files.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection and sensitive_files
      selection:
        host.ip: '{destination.ip}'
      sensitive_files:
        file.name|contains:
        - config
        - .conf
        - .ini
        - password
        - admin
    fields:
    - file.path
    - file.name
    - Image
    - ProcessGuid
    logsource:
      category: file_event
- question: Did any data exfiltration occur following the SQL injection attempt?
  context: Assesses whether successful exploitation led to data theft.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description