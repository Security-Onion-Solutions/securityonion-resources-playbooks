name: ET WEB_SPECIFIC_APPS CubeCart SQL Injection Attempt -- cart.inc.php ASCII
id: 1209079
description: |
  Detects SQL injection attempts targeting CubeCart cart.inc.php with ASCII function calls.
  May trigger on legitimate application debugging or security testing activities.
type: detection
detection_id: 2004039
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the ASCII and SELECT keywords?
    context: Reveals the full SQL injection payload targeting CubeCart cart.inc.php.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access CubeCart applications?
    context: Determines if HTTP requests to cart.inc.php represent normal application usage.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application processed this SQL injection attempt?
    context: Identifies the specific web server or application handling the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests were made to the CubeCart application?
    context: Identifies additional exploitation attempts or reconnaissance activity.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"cart.inc.php\"\n  condition: selection\nfields:\n  - src_ip\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: What other external connections occurred from the attacking host?
    context: Identifies additional attack vectors or command and control communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting SQL injection against CubeCart applications?
    context: Determines if this is part of a broader campaign targeting CubeCart vulnerabilities.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    http.uri|contains: \"cart.inc.php\"\n    http.uri|contains: \"ASCII(\"\n  filter:\n    src_ip: '{source.ip}'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - dst_ip\n  - http.uri\n  - http.user_agent\n  \n"
  - question: What files were created by the web application after the SQL injection attempt?
    context: Identifies potential web shells or other malicious files created through exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any database-related processes spawned after the injection attempt?
    context: Assesses whether the SQL injection successfully executed database commands.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - sqlservr.exe
          - postgres.exe
          - sqlite3.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Did the web server establish connections to database servers after the attack?
    context: Determines if the SQL injection resulted in unauthorized database access.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: connection\ndetection:\n  selection:\n    src_ip: '{destination.ip}'\n    dst_port: [3306, 1433, 5432, 1521, 27017]\n  condition: selection\nfields:\n  - dst_ip\n  - dst_port\n  - network.protocol\n  - connection.state\n  \n"
  - question: Are there other alerts involving the same source IP address?
    context: Provides context about the attacker's broader activities and campaign scope.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip