name: ET WEB_SPECIFIC_APPS PHPEcho CMS SQL Injection Attempt -- gallery.php id ASCII
id: 1222873
description: |
  Detects SQL injection attempts targeting PHPEcho CMS gallery.php using ASCII function.
  May trigger on legitimate testing of web applications or automated security scanning.
type: detection
detection_id: 2004045
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the gallery.php request?
    context: Reveals the specific ASCII-based SQL injection technique being attempted.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access PHPEcho CMS gallery functionality?
    context: Determines if gallery.php access represents normal application usage.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies additional attack vectors targeting the same application.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains:\n      - \"SELECT\"\n      - \"UNION\"\n      - \"ASCII(\"\n      - \"CHAR(\"\n      - \"OR 1=1\"\n      - \"' OR '\"\n      - \"CONCAT(\"\n  condition: selection\nfields:\n  - src_ip\n  - http.uri\n  - http.user_agent\n  - http.method\n  \n"
  - question: What user-agent was used for the SQL injection attempt?
    context: Identifies the tool or browser used for the attack attempt.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"gallery.php\"\n  condition: selection\nfields:\n  - http.user_agent\n  - http.method\n  - http.uri\n  \n"
  - question: Are other hosts attempting similar PHPEcho CMS exploits?
    context: Determines if this is part of a coordinated campaign targeting PHPEcho installations.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    http.uri|contains: \"gallery.php\"\n    http.uri|contains: \"ASCII(\"\n  filter:\n    src_ip: '{source.ip}'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - dst_ip\n  - http.uri\n  - http.user_agent\n  \n"
  - question: What other web applications on this server received requests from the same source?
    context: Assesses the scope of reconnaissance or attack attempts against the web server.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n  filter:\n    http.uri|contains: \"gallery.php\"\n  condition: selection and not filter\nfields:\n  - http.uri\n  - http.method\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: Did the web server process generate any new files after the SQL injection attempt?
    context: Identifies potential web shells or malicious files created through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What was the response pattern from the web server to these requests?
    context: Determines if the SQL injection attempts were successful based on HTTP responses.
    range: +/-30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"gallery.php\"\n  condition: selection\nfields:\n  - http.status_code\n  - http.response.body.length\n  - http.uri\n  - http.method\n  \n"
  - question: Are there related alerts involving the same source IP across the organization?
    context: Identifies other attack attempts or malicious activity from the same source.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did any database-related processes show unusual activity during this timeframe?
    context: Detects potential database compromise resulting from successful SQL injection.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - postgres.exe
          - sqlservr.exe
          - oracle.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid