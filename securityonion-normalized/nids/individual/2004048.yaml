name: ET WEB_SPECIFIC_APPS Dokeos SQL Injection Attempt -- courseLog.php scormcontopen UNION SELECT
id: 1221525
description: |
  Detects SQL injection attempts targeting Dokeos courseLog.php with UNION SELECT statements in scormcontopen parameter.
  May trigger on legitimate database queries or security testing activities against Dokeos installations.
type: detection
detection_id: 2004048
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the courseLog.php request?
    context: Reveals the exact UNION SELECT statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive requests to Dokeos courseLog.php?
    context: Determines if access to this specific application component is typical.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled this SQL injection attempt?
    context: Identifies the web application server processing the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other requests were made to this Dokeos installation?
    context: Identifies additional enumeration or exploitation attempts against the same application.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
          http.uri|contains: "dokeos"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were other SQL injection patterns attempted against this web server?
    context: Reveals broader SQL injection attack campaigns targeting the same infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
        sql_patterns:
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
        condition: selection and sql_patterns
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: What files were created by the web server process after this request?
    context: Identifies potential web shells or malicious files created through SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Are other hosts targeting the same Dokeos application?
    context: Determines scope of potential campaign against this web application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did the attacking host attempt to access database backup or configuration files?
    context: Reveals post-exploitation attempts to access sensitive database files.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        file_access:
          http.uri|contains:
            - ".sql"
            - ".bak"
            - "backup"
            - "config"
            - "database"
            - "dump"
        condition: selection and file_access
      fields:
        - http.method
        - http.uri
        - http.status_code
  - question: What is the pattern of database-related error responses from this web server?
    context: Identifies information disclosure through database error messages.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
        error_codes:
          http.status_code:
            - 500
            - 502
            - 503
        condition: selection and error_codes
      fields:
        - src_ip
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Are there related alerts involving SQL injection attempts across the organization?
    context: Identifies coordinated SQL injection campaigns targeting multiple applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What lateral movement occurred from the web server after this SQL injection attempt?
    context: Detects potential privilege escalation or network traversal following successful exploitation.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport