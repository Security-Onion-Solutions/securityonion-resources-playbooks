name: ET WEB_SPECIFIC_APPS My Little Forum SQL Injection Attempt -- user.php id DELETE
id: 1208901
description: |
  Detects SQL injection attempts targeting My Little Forum's user.php page with DELETE statements.
  May trigger on legitimate database queries or penetration testing activities.
type: detection
detection_id: 2004098
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full injection payload and parameters used in the attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the My Little Forum application?
    context: Determines if this represents typical usage patterns for this web application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection to the forum application?
    context: Identifies the web server process handling the potentially malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests were made to the forum application from this source?
    context: Reveals additional exploitation attempts or reconnaissance activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: ".php"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were any database-related files accessed or modified after this request?
    context: Identifies potential impact on database files or configuration.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|contains:
            - ".db"
            - ".sql"
            - ".mdb"
            - "database"
            - "config"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
  - question: Did the web application process create any new files after receiving this request?
    context: Detects potential webshells or malicious file uploads through SQL injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Are other hosts attempting similar SQL injection attacks against web applications?
    context: Determines if this is part of a coordinated campaign targeting web applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          rule.category: "web-application-attack"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - rule.name
  - question: Did the source IP attempt to access other PHP applications or admin interfaces?
    context: Reveals broader web application targeting or administrative access attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        admin_paths:
          http.uri|contains:
            - "admin"
            - "login"
            - "phpmyadmin"
            - "wp-admin"
            - "manage"
        condition: selection and admin_paths
      fields:
        - dst_ip
        - http.uri
        - http.status_code
  - question: What was the timing pattern of requests from this source IP?
    context: Distinguishes between automated scanning tools and manual exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Were there any DNS queries for domains associated with SQL injection tools or exploit frameworks?
    context: Identifies potential use of automated exploitation tools or command and control.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
          dns.query.name|contains:
            - "sqlmap"
            - "exploit"
            - "hack"
            - "payload"
            - "injection"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: Did any processes show signs of privilege escalation after this HTTP request?
    context: Detects potential system compromise through successful SQL injection exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        privilege_commands:
          CommandLine|contains:
            - "sudo"
            - "su -"
            - "whoami"
            - "id"
            - "net user"
            - "runas"
        condition: selection and privilege_commands
      fields:
        - Image
        - CommandLine
        - User