name: ET WEB_SPECIFIC_APPS gCards SQL Injection Attempt -- getnewsitem.php newsid ASCII
id: 1209329
description: |
  Detects SQL injection attempts targeting the gCards application through the getnewsitem.php script with ASCII function usage.
  May trigger on legitimate database queries using ASCII functions or security testing activities.
type: detection
detection_id: 2004112
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection payload?
    context: Reveals the exact injection string and attack vector used against the gCards application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the gCards application?
    context: Determines if HTTP requests to this web application are typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool was used to send this request?
    context: Identifies the user agent which may indicate automated exploitation tools.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "getnewsitem.php"
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - http.method
  - question: Were there other attempts to access gCards application files from this source?
    context: Identifies broader reconnaissance or exploitation attempts against the web application.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: ".php"
        condition: selection
      fields:
        - http.uri
        - http.status_code
        - http.method
  - question: What was the web server's response to this SQL injection attempt?
    context: Determines if the injection was successful based on HTTP response codes and patterns.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "getnewsitem.php"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are there other SQL injection attempts against different web applications?
    context: Assesses whether this is part of broader web application scanning or exploitation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "DROP"
            - "ASCII"
            - "CHAR"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Did the source IP attempt to access database administration interfaces?
    context: Identifies attempts to access database management tools after SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "phpmyadmin"
            - "phpMyAdmin"
            - "adminer"
            - "mysql"
            - "database"
            - "db"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Are other hosts targeting the same gCards application?
    context: Determines if multiple sources are exploiting the same vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other external connections occurred from this host after the injection attempt?
    context: Identifies potential data exfiltration or additional malicious activity.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were there related alerts involving SQL injection from this source?
    context: Provides context on the scope of SQL injection activity.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip