name: ET WEB_SPECIFIC_APPS w-Agora SQL Injection Attempt -- search.php search_forum DELETE
id: 1221182
description: |
  Detects SQL injection attempts targeting w-Agora forum software's search functionality with DELETE statements.
  May trigger on legitimate database maintenance or security testing activities.
type: detection
detection_id: 2004131
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the exact SQL payload and injection technique used against w-Agora.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access w-Agora forum applications?
  context: Determines if HTTP access to this forum application is typical behavior.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web browser or tool submitted the SQL injection request?
  context: Identifies whether this came from automated tools or manual exploitation attempts.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: search.php
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: What other SQL injection attempts occurred from this source IP?
  context: Reveals if this is part of broader SQL injection reconnaissance or exploitation.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and sql_filter
      selection:
        rule.category|contains: web-application-attack
        src_ip: '{source.ip}'
      sql_filter:
        rule.name|contains:
        - SQL
        - Injection
    fields:
    - rule.name
    - dst_ip
    - http.uri
    logsource:
      category: alert
- question: Did the web server process execute any database-related commands after this request?
  context: Determines if the SQL injection attempt successfully executed on the database.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other external connections occurred from the web server after the injection attempt?
  context: Identifies potential data exfiltration or further exploitation activities.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts receiving similar w-Agora SQL injection attempts?
  context: Determines scope of campaign targeting w-Agora forum installations.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What files were accessed or modified on the web server after the SQL injection?
  context: Identifies potential file system access gained through SQL injection.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .doc
        - .docx
        - .xls
        - .xlsx
        - .pdf
        - .rtf
        - .ppt
        - .pptx
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did any scheduled tasks or services get created after the injection attempt?
  context: Detects persistence mechanisms established through successful SQL injection.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|endswith:
        - schtasks.exe
        - taskeng.exe
        - taskhostw.exe
      condition: selection
    fields:
      - CommandLine
      - Image
      - ProcessGuid
      - User
      - ParentImage
- question: Are there other alerts involving the same source IP across the organization?
  context: Reveals broader attack patterns and campaign scope.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What other web applications were targeted by this source IP?
  context: Identifies if this is part of broader web application reconnaissance.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains: .php
        src_ip: '{source.ip}'
    fields:
    - http.virtual_host
    - http.uri
    - dst_ip
    logsource:
      category: network
      service: http