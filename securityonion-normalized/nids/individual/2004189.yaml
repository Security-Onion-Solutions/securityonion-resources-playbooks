name: ET WEB_SPECIFIC_APPS phpx SQL Injection Attempt -- print.php news_id UNION SELECT
id: 1201915
description: |
  Detects SQL injection attempts targeting phpx application's print.php script via news_id parameter.
  May trigger on legitimate database queries containing UNION SELECT or security testing activities.
type: detection
detection_id: 2004189
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the print.php request?
    context: Reveals the specific UNION SELECT statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the phpx application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other HTTP requests were made to this web server around the same time?
    context: Identifies additional exploitation attempts or reconnaissance activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        filter:
          community_id: '{network.community_id}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were there other SQL injection attempts against different parameters or scripts?
    context: Assesses if this is part of broader SQL injection testing or exploitation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "DELETE"
            - "UPDATE"
            - "DROP"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful based on HTTP response codes and patterns.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.response.mime_type
  - question: Did the source IP attempt to access other vulnerable scripts or applications?
    context: Identifies systematic web application vulnerability scanning or exploitation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - ".php?"
            - "admin"
            - "login"
            - "upload"
            - "config"
        condition: selection
      fields:
        - dst_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Are other hosts attempting similar SQL injection attacks against this web server?
    context: Determines if this represents coordinated attack activity or widespread scanning.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "UNION"
          http.uri|contains: "SELECT"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: What user-agent patterns are associated with these SQL injection attempts?
    context: Identifies automated tools or specific attack frameworks being used.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "UNION"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
        - dst_ip
  - question: Did the web server process establish any outbound connections after the SQL injection attempt?
    context: Assesses whether successful exploitation led to external communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there related web application attack alerts across the organization?
    context: Identifies broader SQL injection campaign or coordinated web application attacks.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category