name: ET WEB_SPECIFIC_APPS Web Wiz Forums SQL Injection Attempt -- page.asp NewsID INSERT
id: 1223192
description: |
  Detects SQL injection attempts targeting Web Wiz Forums through the NewsID parameter in page.asp.
  May trigger on legitimate database operations or security testing activities.
type: detection
detection_id: 2004237
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload and injection technique used against the Web Wiz Forums application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access Web Wiz Forums applications?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies coordinated SQL injection attacks targeting multiple parameters or pages.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UNION"
            - "DROP"
            - "UPDATE"
            - "DELETE"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: Were there successful responses to any of these SQL injection attempts?
    context: Determines if the application responded with data that could indicate successful exploitation.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
          http.status_code: [200, 500]
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: What web application process handled these requests?
    context: Identifies the specific web server or application framework processing the malicious requests.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are other hosts attempting SQL injection against the same web server?
    context: Determines the scope of the attack campaign targeting Web Wiz Forums.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What user-agent patterns are associated with these SQL injection attempts?
    context: Reveals automated tools or browsers used for the injection attacks.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: ["INSERT", "NewsID"]
        condition: selection
      fields:
        - src_ip
        - http.user_agent
        - http.uri
  - question: Were any database-related files accessed after the SQL injection attempts?
    context: Identifies potential data exfiltration or database manipulation following successful injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|contains:
            - ".mdb"
            - ".sql"
            - ".db"
            - ".bak"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Did any lateral movement occur from the targeted web server?
    context: Assesses whether successful exploitation led to movement within the network.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving SQL injection across the organization?
    context: Identifies broader SQL injection campaign patterns targeting multiple applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What database processes showed unusual activity after the injection attempts?
    context: Reveals database engines that may have processed malicious SQL commands.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|contains:
            - "sqlservr.exe"
            - "mysqld.exe"
            - "postgres.exe"
            - "oracle.exe"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - ParentImage