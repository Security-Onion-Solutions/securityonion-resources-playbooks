name: ET WEB_SPECIFIC_APPS WSN Guest SQL Injection Attempt -- comments.php id DELETE
id: 1222808
description: |
  Detects SQL injection attempts targeting WSN Guest application's comments.php with DELETE statements.
  May trigger on legitimate database operations or security testing activities.
type: detection
detection_id: 2004256
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact SQL payload and injection technique used against comments.php.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the WSN Guest application?
    context: Determines if this represents legitimate application usage or external targeting.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application or service processed this SQL injection request?
    context: Identifies the specific web server or application handling the vulnerable comments.php script.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source around the same time?
    context: Identifies additional attack vectors or reconnaissance attempts against the web application.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Are other hosts attempting similar SQL injection attacks against this application?
    context: Determines if this is part of a coordinated campaign targeting WSN Guest vulnerabilities.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "comments.php"
        sql_injection:
          http.uri|contains:
            - "DELETE"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "UNION"
        condition: selection and sql_injection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: What files were accessed or modified on the web server after this request?
    context: Assesses whether the SQL injection resulted in unauthorized file operations.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any database-related processes show unusual activity after this request?
    context: Identifies potential database compromise or unauthorized data manipulation.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        database_processes:
          Image|contains:
            - "mysql"
            - "mysqld"
            - "postgres"
            - "sqlserver"
            - "oracle"
        condition: selection and database_processes
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Were any administrative or authentication bypass attempts made after the SQL injection?
    context: Determines if the injection was used to escalate privileges or bypass authentication.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          src_ip: '{source.ip}'
        admin_access:
          http.uri|contains:
            - "admin"
            - "login"
            - "auth"
            - "user"
            - "password"
        condition: selection and admin_access
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Are there related alerts involving the same source IP across the organization?
    context: Identifies broader attack patterns or infrastructure targeting multiple systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip