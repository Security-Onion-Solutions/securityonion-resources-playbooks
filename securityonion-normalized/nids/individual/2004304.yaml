name: ET WEB_SPECIFIC_APPS Koan Software Mega Mall SQL Injection Attempt -- order-track.php orderNo DELETE
id: 1209068
description: |
  Detects SQL injection attempts targeting the order-track.php script in Koan Software Mega Mall application.
  May trigger on legitimate database operations or security testing activities.
type: detection
detection_id: 2004304
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the exact SQL payload and injection vector used against the order-track.php script.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the Mega Mall application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web browser or tool was used to submit the SQL injection request?
  context: Identifies whether automated tools or manual browsing generated the request.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: order-track.php
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: What other HTTP requests were made to the web server during this timeframe?
  context: Reveals additional reconnaissance or exploitation attempts against the application.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        community_id: '{network.community_id}'
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.status_code
    logsource:
      category: network
      service: http
- question: Did the SQL injection attempt receive a successful HTTP response?
  context: Determines if the injection payload was processed by the application.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        community_id: '{network.community_id}'
    fields:
    - http.status_code
    - http.response.body.length
    logsource:
      category: network
      service: http
- question: Are other hosts attempting SQL injection against the same application?
  context: Identifies whether this is part of a coordinated attack campaign.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: DELETE
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Did the attacker attempt to access other PHP scripts on the web server?
  context: Reveals broader enumeration or exploitation attempts against the application.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        http.uri|contains: order-track.php
      selection:
        dst_ip: '{destination.ip}'
        http.uri|endswith: .php
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - http.status_code
    logsource:
      category: network
      service: http
- question: What database-related keywords were used in the injection attempt?
  context: Analyzes the SQL injection technique and potential database impact.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - DELETE
        - FROM
        - SELECT
        - INSERT
        - UPDATE
        - DROP
        - UNION
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    logsource:
      category: network
      service: http
- question: Did the web server log any application errors during the injection attempt?
  context: Identifies whether the SQL injection caused database or application errors.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.status_code:
        - 500
        - 502
        - 503
    fields:
    - http.status_code
    - http.uri
    - src_ip
    logsource:
      category: network
      service: http
- question: Are there related alerts involving the same source IP?
  context: Provides context about other malicious activities from this source.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip