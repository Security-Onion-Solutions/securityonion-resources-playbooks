name: ET WEB_SPECIFIC_APPS Grayscale Blog SQL Injection Attempt -- userdetail.php id UPDATE
id: 1209414
description: |
  Detects SQL injection attempts targeting the Grayscale Blog application's userdetail.php script with UPDATE statements.
  May trigger on legitimate database administration activities or security testing.
type: detection
detection_id: 2004354
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the userdetail.php request?
  context: Reveals the exact injection attempt and potential database impact.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the Grayscale Blog application?
  context: Determines if this represents unusual access to the vulnerable application.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What user-agent and source characteristics were used for this injection attempt?
  context: Identifies the client software and potentially automated attack tools.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: userdetail.php
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - src_ip
    - dst_ip
    - http.method
    - http.status_code
    logsource:
      category: network
      service: http
- question: What other web application attacks originated from this source IP?
  context: Assesses whether this is part of broader web application scanning or exploitation.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        rule.category|contains: web-application-attack
        src_ip: '{source.ip}'
    fields:
    - rule.name
    - dst_ip
    - http.uri
    logsource:
      category: alert
- question: Did the web server respond with database error messages or unusual status codes?
  context: Indicates whether the SQL injection attempt was successful or blocked.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection and error_indicators
      error_indicators:
        http.status_code:
        - 500
        - 400
        - 403
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.status_code
    - http.response.body.length
    - http.uri
    logsource:
      category: network
      service: http
- question: Are other hosts being targeted with similar Grayscale Blog exploitation attempts?
  context: Determines the scope of this attack campaign across the organization.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What process was running the web server that received this injection attempt?
  context: Identifies the web application server handling the vulnerable Grayscale Blog.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Did any database-related processes show unusual activity after this request?
  context: Assesses potential database compromise or data manipulation attempts.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|contains:
        - mysql.exe
        - mysqld.exe
        - postgres.exe
        - sqlservr.exe
        - oracle.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: Were any sensitive files accessed or modified on the web server after this injection attempt?
  context: Identifies potential data exfiltration or system compromise following successful injection.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .doc
        - .docx
        - .xls
        - .xlsx
        - .pdf
        - .rtf
        - .ppt
        - .pptx
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: What other external connections occurred from the web server after receiving this injection?
  context: Detects potential reverse shells or data exfiltration channels.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are there signs of lateral movement from the targeted web server?
  context: Determines if successful exploitation led to network propagation.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport