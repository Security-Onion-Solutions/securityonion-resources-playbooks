name: ET WEB_SPECIFIC_APPS Serendipity SQL Injection Attempt -- index.php serendipity UPDATE
id: 1202297
description: |
  Detects SQL injection attempts targeting the Serendipity CMS multiCat parameter in index.php.
  May trigger on legitimate database operations or penetration testing tools scanning for CVE-2007-1326.
type: detection
detection_id: 2004420
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload and parameters used in the Serendipity CMS attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Serendipity CMS application?
    context: Determines if this represents normal administrative activity or external targeting.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process or application handled this HTTP request to index.php?
    context: Identifies the web server or application processing the potential SQL injection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests were made to this web server around the same time?
    context: Reveals if this is part of a broader web application scanning or attack sequence.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          host.ip: '{related.ip}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.transport
        - Image
        - ProcessGuid
        - User
        - CommandLine
  - question: What database or configuration files were accessed after this request?
    context: Determines if the SQL injection attempt resulted in unauthorized file access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any PHP or web shell files created following this request?
    context: Identifies potential web shell uploads or malicious file creation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts attempting similar SQL injection attacks against Serendipity?
    context: Determines if this is part of a coordinated campaign targeting the CMS vulnerability.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did the attacking IP attempt to access other web applications or admin interfaces?
    context: Reveals broader reconnaissance or attack patterns against web infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "admin"
            - "login"
            - "wp-admin"
            - "phpmyadmin"
            - "manager"
            - "console"
        condition: selection
      fields:
        - http.virtual_host
        - http.uri
        - http.method
        - http.status_code
  - question: Were there any successful logins or authentication events from this source?
    context: Assesses whether the SQL injection led to successful application compromise.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          CommandLine|contains:
            - "mysql"
            - "database"
            - "connect"
            - "auth"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Are there other SQL injection attempts targeting different parameters in Serendipity?
    context: Identifies related exploitation attempts against the same CMS installation.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "index.php"
          http.uri|contains: "serendipity"
        sql_patterns:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "DELETE"
            - "DROP"
            - "'"
            - "\""
        condition: selection and sql_patterns
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method