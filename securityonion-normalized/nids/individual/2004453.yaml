name: ET WEB_SPECIFIC_APPS Omegasoft SQL Injection Attempt -- OmegaMw7.asp DELETE
id: 1208984
description: |
  Detects HTTP requests to OmegaMw7.asp containing SQL DELETE statements that may indicate SQL injection attempts.
  May trigger on legitimate administrative database operations or penetration testing activities.
type: detection
detection_id: 2004453
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the request to OmegaMw7.asp?
    context: Reveals the specific DELETE statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Omegasoft application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to the Omegasoft application around this time?
    context: Identifies potential reconnaissance or additional exploitation attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "OmegaMw7.asp"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Were there other SQL injection attempts against different applications from this source?
    context: Assesses whether this is part of broader SQL injection scanning activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_keywords:
          http.uri|contains:
            - "DELETE"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "UNION"
            - "OR 1=1"
            - "' OR '"
        condition: selection and sql_keywords
      fields:
        - http.uri
        - http.virtual_host
        - http.method
        - http.status_code
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful or blocked by security controls.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "OmegaMw7.asp"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri
  - question: Are there signs of successful database access or data extraction?
    context: Identifies potential data exfiltration following SQL injection attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        large_response:
          http.response.body.length|gte: 10000
        condition: selection and large_response
      fields:
        - http.uri
        - http.status_code
        - http.response.body.length
        - http.method
  - question: Did the source attempt to access database backup files or sensitive directories?
    context: Reveals attempts to access database files or administrative interfaces.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        sensitive_paths:
          http.uri|contains:
            - ".bak"
            - ".sql"
            - "/admin"
            - "/backup"
            - "/database"
            - "/db"
            - "phpmyadmin"
            - "myadmin"
        condition: selection and sensitive_paths
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Are other hosts being targeted with similar Omegasoft SQL injection attempts?
    context: Determines scope of the SQL injection campaign across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "OmegaMw7.asp"
        sql_injection:
          http.uri|contains: "DELETE"
        condition: selection and sql_injection
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.method
        - http.status_code
  - question: What user-agent was used for the SQL injection attempt?
    context: Identifies automated tools or manual testing approaches used by the source.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "OmegaMw7.asp"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: Were there any authentication attempts against the web application?
    context: Assesses whether SQL injection was combined with authentication bypass attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        auth_indicators:
          http.uri|contains:
            - "login"
            - "auth"
            - "password"
            - "user"
        condition: selection and auth_indicators
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: Are there related alerts involving this source IP across the organization?
    context: Identifies coordinated attack patterns or compromised source systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip