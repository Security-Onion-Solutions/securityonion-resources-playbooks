name: ET WEB_SPECIFIC_APPS SalesCart Shopping Cart SQL Injection Attempt -- reorder2.asp DELETE
id: 1220472
description: |
  Detects SQL injection attempts targeting SalesCart shopping cart application through DELETE statements in reorder2.asp.
  May trigger on legitimate database administration or application testing activities.
type: detection
detection_id: 2004466
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the DELETE statement?
    context: Reveals the exact SQL injection payload targeting the SalesCart application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the SalesCart application?
    context: Determines if HTTP access to this shopping cart application is typical.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool submitted the SQL injection request?
    context: Identifies whether this appears to be automated scanning or manual exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "reorder2.asp"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other SQL injection patterns were attempted from this source?
    context: Reveals the scope of SQL injection testing or exploitation attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_patterns:
          http.uri|contains:
            - "DELETE"
            - "INSERT"
            - "UPDATE"
            - "SELECT"
            - "UNION"
            - "DROP"
        condition: selection and sql_patterns
      fields:
        - dst_ip
        - http.uri
        - http.user_agent
  - question: Did the web server respond with database errors or unusual status codes?
    context: Indicates whether the SQL injection attempt was successful or caused application errors.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: What other web applications were targeted from this source IP?
    context: Determines if this is part of broader web application reconnaissance or exploitation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        web_apps:
          http.uri|contains:
            - ".asp"
            - ".php"
            - ".jsp"
            - "admin"
            - "login"
            - "cart"
        condition: selection and web_apps
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Are other hosts being targeted with similar SalesCart SQL injection attempts?
    context: Assesses whether this represents a campaign targeting multiple SalesCart installations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "reorder2.asp"
        sql_injection:
          http.uri|contains: "DELETE"
        condition: selection and sql_injection
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
  - question: What was the timing pattern of requests to the SalesCart application?
    context: Reveals whether this appears to be automated scanning or manual exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did any database administration tools connect after the SQL injection attempt?
    context: Identifies potential follow-up database access or administrative connections.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        db_ports:
          dst_port:
            - 1433  # SQL Server
            - 3306  # MySQL
            - 5432  # PostgreSQL
            - 1521  # Oracle
        condition: selection and db_ports
      fields:
        - src_ip
        - dst_port
        - network.protocol
  - question: Are there related alerts involving the same source IP across the organization?
    context: Identifies coordinated attack patterns or reconnaissance activities.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip