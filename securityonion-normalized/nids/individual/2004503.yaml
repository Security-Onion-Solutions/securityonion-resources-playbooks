name: ET WEB_SPECIFIC_APPS Savas Guestbook SQL Injection Attempt
id: 1222940
description: |
  Detects SQL injection attempts targeting Savas Guestbook application's add2.php page through the country parameter.
  May trigger on legitimate testing, security scanning, or actual exploitation attempts against vulnerable guestbook installations.
type: detection
detection_id: 2004503
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the add2.php request?
  context: Reveals the specific injection technique and SQL commands being attempted.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally receive requests to the add2.php guestbook script?
  context: Determines if this represents normal application usage or targeted exploitation.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled the SQL injection request?
  context: Identifies the specific web application that processed the malicious request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other requests were made to the guestbook application around this time?
  context: Reveals the full scope of interaction with the vulnerable application.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - add2.php
        - guestbook
    fields:
    - src_ip
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: What other external connections occurred from this host after the SQL injection attempt?
  context: Identifies potential data exfiltration or secondary payload delivery.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts attempting SQL injection against the same guestbook application?
  context: Determines if this is part of a coordinated attack against the web application.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What database-related processes were active during the injection attempt?
  context: Identifies database services that may have processed the malicious SQL commands.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|contains:
        - mysql.exe
        - mysqld.exe
        - postgres.exe
        - sqlservr.exe
        - oracle.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: Were any database files accessed or modified after the injection attempt?
  context: Assesses whether the SQL injection successfully accessed database files.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.name|contains:
        - .mdb
        - .sql
        - .db
        - .sqlite
        host.ip: '{destination.ip}'
      timeframe:
      - +30m
    fields:
    - file.path
    - file.name
    - Image
    - User
    logsource:
      category: file_event
- question: Did the web application create any new files after processing the SQL injection?
  context: Identifies files that may have been created through successful exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Are there other SQL injection attempts targeting different web applications?
  context: Determines if this is part of a broader web application attack campaign.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        dst_ip: '{destination.ip}'
      selection:
        http.uri|contains:
        - SELECT
        - UNION
        - INSERT
        - UPDATE
        - DELETE
        - DROP
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.virtual_host
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What user-agent pattern is associated with these SQL injection attempts?
  context: Identifies automated tools or browsers used for the attack.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains: SELECT
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.virtual_host
    - http.user_agent
    - http.uri
    logsource:
      category: network
      service: http
- question: Are there related alerts indicating successful web application compromise?
  context: Correlates with other security events that may indicate successful exploitation.
  range: +/-4h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip