name: ET WEB_SPECIFIC_APPS My Datebook SQL Injection Attempt -- diary.php delete INSERT
id: 1202346
description: |
  Detects SQL injection attempts targeting My Datebook application's diary.php delete parameter.
  May trigger on legitimate database operations or security testing of the application.
type: detection
detection_id: 2004614
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full payload structure and injection technique used against diary.php.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the My Datebook application?
    context: Determines if this represents unusual access to the vulnerable application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies broader SQL injection campaign targeting the same infrastructure.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains:\n      - \"INSERT\"\n      - \"SELECT\"\n      - \"UPDATE\"\n      - \"DELETE\"\n      - \"UNION\"\n      - \"'\"\n      - \"OR 1=1\"\n      - \"AND 1=1\"\n  condition: selection\nfields:\n  - src_ip\n  - http.uri\n  - http.user_agent\n  - http.method\n  \n"
  - question: What web application process handled the SQL injection request?
    context: Identifies the specific web server or application processing the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any database-related processes executed after the SQL injection attempt?
    context: Determines if the injection attempt resulted in database operations or system commands.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - sqlservr.exe
          - postgres.exe
          - oracle.exe
          - cmd.exe
          - powershell.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: What other external connections occurred from this web server?
    context: Identifies potential data exfiltration or additional malicious communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting SQL injection against My Datebook applications?
    context: Determines scope of coordinated attacks against this application type.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    http.uri|contains: \"diary.php\"\n    http.uri|contains: \"delete=\"\n    http.uri|contains: \"INSERT\"\n  filter:\n    src_ip: '{source.ip}'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - dst_ip\n  - http.uri\n  - http.user_agent\n  \n"
  - question: What files were created on the web server after the SQL injection attempt?
    context: Identifies web shells, backdoors, or other files created through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the attacker attempt to access other vulnerable scripts on this server?
    context: Reveals broader reconnaissance or exploitation attempts against the web application.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n    http.uri|contains:\n      - \".php\"\n      - \".asp\"\n      - \".jsp\"\n      - \"admin\"\n      - \"login\"\n      - \"upload\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - http.status_code\n  - http.user_agent\n  \n"
  - question: What user-agent pattern was used in the SQL injection attempt?
    context: Identifies automated tools or attack frameworks used in the exploitation.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    community_id: '{network.community_id}'\n  condition: selection\nfields:\n  - http.user_agent\n  - http.method\n  - http.uri\n  - src_ip\n  \n"
  - question: Are there related alerts involving the same source IP?
    context: Correlates this attack with other malicious activities from the same attacker.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip