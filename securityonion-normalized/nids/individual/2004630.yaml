name: ET WEB_SPECIFIC_APPS Hunkaray Okul Portaly SQL Injection Attempt
id: 1221817
description: |
  Detects SQL injection attempts against the Hunkaray Okul Portaly application's haberoku.asp page.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2004630
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the haberoku.asp request?
  context: Reveals the exact UNION SELECT statement used in the exploitation attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the Hunkaray Okul Portaly application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What application or process initiated the connection to haberoku.asp?
  context: Identifies the client application responsible for the SQL injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What DNS queries preceded this connection to the web server?
  context: Shows domain resolution patterns that led to this SQL injection attempt.
  range: -5m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip: '{source.ip}'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: What other external connections occurred from this host?
  context: Identifies additional web applications or services that may have been targeted.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts attempting SQL injection against the same web server?
  context: Determines if this is part of a coordinated attack against the application.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What files were created by the process making these web requests?
  context: Identifies downloaded files or tools used in the web application attack.
  range: +/-1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        ProcessGuid: '{event_data.process.entity_id}'
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - User
- question: Did any lateral movement occur from this host after the SQL injection attempt?
  context: Assesses whether the host was used to pivot to other systems after the web attack.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Are there other SQL injection attempts targeting different web applications?
  context: Reveals broader web application attack patterns across the organization.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        src_ip: '{source.ip}'
        http.uri|contains:
          - "UNION"
          - "SELECT"
          - "INSERT"
          - "UPDATE"
          - "DELETE"
          - "DROP"
      condition: selection
    fields:
      - http.uri
      - http.virtual_host
      - dst_ip
      - http.user_agent
- question: What is the pattern of web requests from this source IP?
  context: Analyzes the broader web application attack methodology and timing.
  range: +/-4h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - http.status_code
    - http.virtual_host
    - dst_ip
    logsource:
      category: network
      service: http
- question: Are there related alerts involving the same source IP?
  context: Identifies other security events that may be part of the same attack campaign.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip