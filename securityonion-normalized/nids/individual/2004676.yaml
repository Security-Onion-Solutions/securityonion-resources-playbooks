name: ET WEB_SPECIFIC_APPS Tyger Bug Tracking System (TygerBT) SQL Injection Attempt -- ViewReport.php bug ASCII
id: 1222110
description: |
  Detects SQL injection attempts targeting the ViewReport.php endpoint in Tyger Bug Tracking System.
  May trigger on legitimate database queries or security testing tools probing for CVE-2007-1290.
type: detection
detection_id: 2004676
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the ViewReport.php request?
    context: Reveals the exact malicious SQL commands attempting to exploit CVE-2007-1290.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Tyger Bug Tracking System?
    context: Determines if this represents normal application usage or external attack.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection attempts occurred from this source IP?
    context: Identifies broader SQL injection scanning or attack patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "ASCII"
            - "CHAR"
            - "CONCAT"
        condition: selection
      fields:
        - http.uri
        - http.method
        - dst_ip
        - dst_port
  - question: What web application files were accessed before this SQL injection attempt?
    context: Shows reconnaissance activity leading up to the targeted exploit.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: ".php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: Did the web server return database error messages or unusual responses?
    context: Indicates if the SQL injection attempt was successful or caused application errors.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        error_indicators:
          http.response.body|contains:
            - "SQL syntax"
            - "mysql_fetch"
            - "ORA-"
            - "Microsoft OLE DB"
            - "ODBC"
            - "PostgreSQL"
        condition: selection and error_indicators
      fields:
        - http.status_code
        - http.response.body
        - http.uri
  - question: Are other hosts attempting to exploit the same ViewReport.php vulnerability?
    context: Determines if this is part of a coordinated campaign targeting CVE-2007-1290.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "/ViewReport.php"
          http.uri|contains: "bug="
          http.uri|contains: "SELECT"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - dst_ip
  - question: What user-agent patterns are associated with these SQL injection attempts?
    context: Identifies automated tools or scripts used for the attack.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "SELECT"
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - dst_ip
  - question: Did any processes on the web server exhibit unusual database connectivity after this request?
    context: Assesses if the SQL injection led to unauthorized database access or command execution.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any files created or modified on the web server following the SQL injection attempt?
    context: Identifies potential web shells, backdoors, or data extraction artifacts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there other external connections from the web server that could indicate data exfiltration?
    context: Detects potential data theft following successful SQL injection.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did other applications receive similar SQL injection attempts targeting ASCII functions?
    context: Reveals broader SQL injection campaigns using similar exploitation techniques.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "ASCII"
          http.uri|contains: "SELECT"
        filter:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.virtual_host