name: ET WEB_SPECIFIC_APPS Tyger Bug Tracking System (TygerBT) SQL Injection Attempt -- ViewBugs.php s DELETE
id: 1209283
description: |
  Detects SQL injection attempts targeting the ViewBugs.php component of Tyger Bug Tracking System (TygerBT).
  May trigger on legitimate database operations or security testing of the application.
type: detection
detection_id: 2004680
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full SQL payload and injection technique used against ViewBugs.php.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Tyger Bug Tracking System?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool was used to make this SQL injection request?
    context: Identifies whether this came from automated tools or manual browser access.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "ViewBugs.php"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other attempts were made to access ViewBugs.php from this source?
    context: Reveals patterns of reconnaissance or repeated exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "ViewBugs.php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Were other SQL injection patterns attempted against this web server?
    context: Identifies broader SQL injection campaign targeting the application.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "SELECT"
            - "DELETE"
            - "INSERT"
            - "UPDATE"
            - "UNION"
            - "DROP"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What other web applications on this server were targeted?
    context: Determines scope of web application attack beyond the bug tracking system.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        filter:
          http.uri|contains: "ViewBugs.php"
        condition: selection and not filter
      fields:
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: What was the web server's response to the SQL injection attempt?
    context: Indicates whether the injection was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "ViewBugs.php"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are other hosts attempting similar SQL injection attacks?
    context: Identifies coordinated attack campaign or widespread exploitation attempts.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What DNS queries preceded the SQL injection attempt?
    context: Reveals reconnaissance activity or domain resolution patterns.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Did this source attempt to access database administration tools?
    context: Identifies attempts to access database management interfaces after injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "phpmyadmin"
            - "phpMyAdmin"
            - "adminer"
            - "sqlbuddy"
            - "mysql"
            - "database"
            - "admin"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Were any authentication bypass attempts made against the bug tracking system?
    context: Reveals attempts to bypass login mechanisms in conjunction with SQL injection.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        auth_patterns:
          http.uri|contains:
            - "login"
            - "auth"
            - "signin"
            - "admin"
        condition: selection and auth_patterns
      fields:
        - http.uri
        - http.method
        - http.status_code