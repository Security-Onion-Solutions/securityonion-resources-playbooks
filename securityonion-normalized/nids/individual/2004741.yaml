name: ET WEB_SPECIFIC_APPS NukeSentinel SQL Injection Attempt -- nsbypass.php UPDATE
id: 1220939
description: |
  Detects HTTP requests to nsbypass.php containing SQL UPDATE statements that may indicate SQL injection attacks.
  May trigger on legitimate administrative updates or security testing activities against NukeSentinel applications.
type: detection
detection_id: 2004741
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request targeting nsbypass.php?
    context: Reveals the full SQL injection payload and exploitation details.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access NukeSentinel administrative interfaces?
    context: Determines if this represents normal application administration or suspicious activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What application or browser initiated the SQL injection request?
    context: Identifies whether the request came from legitimate administrative tools or attack frameworks.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests were made to this web server from the same source?
    context: Identifies additional attack attempts or reconnaissance against the web application.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting similar SQL injection attacks against nsbypass.php?
    context: Determines if this is part of a coordinated campaign targeting NukeSentinel vulnerabilities.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were there other SQL injection attempts against this web server?
    context: Identifies broader SQL injection attack patterns beyond this specific request.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "UPDATE"
            - "INSERT"
            - "DELETE"
            - "SELECT"
            - "UNION"
            - "DROP"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: Did any database-related processes show unusual activity after this request?
    context: Assesses whether the SQL injection attempt resulted in database compromise.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|contains:
            - "mysql"
            - "mysqld"
            - "postgres"
            - "sqlserver"
            - "oracle"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid
  - question: Were any administrative files created on the web server after this request?
    context: Identifies files that may have been created through successful SQL injection exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there other alerts related to this attack source or target?
    context: Correlates with other security events involving the same IP addresses.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did this source IP attempt to access other web application vulnerabilities?
    context: Reveals broader attack patterns and exploitation frameworks being used.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/admin"
            - "phpMyAdmin"
            - "/wp-admin"
            - "/login"
            - "/phpmyadmin"
            - "/.env"
            - "/config"
        condition: selection
      fields:
        - dst_ip
        - http.method
        - http.uri
        - http.status_code