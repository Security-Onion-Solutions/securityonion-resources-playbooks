name: ET WEB_SPECIFIC_APPS Ban SQL Injection Attempt -- connexion.php id UPDATE
id: 1220563
description: |
  Detects SQL injection attempts targeting connexion.php with UPDATE queries in the id parameter.
  May trigger on legitimate database operations or security testing activities.
type: detection
detection_id: 2004778
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact SQL injection payload in the connexion.php request?
    context: Reveals the specific UPDATE statement and injection technique being attempted.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access connexion.php on this web server?
    context: Determines if this represents unusual access to the authentication script.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted from this source IP?
    context: Identifies broader SQL injection attack patterns against web applications.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"SELECT\"\n      - \"UNION\"\n      - \"INSERT\"\n      - \"DELETE\"\n      - \"UPDATE\"\n      - \"DROP\"\n      - \"CREATE\"\n      - \"ALTER\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - http.virtual_host\n  - dst_ip\n  \n"
  - question: What web application files were accessed before this SQL injection attempt?
    context: Shows reconnaissance activity targeting the web application structure.
    range: -30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n    http.uri|contains:\n      - \".php\"\n      - \".asp\"\n      - \".jsp\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - http.status_code\n  - http.user_agent\n  \n"
  - question: Are other hosts attempting SQL injection against the same web server?
    context: Determines if this is part of a coordinated attack against the web application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What was the web server's response to the SQL injection attempt?
    context: Indicates whether the injection was successful or blocked.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    community_id: '{network.community_id}'\n  condition: selection\nfields:\n  - http.status_code\n  - http.response.body.length\n  - http.method\n  - http.uri\n  \n"
  - question: Did any database-related processes show unusual activity after this request?
    context: Identifies potential database compromise or defensive responses.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - postgres.exe
          - sqlservr.exe
          - oracle.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: What authentication attempts occurred around the time of the SQL injection?
    context: Shows attempts to bypass authentication through the connexion.php script.
    range: +/-30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n    http.uri|contains:\n      - \"login\"\n      - \"connexion\"\n      - \"auth\"\n      - \"signin\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - http.status_code\n  - http.user_agent\n  \n"
  - question: Are there related SQL injection alerts across the organization?
    context: Identifies broader campaign targeting web applications with SQL vulnerabilities.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What files were created on the web server after the SQL injection attempt?
    context: Detects potential web shell uploads or malicious file creation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the attacking IP attempt to access administrative or sensitive URLs?
    context: Shows privilege escalation attempts following the SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "admin"
            - "manager"
            - "config"
            - "backup"
            - "database"
            - "phpmyadmin"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent