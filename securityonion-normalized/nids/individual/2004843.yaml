name: ET WEB_SPECIFIC_APPS mcRefer SQL Injection Attempt -- install.php bgcolor DELETE
id: 1202223
description: |
  Detects SQL injection attempts targeting mcRefer application install.php with DELETE statements in bgcolor parameter.
  May trigger on legitimate database operations or security testing activities.
type: detection
detection_id: 2004843
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload and SQL injection technique used against install.php.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the mcRefer application install.php?
    context: Determines if this represents unauthorized access to installation scripts.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application processed this SQL injection request?
    context: Identifies the specific web server or application handling the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source around the same time?
    context: Identifies additional attack attempts or reconnaissance activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did this source attempt other SQL injection patterns against web applications?
    context: Reveals broader SQL injection campaign targeting multiple applications.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "DELETE"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "UNION"
            - "' OR "
            - "1=1"
        condition: selection
      fields:
        - dst_ip
        - http.method
        - http.uri
        - http.virtual_host
  - question: What files were created on the web server after this SQL injection attempt?
    context: Identifies potential file uploads or backdoors installed through SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other web servers receiving similar mcRefer SQL injection attempts?
    context: Determines scope of campaign targeting mcRefer applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did the web application establish any external connections after the SQL injection?
    context: Assesses whether the attack resulted in data exfiltration or reverse shells.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other install.php or setup scripts were accessed from this source?
    context: Identifies targeting of installation and configuration scripts across applications.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "install.php"
            - "setup.php"
            - "config.php"
            - "admin.php"
            - "install/"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Are there related alerts involving this source IP across the organization?
    context: Provides broader context of malicious activity from this source.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip