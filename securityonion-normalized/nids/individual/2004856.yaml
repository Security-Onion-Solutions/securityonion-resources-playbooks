name: ET WEB_SPECIFIC_APPS PHP-Nuke SQL Injection Attempt -- modules.php category_id UPDATE
id: 1222880
description: |
  Detects SQL injection attempts targeting PHP-Nuke's modules.php via category_id parameter containing UPDATE SET statements.
  May trigger on legitimate database administration tools or security testing of PHP-Nuke installations.
type: detection
detection_id: 2004856
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the modules.php request?
    context: Reveals the exact injection string and intended database modifications.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access PHP-Nuke modules on this server?
    context: Determines if this represents normal administrative activity or external attack.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What user-agent and source characteristics initiated this SQL injection attempt?
    context: Identifies the client software and connection details for attribution.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "/modules.php"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.user_agent
        - http.method
        - http.uri
        - src_port
  - question: Were there other SQL injection attempts against this PHP-Nuke installation?
    context: Reveals if this is part of a broader attack campaign against the web application.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"/modules.php\"\n  sql_patterns:\n    http.uri|contains:\n      - \"UPDATE\"\n      - \"INSERT\"\n      - \"DELETE\" \n      - \"SELECT\"\n      - \"UNION\"\n      - \"DROP\"\n  condition: selection and sql_patterns\nfields:\n  - src_ip\n  - http.uri\n  - http.method\n  - http.user_agent\n"
  - question: What other web applications on this server received suspicious requests?
    context: Assesses whether the attacker is targeting multiple applications on the same server.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        filter:
          dst_ip: '{destination.ip}'
        suspicious_patterns:
          http.uri|contains:
            - ".php?"
            - "admin"
            - "login"
            - "config"
            - "install"
        condition: selection and filter and suspicious_patterns
      fields:
        - dst_ip
        - http.uri
        - http.method
        - http.status_code
  - question: Did the web server return any error responses to these injection attempts?
    context: Indicates whether the SQL injection attempts were successful or blocked.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "/modules.php"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are other hosts attempting similar PHP-Nuke SQL injection attacks?
    context: Determines if this is part of a coordinated campaign against PHP-Nuke installations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "/modules.php"
        sql_injection:
          http.uri|contains:
            - "category_id="
            - "UPDATE"
            - "SET"
        filter:
          src_ip: '{source.ip}'
        condition: selection and sql_injection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
  - question: What files were accessed on the web server after the SQL injection attempt?
    context: Identifies potential file access or modification following successful injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Was there any process activity on the web server coinciding with the injection attempt?
    context: Reveals if the SQL injection triggered server-side processes or scripts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        web_processes:
          Image|contains:
            - "php"
            - "mysql"
            - "apache"
            - "nginx"
            - "httpd"
        condition: selection and web_processes
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid
  - question: Did this source IP target other web applications with SQL injection patterns?
    context: Assesses the broader scope of the attacker's web application targeting.
    range: +/-12h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n  sql_patterns:\n    http.uri|contains:\n      - \"UPDATE\"\n      - \"INSERT\" \n      - \"SELECT\"\n      - \"UNION\"\n      - \"'\"\n      - \"%27\"\n  filter:\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"/modules.php\"\n  condition: selection and sql_patterns and not filter\nfields:\n  - dst_ip\n  - http.uri\n  - http.user_agent\n  - http.status_code"