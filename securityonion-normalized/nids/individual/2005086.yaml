name: ET WEB_SPECIFIC_APPS ExoPHPDesk SQL Injection Attempt
id: 1221080
description: |
  Detects HTTP requests to faq.php containing SQL injection patterns targeting ExoPHPDesk.
  May trigger on legitimate application testing, security scans, or unusual but valid queries.
type: detection
detection_id: 2005086
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection pattern?
  context: Reveals the exact payload and parameters used in the faq.php attack attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access ExoPHPDesk or similar web applications?
  context: Determines if HTTP requests to this application are typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What process initiated the connection to the ExoPHPDesk application?
  context: Identifies whether the request came from a browser, script, or automated tool.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests occurred from this host around the same time?
  context: Identifies additional web application interactions or scanning patterns.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts attempting similar SQL injection attacks against web applications?
  context: Determines if this is part of a coordinated scanning or attack campaign.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Did this host attempt other SQL injection patterns against different applications?
  context: Reveals broader web application attack patterns beyond ExoPHPDesk.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        src_ip: '{source.ip}'
        http.uri|contains:
          - "UPDATE"
          - "INSERT"
          - "DELETE"
          - "SELECT"
          - "UNION"
          - "DROP"
      filter:
        http.uri|contains: "faq.php"
      condition: selection and not filter
    fields:
      - http.uri
      - http.method
      - dst_ip
      - dst_port
- question: What was the web server's response to the SQL injection attempt?
  context: Determines if the injection was successful or blocked by application defenses.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        community_id: '{network.community_id}'
    fields:
    - http.status_code
    - http.response.body.length
    - dst_ip
    - src_ip
    logsource:
      category: network
      service: http
- question: Were any files created or modified on the web server after this request?
  context: Assesses whether the SQL injection resulted in file system changes.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did the attacking host establish any database connections after the injection attempt?
  context: Identifies potential direct database access following successful exploitation.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_port:
        - 3306
        - 5432
        - 1433
        - 1521
        - 27017
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - dst_port
    - network.protocol
    - connection.state
    logsource:
      category: network
      service: connection
- question: Are there related alerts involving the same source IP across the organization?
  context: Provides broader context for this host's activity and threat assessment.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip