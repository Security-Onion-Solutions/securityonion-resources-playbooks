name: ET WEB_SPECIFIC_APPS MAXdev MDPro SQL Injection Attempt
id: 1246417
description: |
  Detects SQL injection attempts targeting MAXdev MDPro index.php startrow parameter.
  May trigger on legitimate database queries or security testing against this application.
type: detection
detection_id: 2005135
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the startrow parameter?
  context: Reveals the exact injection string and SQL commands being attempted.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the MAXdev MDPro application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled this SQL injection request?
  context: Identifies the application server that processed the malicious request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests occurred from this source to the web server?
  context: Identifies additional web application attack attempts or reconnaissance.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were any database-related files accessed after this SQL injection attempt?
  context: Assesses whether the injection resulted in unauthorized database file access.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection and database_files
      database_files:
        file.name|contains:
        - .db
        - .sql
        - .mdb
        - .sqlite
        - database
      selection:
        host.ip: '{destination.ip}'
    fields:
    - file.path
    - file.name
    - Image
    - ProcessGuid
    logsource:
      category: file_event
- question: Are other hosts attempting SQL injection against the same web application?
  context: Determines scope of SQL injection campaign targeting MAXdev MDPro.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and sql_patterns and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: index.php
      sql_patterns:
        http.uri|contains:
        - SELECT
        - UNION
        - INSERT
        - UPDATE
        - DELETE
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    - http.method
    logsource:
      category: network
      service: http
- question: What was the web server's response to the SQL injection attempt?
  context: Indicates whether the injection was successful or blocked by security controls.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        community_id: '{network.community_id}'
    fields:
    - http.status_code
    - http.response.body.length
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: Did this source attempt SQL injection against other web applications?
  context: Reveals broader web application attack patterns from the same source.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and sql_injection and not filter
      filter:
        dst_ip: '{destination.ip}'
      selection:
        src_ip: '{source.ip}'
      sql_injection:
        http.uri|contains:
        - SELECT
        - UNION
        - ''' OR '
        - 1=1
        - admin'--
    fields:
    - dst_ip
    - http.virtual_host
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Are there related alerts involving the same source IP?
  context: Identifies coordinated attack activities from the same attacker.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
