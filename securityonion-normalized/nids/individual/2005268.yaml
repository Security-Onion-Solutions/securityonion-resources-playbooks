name: ET WEB_SPECIFIC_APPS Easebay Resources Paypal Subscription Manager SQL Injection Attempt
id: 1209554
description: |
  Detects SQL injection attempts targeting the memberlist.php script in Easebay Resources Paypal Subscription Manager.
  May trigger on legitimate database queries containing SELECT statements or security testing activities.
type: detection
detection_id: 2005268
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the memberlist.php request?
  context: Reveals the specific injection technique and SQL commands being attempted.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally receive requests to the admin directory?
  context: Determines if administrative interface access represents unusual activity.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web application process handled this SQL injection attempt?
  context: Identifies the web server or application responsible for processing the request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other requests were made to administrative interfaces on this server?
  context: Reveals additional enumeration or exploitation attempts against admin panels.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - /admin/
        - /administrator/
        - /wp-admin/
        - /phpmyadmin/
    fields:
    - src_ip
    - http.method
    - http.uri
    - http.status_code
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Were any database-related files accessed after this injection attempt?
  context: Identifies potential data access or file manipulation following the attack.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .doc
        - .docx
        - .xls
        - .xlsx
        - .pdf
        - .rtf
        - .ppt
        - .pptx
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: What other SQL injection patterns were attempted from the same source?
  context: Reveals the scope of database exploitation attempts.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - SELECT
        - UNION
        - INSERT
        - UPDATE
        - DELETE
        - DROP
        - EXEC
        - SCRIPT
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.method
    - http.uri
    - http.status_code
    - http.virtual_host
    logsource:
      category: network
      service: http
- question: Are other hosts receiving similar SQL injection attempts?
  context: Determines if this is part of a broader campaign targeting web applications.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What was the response status code for the SQL injection attempt?
  context: Indicates whether the injection was successful or blocked by security controls.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        community_id: '{network.community_id}'
    fields:
    - http.status_code
    - http.response.body.length
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: Were any web shells or malicious scripts uploaded to this server?
  context: Identifies potential post-exploitation file uploads following successful injection.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did any processes execute database commands after this injection attempt?
  context: Reveals whether the SQL injection resulted in actual database operations.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        CommandLine|contains:
        - mysql
        - psql
        - sqlcmd
        - SELECT
        - INSERT
        - UPDATE
        host.ip: '{destination.ip}'
    fields:
    - Image
    - CommandLine
    - User
    - ParentImage
    logsource:
      category: process_creation