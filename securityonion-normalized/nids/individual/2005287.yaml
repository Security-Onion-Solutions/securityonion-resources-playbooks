name: ET WEB_SPECIFIC_APPS Woltlab Burning Board (wBB) SQL Injection Attempt
id: 1221720
description: |
  Detects SQL injection attempts targeting Woltlab Burning Board search.php with UNION SELECT payloads.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2005287
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the UNION SELECT payload?
    context: Reveals the exact SQL injection attempt and parameters used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the wBB forum application?
    context: Determines if HTTP access to this web application is typical for this client.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled this SQL injection attempt?
    context: Identifies the web application that processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests were made to this web server around the same time?
    context: Identifies additional exploitation attempts or reconnaissance activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did the web application return database error messages or unusual responses?
    context: Determines if the SQL injection attempt was successful or returned error information.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri
  - question: Are other hosts attempting similar SQL injection attacks against web applications?
    context: Identifies coordinated attacks or scanning activity targeting SQL injection vulnerabilities.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          rule.category: "web-application-attack"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - alert.severity_label
  - question: What other web application attacks originated from this source IP?
    context: Reveals broader attack patterns or vulnerability scanning from the same source.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip: '{source.ip}'
          rule.category: "web-application-attack"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - alert.severity_label
        - rule.category
  - question: Did any database or web application files get modified after this request?
    context: Assesses potential impact if the SQL injection was successful.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|contains:
            - ".sql"
            - ".db"
            - ".php"
            - ".asp"
            - "config"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Was any lateral movement attempted from the web server after this attack?
    context: Determines if successful exploitation led to further compromise attempts.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What is the geographic location and reputation of the attacking IP address?
    context: Provides threat intelligence context about the source of the attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.transport