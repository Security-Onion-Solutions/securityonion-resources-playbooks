name: ET WEB_SPECIFIC_APPS Joomla! SQL Injection Attempt -- gmail.php DELETE
id: 1223580
description: |
  Detects attempts to exploit CVE-2007-0375 in Joomla! through SQL injection in gmail.php using DELETE statements.
  May trigger on legitimate database operations or security testing tools scanning for legacy vulnerabilities.
type: detection
detection_id: 2005399
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the gmail.php SQL injection attempt?
    context: Reveals the exact payload and parameters used in the potential CVE-2007-0375 exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access Joomla! applications on these servers?
    context: Determines if HTTP requests to these web servers represent normal user behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against these web servers?
    context: Identifies coordinated SQL injection attacks targeting multiple vulnerabilities.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "OR 1=1"
            - "' OR '"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: What other web application vulnerabilities were tested from this source?
    context: Reveals broader web application attack patterns beyond SQL injection.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "../"
            - "..\"
            - "/etc/passwd"
            - "/windows/system32"
            - "<?php"
            - "<script>"
            - "javascript:"
            - "eval("
            - "exec("
        condition: selection
      fields:
        - dst_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: Are other hosts targeting the same Joomla! application with similar requests?
    context: Determines if multiple sources are scanning for the same vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What is the pattern of requests from this source to web applications?
    context: Analyzes the systematic nature of web application testing or attack behavior.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: ".php"
        condition: selection
      fields:
        - dst_ip
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: Did the web server return successful responses to any of these requests?
    context: Identifies potentially successful exploitation attempts based on HTTP response codes.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.status_code:
            - 200
            - 201
            - 202
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: What files were accessed or modified on the web server after these requests?
    context: Identifies potential file system changes resulting from successful SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there related alerts involving the same source IP across the organization?
    context: Reveals coordinated scanning or attack activity targeting multiple systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did any lateral movement occur from hosts that processed these requests?
    context: Assesses whether successful web application compromise led to internal network access.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Were any persistence mechanisms established on systems processing these requests?
    context: Identifies attempts to maintain access following potential web application compromise.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|endswith:
          - schtasks.exe
          - taskeng.exe
          - taskhostw.exe
        condition: selection
      fields:
        - CommandLine
        - Image
        - ProcessGuid
        - User
        - ParentImage