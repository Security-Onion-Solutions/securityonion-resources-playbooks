name: ET WEB_SPECIFIC_APPS Joomla! SQL Injection Attempt -- gmail.php UPDATE
id: 1222018
description: |
  Detects HTTP requests to Joomla's gmail.php containing SQL UPDATE statements targeting CVE-2007-0375.
  May trigger on legitimate database administration tools or automated security scans testing for this vulnerability.
type: detection
detection_id: 2005401
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the gmail.php request?
  context: Reveals the exact UPDATE statement and parameters used in the injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this web server normally receive requests to gmail.php?
  context: Determines if access to this Joomla component is typical for this server.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web application process handled the gmail.php request?
  context: Identifies the specific web server or PHP process that processed the injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests occurred from this source IP?
  context: Identifies additional web application attacks or reconnaissance activities.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were any database-related files accessed after the SQL injection attempt?
  context: Assesses whether the injection successfully accessed or modified database files.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection and db_files
      db_files:
        file.name|contains:
        - .sql
        - .db
        - .mdb
        - database
        - mysql
      selection:
        host.ip: '{destination.ip}'
    fields:
    - file.path
    - file.name
    - Image
    logsource:
      category: file_event
- question: Are other web servers receiving similar Joomla SQL injection attempts?
  context: Determines if this is part of a broader campaign targeting Joomla installations.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What response code did the web server return for the gmail.php request?
  context: Indicates whether the SQL injection attempt was successful or blocked.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        community_id: '{network.community_id}'
        http.uri|contains: gmail.php
    fields:
    - http.status_code
    - http.response.body.length
    - http.method
    logsource:
      category: network
      service: http
- question: Did the source IP attempt to access other vulnerable Joomla components?
  context: Reveals broader enumeration of Joomla vulnerabilities beyond gmail.php.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and joomla_paths
      joomla_paths:
        http.uri|contains:
        - /administrator/
        - /components/
        - /modules/
        - /templates/
        - index.php
        - configuration.php
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were any PHP or web application files modified after the injection attempt?
  context: Identifies potential web shell uploads or application file tampering.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did any lateral movement occur from the web server after the injection attempt?
  context: Assesses whether successful injection led to further network compromise.
  range: +4h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport