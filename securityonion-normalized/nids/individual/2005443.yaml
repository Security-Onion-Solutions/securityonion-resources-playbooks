name: ET WEB_SPECIFIC_APPS Joomla! SQL Injection Attempt -- categories.php text UPDATE
id: 1204825
description: |
  Detects SQL injection attempts targeting Joomla categories.php plugin through text parameter manipulation.
  May trigger on legitimate database maintenance scripts or security testing tools.
type: detection
detection_id: 2005443
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the categories.php request?
  context: Reveals the exact injection string and SQL commands being attempted.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access this Joomla application?
  context: Determines if this represents normal administrative access or external attack.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What other requests were made to this Joomla site from the same source?
  context: Identifies broader reconnaissance or exploitation patterns against the CMS.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: .php
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were other Joomla-specific paths or files accessed during this session?
  context: Reveals enumeration attempts or exploitation of additional Joomla vulnerabilities.
  range: +/-1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - administrator
        - components
        - modules
        - plugins
        - templates
        - joomla
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.status_code
    logsource:
      category: network
      service: http
- question: What was the response pattern to the SQL injection attempt?
  context: Determines if the injection was successful based on HTTP response codes and sizes.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        community_id: '{network.community_id}'
    fields:
    - http.status_code
    - http.response.body.length
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: Are other hosts targeting the same Joomla application with similar requests?
  context: Identifies coordinated attacks or widespread exploitation attempts.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Did this source attempt SQL injection against other web applications?
  context: Reveals broader SQL injection campaign targeting multiple applications.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - UPDATE
        - SELECT
        - INSERT
        - DELETE
        - UNION
        - DROP
        - ALTER
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.virtual_host
    - http.uri
    - http.status_code
    logsource:
      category: network
      service: http
- question: What user-agent pattern was used for these SQL injection attempts?
  context: Identifies automated tools or scripts being used for the attack.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - http.uri
    - dst_ip
    logsource:
      category: network
      service: http
- question: Are there related alerts for this same source IP across the organization?
  context: Provides broader context of malicious activity from this source.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip