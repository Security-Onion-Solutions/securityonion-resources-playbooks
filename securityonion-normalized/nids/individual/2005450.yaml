name: ET WEB_SPECIFIC_APPS Joomla! SQL Injection Attempt -- user.php email SELECT
id: 1223591
description: |
  Detects SQL injection attempts targeting Joomla! user.php with email parameter SELECT queries.
  May trigger on legitimate database queries or security testing of Joomla applications.
type: detection
detection_id: 2005450
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the user.php request?
  context: Reveals the exact injection string and SQL commands being attempted.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access this Joomla application?
  context: Determines if this represents normal user behavior or external attack attempts.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled this SQL injection attempt?
  context: Identifies the specific Joomla installation and web server configuration.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests occurred from this source around the same time?
  context: Identifies additional attack attempts or reconnaissance activity.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were there successful HTTP responses following the injection attempt?
  context: Indicates whether the SQL injection may have succeeded.
  range: +5m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.status_code:
        - 200
        - 301
        - 302
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.status_code
    - http.response.body.length
    logsource:
      category: network
      service: http
- question: Did the web server create or modify any files after this request?
  context: Identifies potential file uploads or configuration changes from successful injection.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Are other hosts attempting similar Joomla SQL injection attacks?
  context: Determines if this is part of a coordinated attack campaign against Joomla sites.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        http.uri|contains: SELECT
    fields:
    - src_ip
    - dst_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What user-agent patterns are associated with these injection attempts?
  context: Identifies automated tools or attack frameworks targeting Joomla vulnerabilities.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains: SELECT
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - http.uri
    - dst_ip
    logsource:
      category: network
      service: http
- question: Did lateral movement occur from the web server after this attack?
  context: Assesses whether successful injection led to further network compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Are there related alerts involving the same source IP?
  context: Provides broader context of attack patterns from this source.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip