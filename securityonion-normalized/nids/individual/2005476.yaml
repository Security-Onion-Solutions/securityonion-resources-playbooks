name: ET WEB_SPECIFIC_APPS Francisco Burzi PHP-Nuke SQL Injection Attempt
id: 1209106
description: |
  Detects attempts to exploit CVE-2007-0372 in PHP-Nuke through SQL injection in the clickurl parameter.
  May trigger on legitimate administration activities or security testing of PHP-Nuke installations.
type: detection
detection_id: 2005476
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload and exploitation method used against the PHP-Nuke application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access PHP-Nuke administration interfaces?
    context: Determines if this represents legitimate administrative access or external exploitation attempts.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled this SQL injection request?
    context: Identifies the specific web application instance that processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were there other HTTP requests to PHP-Nuke modules from this source?
    context: Identifies reconnaissance or additional exploitation attempts against the application.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    src_ip: '{source.ip}'\n    http.uri|contains: \"/modules/\"\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: What other external connections occurred from this host after the SQL injection attempt?
    context: Identifies potential data exfiltration or secondary payload delivery channels.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any PHP or web-related files created after this exploitation attempt?
    context: Detects webshells, backdoors, or other files that may have been created through SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any database-related processes show unusual activity after this request?
    context: Identifies database modifications or data access resulting from the SQL injection.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip: '{destination.ip}'\n    Image|contains:\n      - mysql\n      - mysqld\n      - postgres\n      - psql\n      - sqlite\n  condition: selection\nfields:\n  - Image\n  - CommandLine\n  - User\n  - ParentImage\n  \n"
  - question: Are other hosts attempting similar SQL injection attacks against PHP-Nuke?
    context: Determines if this is part of a coordinated campaign targeting PHP-Nuke installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of requests to the PHP-Nuke advertising module?
    context: Analyzes the sequence of requests to understand the attack methodology.
    range: +/-1h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"/modules/Advertising/\"\n  condition: selection\nfields:\n  - src_ip\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: Did the web application return any error messages that could indicate successful SQL injection?
    context: Identifies database errors or responses that confirm the injection attempt's impact.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          src_ip: '{source.ip}'
        sql_errors:
          http.response.body|contains:
            - "SQL syntax"
            - "mysql_fetch"
            - "ORA-"
            - "PostgreSQL"
            - "Warning: mysql"
            - "valid MySQL result"
            - "MySqlClient"
        condition: selection and sql_errors
      fields:
        - http.status_code
        - http.response.body
        - http.uri