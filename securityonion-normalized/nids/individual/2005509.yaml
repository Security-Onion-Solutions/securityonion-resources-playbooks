name: ET WEB_SPECIFIC_APPS Virtuemart SQL Injection Attempt -- virtuemart_parser.php category_id ASCII
id: 1220803
description: |
  Detects SQL injection attempts targeting VirtueMart virtuemart_parser.php with ASCII function exploitation.
  May trigger on legitimate administrative queries or security testing of VirtueMart installations.
type: detection
detection_id: 2005509
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the virtuemart_parser.php request?
    context: Reveals the specific exploitation technique and potential data being targeted.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access VirtueMart administrative interfaces?
    context: Determines if this represents authorized administrative activity or external attack.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What user agent and source IP made the SQL injection request?
    context: Identifies the client software and origin of the exploitation attempt.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"virtuemart_parser.php\"\n  condition: selection\nfields:\n  - src_ip\n  - http.user_agent\n  - http.uri\n  - http.method\n  \n"
  - question: Were there other SQL injection attempts from the same source?
    context: Assesses whether this is part of a broader web application attack campaign.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"SELECT\"\n      - \"UNION\"\n      - \"INSERT\"\n      - \"DELETE\"\n      - \"UPDATE\"\n  condition: selection\nfields:\n  - dst_ip\n  - http.uri\n  - http.virtual_host\n  - http.user_agent\n  \n"
  - question: What web server process handled the VirtueMart SQL injection request?
    context: Identifies the application server that may have processed the malicious query.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are other VirtueMart installations receiving similar SQL injection attempts?
    context: Determines scope of potential campaign targeting VirtueMart vulnerabilities.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    http.uri|contains: \"virtuemart_parser.php\"\n    http.uri|contains: \"category_id=\"\n    http.uri|contains: \"SELECT\"\n  filter:\n    src_ip: '{source.ip}'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - dst_ip\n  - http.virtual_host\n  - http.uri\n  \n"
  - question: Did the web server create any new files after the SQL injection attempt?
    context: Identifies potential webshells or malicious files created through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were database-related processes spawned after the injection attempt?
    context: Reveals potential database interaction or compromise following the attack.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip: '{destination.ip}'\n    Image|contains:\n      - \"mysql\"\n      - \"mysqld\"\n      - \"psql\"\n      - \"postgres\"\n      - \"sqlite\"\n  condition: selection\nfields:\n  - Image\n  - CommandLine\n  - User\n  - ParentImage\n  \n"
  - question: What other web application attacks occurred from this source IP?
    context: Establishes pattern of web application reconnaissance or exploitation attempts.
    range: +/-12h
    query: "aggregation: false\nlogsource:\n  category: alert\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    rule.category|contains: \"web-application-attack\"\n  filter:\n    document_id: '{soc_id}'\n  condition: selection and not filter\nfields:\n  - dst_ip\n  - rule.name\n  - alert.severity_label\n  - dst_port\n  \n"
  - question: Did the target server establish any external connections after the attack?
    context: Identifies potential data exfiltration or remote access following exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        private_filter:
          dst_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
        condition: selection and not private_filter
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state_description