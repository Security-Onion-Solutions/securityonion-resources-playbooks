name: ET WEB_SPECIFIC_APPS SmE FileMailer SQL Injection Attempt
id: 1246654
description: |
  Detects SQL injection attempts targeting SmE FileMailer application through DELETE statements in URL parameters.
  May trigger on legitimate database administration tools or security testing activities.
type: detection
detection_id: 2005533
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the full malicious payload and injection technique used against the FileMailer application.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the FileMailer application at index.php?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web browser or tool generated this SQL injection request?
  context: Identifies whether this originated from automated tools or manual exploitation attempts.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: index.php
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: Were additional SQL injection patterns attempted from the same source?
  context: Assesses whether this is part of a broader SQL injection attack campaign.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - SELECT
        - INSERT
        - UPDATE
        - DELETE
        - DROP
        - UNION
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - dst_ip
    logsource:
      category: network
      service: http
- question: What other web applications were targeted by the same source IP?
  context: Identifies additional attack vectors and determines scope of web application targeting.
  range: +/-4h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        dst_ip: '{destination.ip}'
      selection:
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.virtual_host
    - http.uri
    - http.method
    logsource:
      category: network
      service: http
- question: Are other hosts attempting similar SQL injections against FileMailer?
  context: Determines if multiple sources are targeting the same vulnerability.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: DELETE
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What was the web server's response to the SQL injection attempt?
  context: Indicates whether the injection was successful or blocked by security controls.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: index.php
        src_ip: '{source.ip}'
    fields:
    - http.status_code
    - http.response_body_len
    - http.uri
    logsource:
      category: network
      service: http
- question: Did the source IP perform reconnaissance before the injection attempt?
  context: Reveals preparation activities that preceded the SQL injection attack.
  range: -1h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        http.uri|contains: DELETE
      selection:
        dst_ip: '{destination.ip}'
        http.method: GET
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Are there related alerts involving the same source IP across the organization?
  context: Identifies coordinated attack patterns and additional compromised systems.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What file activity occurred on the web server after the SQL injection attempt?
  context: Identifies potential file uploads, web shells, or data exfiltration resulting from successful injection.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
