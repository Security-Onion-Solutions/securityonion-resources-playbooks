name: ET WEB_SPECIFIC_APPS SmE FileMailer SQL Injection Attempt -- index.php code SELECT
id: 1246651
description: |
  Detects SQL injection attempts targeting SmE FileMailer's index.php with SELECT statements in the code parameter.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2005536
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the HTTP request?
  context: Reveals the specific SELECT statement and injection technique used against SmE FileMailer.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally receive requests to index.php with code parameters?
  context: Determines if this represents normal application usage or anomalous activity.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web application process handled this SQL injection attempt?
  context: Identifies the specific web server or application processing the malicious request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other SQL injection attempts occurred against this web server?
  context: Identifies additional exploitation attempts that may indicate systematic probing.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - SELECT
        - UNION
        - INSERT
        - UPDATE
        - DELETE
        - DROP
    fields:
    - src_ip
    - http.uri
    - http.method
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What external connections occurred from this web server after the injection attempt?
  context: Identifies potential data exfiltration or additional compromise activities.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What files were created or modified by the web application after this request?
  context: Reveals files that may have been created through successful SQL injection exploitation.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did the web application create any script files after the injection attempt?
  context: Identifies potential web shells or malicious scripts uploaded through SQL injection.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Are other web servers receiving similar SQL injection attempts?
  context: Determines if this is part of a broader campaign targeting SmE FileMailer installations.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What is the pattern of requests from this source IP?
  context: Analyzes the broader attack pattern and methodology used by this source.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.uri
    - http.method
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were any database-related processes spawned after the injection attempt?
  context: Identifies potential command execution through SQL injection vulnerabilities.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|contains:
        - mysql.exe
        - mysqldump.exe
        - sqlcmd.exe
        - psql.exe
        - sqlite3.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: Are there related alerts involving the same source IP?
  context: Correlates this SQL injection attempt with other malicious activities from the same attacker.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
