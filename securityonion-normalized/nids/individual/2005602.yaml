name: ET WEB_SPECIFIC_APPS Okul Web Otomasyon Sistemi SQL Injection Attempt
id: 1222860
description: |
  Detects SQL injection attempts targeting the Okul Web Otomasyon Sistemi application via etkinlikbak.asp.
  May trigger on legitimate application administration or security testing activities.
type: detection
detection_id: 2005602
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload and injection technique used against etkinlikbak.asp.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this web application?
    context: Determines if HTTP access to this server represents normal usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other HTTP requests occurred from this source to the same server?
    context: Identifies additional attack attempts or reconnaissance activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Were there any successful authentication attempts from this source?
    context: Determines if the attacker gained legitimate access before attempting SQL injection.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.status_code: [200, 302]
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
  - question: What other external connections occurred from the web server after this request?
    context: Identifies potential data exfiltration or reverse shell connections following successful injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        private_filter:
          dst_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
        condition: selection and not private_filter
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: Are other hosts attempting similar SQL injection attacks against web applications?
    context: Determines if this is part of a broader campaign targeting web applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          rule.category: "web-application-attack"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - rule.name
  - question: What files were created on the web server after this SQL injection attempt?
    context: Identifies potential web shells or backdoors created through successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|contains:
            - ".asp"
            - ".aspx"
            - ".php"
            - ".jsp"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did any processes execute with database-related commands on the web server?
    context: Identifies potential database manipulation or data extraction activities.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          CommandLine|contains:
            - "sqlcmd"
            - "mysql"
            - "SELECT"
            - "UPDATE"
            - "INSERT"
            - "DELETE"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Were there any other SQL injection attempts against different applications from this source?
    context: Reveals broader attack patterns and other vulnerable applications being targeted.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip: '{source.ip}'
          rule.name|contains: "SQL"
        filter:
          rule.uuid: '{rule.uuid}'
        condition: selection and not filter
      fields:
        - dst_ip
        - rule.name
        - http.uri