name: ET WEB_SPECIFIC_APPS Image Gallery with Access Database SQL Injection Attempt
id: 1209368
description: |
  Detects SQL injection attempts targeting the dispimage.asp script in Image Gallery applications using Access databases.
  May trigger on legitimate database operations or security testing activities.
type: detection
detection_id: 2005644
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the dispimage.asp request?
    context: Reveals the exact UPDATE statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Image Gallery application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to dispimage.asp or similar gallery scripts?
    context: Identifies enumeration attempts or additional exploitation activities.
    range: +/-1h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"dispimage.asp\"\n      - \"gallery\"\n      - \"image.asp\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - http.status_code\n  - dst_ip\n  \n"
  - question: Were there other SQL injection attempts from this source IP?
    context: Assesses if this is part of a broader SQL injection campaign.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"UPDATE\"\n      - \"INSERT\"\n      - \"DELETE\"\n      - \"SELECT\"\n      - \"UNION\"\n      - \"'\"\n      - \"--\"\n  condition: selection\nfields:\n  - http.uri\n  - http.virtual_host\n  - dst_ip\n  \n"
  - question: What web server process handled the SQL injection request?
    context: Identifies the web application server that processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any database or script files modified after the injection attempt?
    context: Determines if the SQL injection resulted in unauthorized file changes.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts targeting the same Image Gallery application?
    context: Identifies if multiple sources are exploiting the same vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did the targeted web server establish any external connections after the injection?
    context: Assesses potential data exfiltration or remote access establishment.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were there successful HTTP responses to the SQL injection attempts?
    context: Determines if the injection attempts received responses indicating success.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"dispimage.asp\"\n    http.status_code:\n      - 200\n      - 302\n      - 500\n  condition: selection\nfields:\n  - http.status_code\n  - http.request.body.length\n  - http.uri\n  \n"
  - question: Are there related SQL injection alerts across the organization?
    context: Identifies coordinated attacks against web applications with database backends.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category