name: ET WEB_SPECIFIC_APPS WordPress SQL Injection Attempt -- wp-trackback.php SELECT
id: 1223208
description: |
  Detects SQL injection attempts targeting WordPress wp-trackback.php with SELECT queries.
  May trigger on legitimate database queries or security scanning tools testing WordPress installations.
type: detection
detection_id: 2005657
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the wp-trackback.php request?
    context: Reveals the specific SELECT query and injection technique being attempted.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive WordPress trackback requests?
    context: Determines if wp-trackback.php access represents normal WordPress functionality.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled this WordPress injection attempt?
    context: Identifies the web application that processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other WordPress URLs were accessed from this source?
    context: Reveals broader enumeration or exploitation attempts against the WordPress installation.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "wp-"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: Were there successful database queries following this injection attempt?
    context: Assesses whether the SQL injection successfully extracted data.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.status_code: [200, 302]
          http.uri|contains: "wp-"
        condition: selection
      fields:
        - http.uri
        - http.status_code
        - http.response.body.length
  - question: What files were accessed by the WordPress process after this request?
    context: Identifies configuration files or database access that may indicate successful exploitation.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other WordPress installations receiving similar SQL injection attempts?
    context: Determines if this is part of a broader campaign targeting WordPress sites.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did the attacking source attempt to access WordPress administrative areas?
    context: Reveals attempts to access wp-admin or other privileged WordPress functionality.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "wp-admin"
            - "wp-login"
            - "wp-config"
            - "wp-includes"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: What is the pattern of requests from this source to the WordPress site?
    context: Analyzes the timing and frequency of requests to identify automated scanning tools.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Were any WordPress plugins or themes targeted in related requests?
    context: Identifies broader WordPress attack surface being exploited.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "wp-content/plugins"
            - "wp-content/themes"
            - "wp-content/uploads"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Are there related alerts involving the same source IP?
    context: Correlates with other attack patterns or vulnerability scanning from the same source.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip