name: ET WEB_SPECIFIC_APPS uniForum SQL Injection Attempt -- wbsearch.aspx SELECT
id: 1209297
description: |
  Detects SQL injection attempts targeting uniForum's wbsearch.aspx page with SELECT statements.
  May trigger on legitimate database queries or security testing tools scanning for SQL injection vulnerabilities.
type: detection
detection_id: 2005663
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the exact payload and parameters used in the potential SQL injection attack.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the uniForum application?
  context: Determines if HTTP access to this web application is normal for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What other SQL injection patterns were attempted against this web server?
  context: Identifies additional SQL injection attempts that may be part of the same attack sequence.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - SELECT
        - UNION
        - INSERT
        - UPDATE
        - DELETE
        - DROP
        - ''''
        - --
        - /*
    fields:
    - src_ip
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: What other external connections occurred from this host?
  context: Identifies additional external communications that may indicate broader attack activity.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts attempting SQL injection against the same web server?
  context: Determines if multiple sources are targeting the same vulnerable application.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What web application files were accessed before and after the SQL injection attempt?
  context: Reveals the attack path and potential file access resulting from successful injection.
  range: +/-1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: .aspx
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.status_code
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Did the web server respond with database error messages?
  context: Identifies server responses that may indicate successful SQL injection or database errors.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.status_code:
        - 500
        - 400
        - 403
        src_ip: '{source.ip}'
    fields:
    - http.status_code
    - http.method
    - http.uri
    - http.response.body.length
    logsource:
      category: network
      service: http
- question: What user agent was used for the SQL injection attempt?
  context: Identifies the client application or tool used for the attack.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        community_id: '{network.community_id}'
    fields:
    - http.user_agent
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: Are there similar SQL injection attempts across other web applications?
  context: Determines if this is part of a broader SQL injection campaign.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What is the timing pattern of requests from this source?
  context: Reveals whether this is automated scanning or manual exploitation attempts.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{related.ip}'
        dst_ip: '{related.ip}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: Did any lateral movement occur from the web server after the SQL injection attempt?
  context: Identifies potential post-exploitation activity if the injection was successful.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport