name: ET WEB_SPECIFIC_APPS Rialto SQL Injection Attempt -- searchoption.asp cat UPDATE
id: 1222926
description: |
  Detects SQL injection attempts targeting Rialto searchoption.asp with UPDATE statements in the cat parameter.
  May trigger on legitimate administrative database operations or penetration testing activities.
type: detection
detection_id: 2005710
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload and injection technique used against searchoption.asp.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Rialto application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool initiated this SQL injection request?
    context: Identifies whether this originated from legitimate browsing or automated tools.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other web applications were accessed from this source IP?
    context: Identifies broader web application reconnaissance or attack patterns.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were there additional SQL injection attempts against other applications?
    context: Reveals systematic SQL injection scanning across multiple targets.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "SELECT"
            - "UPDATE"
            - "INSERT"
            - "DELETE"
            - "UNION"
            - "DROP"
            - "OR 1=1"
            - "' OR '"
        condition: selection
      fields:
        - http.virtual_host
        - http.uri
        - http.user_agent
        - dst_ip
  - question: Are other hosts attempting SQL injection against the same Rialto application?
    context: Determines if multiple sources are targeting this vulnerable application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did the web server respond with database error messages?
    context: Assesses whether the SQL injection revealed database information.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          src_ip: '{source.ip}'
          http.status_code:
            - 500
            - 400
        error_indicators:
          http.response.body|contains:
            - "SQL"
            - "mysql"
            - "ORA-"
            - "PostgreSQL"
            - "Microsoft OLE DB"
            - "ODBC"
        condition: selection or error_indicators
      fields:
        - http.status_code
        - http.response.body
  - question: Were any Rialto application files accessed after the SQL injection attempt?
    context: Identifies potential unauthorized file access following successful injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - ".asp"
            - ".aspx"
            - "admin"
            - "config"
            - "backup"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Are there related alerts indicating broader web application attacks?
    context: Identifies coordinated attacks against multiple web applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did any authentication attempts occur against the Rialto application?
    context: Reveals attempts to access administrative functions after SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        auth_indicators:
          http.uri|contains:
            - "login"
            - "admin"
            - "auth"
            - "logon"
        condition: selection and auth_indicators
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: What is the pattern of requests to searchoption.asp from this source?
    context: Analyzes the frequency and timing of requests indicating automated scanning.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description