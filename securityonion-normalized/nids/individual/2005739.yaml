name: ET WEB_SPECIFIC_APPS Rialto SQL Injection Attempt -- searchkey.asp searchin DELETE
id: 1220478
description: |
  Detects SQL injection attempts targeting Rialto application's searchkey.asp with DELETE statements.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2005739
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the DELETE statement?
  context: Reveals the full SQL injection payload and parameters used in the attack attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the Rialto application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web browser or application initiated this request?
  context: Identifies the client application making the SQL injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests occurred from this host around the same time?
  context: Identifies additional web application attacks or reconnaissance activity.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts attempting similar SQL injection attacks against searchkey.asp?
  context: Determines if this is part of a coordinated attack campaign.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What was the web server's response to the SQL injection attempt?
  context: Assesses whether the injection was successful based on HTTP response codes.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: searchkey.asp
        src_ip: '{source.ip}'
    fields:
    - http.status_code
    - http.response.body.length
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: Did this host attempt other SQL injection patterns against web applications?
  context: Reveals broader SQL injection attack patterns beyond the Rialto application.
  range: +/-6h
  query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n  sql_patterns:\n    http.uri|contains:\n      - \"DELETE\"\n      - \"INSERT\"\n      - \"UPDATE\" \n      - \"DROP\"\n      - \"UNION\"\n      - \"SELECT\"\n  condition: selection and sql_patterns\nfields:\n  - http.uri\n  - http.virtual_host\n  - http.method\n  - http.status_code\n"
- question: What files were accessed by the web server process after the injection attempt?
  context: Identifies potential file system access resulting from successful SQL injection.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .doc
        - .docx
        - .xls
        - .xlsx
        - .pdf
        - .rtf
        - .ppt
        - .pptx
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Are there related alerts involving the same source IP?
  context: Correlates this SQL injection attempt with other security alerts.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: Did the web application establish any unusual database connections after this request?
  context: Detects potential database compromise following the SQL injection attempt.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection and database_ports
      database_ports:
        dst_port:
        - 1433
        - 3306
        - 5432
        - 1521
      selection:
        src_ip: '{destination.ip}'
    fields:
    - dst_ip
    - dst_port
    - network.protocol
    - connection.state
    logsource:
      category: network
      service: connection