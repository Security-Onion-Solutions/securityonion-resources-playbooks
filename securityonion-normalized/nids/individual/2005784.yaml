name: ET WEB_SPECIFIC_APPS PHPKIT SQL Injection Attempt -- comment.php subid SELECT
id: 1221988
description: |
  Detects SQL injection attempts targeting PHPKIT comment.php script with SELECT statements in the subid parameter.
  May trigger on legitimate database queries or security testing tools scanning for CVE-2007-0179.
type: detection
detection_id: 2005784
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the comment.php request?
    context: Reveals the specific SELECT statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access PHPKIT applications?
    context: Determines if web application access patterns are typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled the SQL injection request?
    context: Identifies the specific web application that processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source during the same session?
    context: Identifies additional web application attacks or reconnaissance attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were any database-related files accessed after the SQL injection attempt?
    context: Assesses whether the injection resulted in database file access or modification.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|contains:
            - ".sql"
            - ".db"
            - ".mdb"
            - "database"
            - "backup"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did the web application create any new files after processing the injection request?
    context: Identifies potential webshells or backdoors created through SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts targeting the same PHPKIT application with similar injection attempts?
    context: Determines scope of the SQL injection campaign against this application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "comment.php"
        injection_pattern:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
        filter:
          src_ip: '{source.ip}'
        condition: selection and injection_pattern and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What is the pattern of web application scanning from this source?
    context: Reveals systematic vulnerability scanning or automated attack tools.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        suspicious_patterns:
          http.uri|contains:
            - ".php?"
            - "admin"
            - "login"
            - "config"
            - "install"
        condition: selection and suspicious_patterns
      fields:
        - dst_ip
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did any authentication attempts occur from this source?
    context: Identifies potential credential stuffing or brute force attempts following injection.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        auth_patterns:
          http.uri|contains:
            - "login"
            - "signin"
            - "auth"
            - "admin"
        condition: selection and auth_patterns
      fields:
        - dst_ip
        - http.uri
        - http.method
        - http.status_code
  - question: Are there related alerts involving the same source IP across the organization?
    context: Identifies broader attack campaign targeting multiple web applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip