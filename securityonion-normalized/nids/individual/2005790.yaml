name: ET WEB_SPECIFIC_APPS ShopStoreNow E-commerce Shopping Cart SQL Injection Attempt
id: 1202202
description: |
  Detects SQL injection attempts targeting ShopStoreNow e-commerce shopping cart application via orange.asp CatID parameter.
  May trigger on legitimate database queries or security testing tools scanning for CVE-2007-0142.
type: detection
detection_id: 2005790
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the orange.asp request?
    context: Reveals the specific SELECT statement and injection technique used against the CatID parameter.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the ShopStoreNow application?
    context: Determines if HTTP access to this e-commerce application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to the ShopStoreNow application around this time?
    context: Identifies additional web application interaction patterns and potential reconnaissance.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "/orange.asp"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did the source IP attempt SQL injection against other web applications?
    context: Assesses whether this is part of broader SQL injection scanning activity.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "DELETE"
            - "DROP"
            - "'"
            - "1=1"
            - "admin"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.virtual_host
        - http.user_agent
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful based on HTTP response codes and patterns.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri
  - question: Are there other hosts being targeted with similar ShopStoreNow SQL injection attempts?
    context: Identifies the scope of SQL injection campaign targeting this e-commerce platform.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "/orange.asp"
          http.uri|contains: "CatID="
          http.uri|contains: "SELECT"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
  - question: What other web applications on this server were accessed by the same source?
    context: Reveals additional reconnaissance or exploitation attempts against the web server.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        filter:
          http.uri|contains: "/orange.asp"
        condition: selection and not filter
      fields:
        - http.method
        - http.uri
        - http.virtual_host
        - http.user_agent
        - http.status_code
  - question: Did the source IP perform any DNS queries for additional e-commerce or shopping cart domains?
    context: Identifies potential targeting of other e-commerce platforms or related infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
          dns.query.name|contains:
            - "shop"
            - "store"
            - "cart"
            - "ecommerce"
            - "commerce"
            - "buy"
            - "sell"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: What user-agent pattern was used in the SQL injection attempt?
    context: Identifies the tool or browser pattern associated with the injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: Are there related alerts involving the same source IP across the organization?
    context: Determines if this source has triggered other security alerts indicating broader malicious activity.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip