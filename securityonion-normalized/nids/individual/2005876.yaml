name: ET WEB_SPECIFIC_APPS Simple Web Content Management System SQL Injection Attempt
id: 1209813
description: |
  Detects SQL injection attempts targeting Simple Web Content Management System via page.php parameter manipulation.
  May trigger on legitimate database queries containing UPDATE statements or security testing activities.
type: detection
detection_id: 2005876
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the exact injection payload and attack vector used against page.php.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access this web application?
  context: Determines if HTTP access to this web server represents normal user behavior.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What application or browser initiated this SQL injection request?
  context: Identifies whether the request came from automated tools or manual browsing activity.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests were made to this web server from the same source?
  context: Reveals potential reconnaissance or additional attack attempts against the CMS.
  range: +/-1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were there attempts to access other PHP files or admin interfaces?
  context: Identifies broader reconnaissance against the web application structure.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - .php
        - admin
        - login
        - config
        - database
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.status_code
    logsource:
      category: network
      service: http
- question: Are other hosts targeting the same web application with similar requests?
  context: Determines if this is part of a coordinated attack against the CMS platform.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What SQL injection patterns were attempted against this server?
  context: Reveals the scope and sophistication of database attack attempts.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - UPDATE
        - SELECT
        - INSERT
        - DELETE
        - DROP
        - UNION
        - OR 1=1
        - ''' OR '''
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Did any successful authentication or session establishment occur after the injection attempt?
  context: Assesses whether the SQL injection may have bypassed authentication controls.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection and (success_indicators and login_patterns)
      login_patterns:
        http.uri|contains:
        - login
        - auth
        - session
        - dashboard
        - admin
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
      success_indicators:
        http.status_code:
        - 200
        - 302
    fields:
    - http.method
    - http.uri
    - http.status_code
    logsource:
      category: network
      service: http
- question: Are there related alerts involving the same source IP across the organization?
  context: Identifies broader attack patterns or reconnaissance activities from this source.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What files were created or modified on the web server after the injection attempt?
  context: Identifies potential web shells or configuration changes resulting from successful exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User