name: ET WEB_SPECIFIC_APPS ASP SiteWare autoDealer SQL Injection Attempt -- detail.asp iPro ASCII
id: 1221472
description: |
  Detects SQL injection attempts targeting ASP SiteWare autoDealer application via detail.asp with iPro parameter containing ASCII and SELECT keywords.
  May trigger on legitimate database queries or security testing tools scanning for CVE-2007-0053.
type: detection
detection_id: 2005887
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the detail.asp request?
    context: Reveals the specific injection string and technique used against the SiteWare application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the SiteWare autoDealer application?
    context: Determines if HTTP access to this application represents normal user behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to the detail.asp endpoint?
    context: Identifies additional injection attempts or reconnaissance against the same vulnerable endpoint.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "detail.asp"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: What other SQL injection patterns were attempted from this source?
    context: Reveals broader SQL injection campaign targeting multiple applications or parameters.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "ASCII("
            - "CHAR("
        condition: selection
      fields:
        - dst_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: Are other hosts targeting the same SiteWare application?
    context: Determines scope of attacks against the vulnerable autoDealer installation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What web application is running on the targeted server?
    context: Identifies the specific SiteWare version and other applications that may be vulnerable.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any database-related files accessed after the injection attempt?
    context: Assesses whether the SQL injection resulted in unauthorized data access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|endswith:
            - ".mdb"
            - ".db"
            - ".sql"
            - ".bak"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did the web server process create any new files after the injection?
    context: Identifies potential webshells or backdoors created through successful SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there similar SQL injection alerts across the organization?
    context: Determines if this is part of a coordinated campaign targeting SiteWare installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What user-agent patterns are associated with these injection attempts?
    context: Identifies automated tools or specific attack frameworks being used.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection1:
          src_ip: '{source.ip}'
          http.uri|contains: "detail.asp"
        selection2:
          dst_ip: '{destination.ip}'
          http.uri|contains: "SELECT"
        condition: selection1 or selection2
      fields:
        - src_ip
        - dst_ip
        - http.user_agent
        - http.uri
  - question: Were any authentication bypasses attempted alongside the SQL injection?
    context: Reveals attempts to combine SQL injection with authentication evasion techniques.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "admin"
            - "login"
            - "auth"
            - "password"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code