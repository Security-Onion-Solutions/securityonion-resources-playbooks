name: ET WEB_SPECIFIC_APPS The Address Book SQL Injection Attempt -- user.php language ASCII
id: 1222985
description: |
  Detects SQL injection attempts targeting The Address Book application's user.php language parameter using ASCII functions.
  May trigger on legitimate database queries or security testing tools using similar SQL syntax patterns.
type: detection
detection_id: 2006037
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full payload structure and ASCII function usage in the exploit attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access The Address Book application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies additional exploitation attempts targeting the same application.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains:\n      - \"SELECT\"\n      - \"UNION\"\n      - \"INSERT\"\n      - \"DELETE\"\n      - \"UPDATE\"\n      - \"ASCII(\"\n      - \"CHAR(\"\n  condition: selection\nfields:\n  - src_ip\n  - http.method\n  - http.uri\n  - http.user_agent\n  \n"
  - question: Were there successful responses to any of these injection attempts?
    context: Assesses whether the SQL injection attempts received data or error responses.
    range: +/-30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{destination.ip}'\n    dst_ip: '{source.ip}'\n    community_id: '{network.community_id}'\n  condition: selection\nfields:\n  - http.status_code\n  - http.response.body.length\n  - http.method\n  - http.uri\n  \n"
  - question: What other web application attacks targeted this server?
    context: Reveals broader attack patterns against the web application infrastructure.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: alert\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    rule.category|contains: \"web-application-attack\"\n  filter:\n    document_id: '{soc_id}'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - rule.name\n  - rule.category\n  - alert.severity_label\n  \n"
  - question: Are other hosts attempting similar SQL injection attacks?
    context: Determines scope of SQL injection campaign across the organization.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What user-agent patterns were used in these SQL injection attempts?
    context: Identifies automated tools or manual browser-based attack patterns.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"user.php\"\n  condition: selection\nfields:\n  - src_ip\n  - http.user_agent\n  - http.method\n  - http.uri\n  \n"
  - question: Did the attacking host scan for other vulnerable web applications?
    context: Assesses whether this is part of broader web application reconnaissance.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.status_code:\n      - 200\n      - 404\n      - 403\n      - 500\n  condition: selection\nfields:\n  - dst_ip\n  - http.virtual_host\n  - http.uri\n  - http.status_code\n  \n"
  - question: What files were accessed on the web server during this attack timeframe?
    context: Identifies potential file access or creation following SQL injection attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were there any authentication events on the web server host?
    context: Determines if SQL injection led to authentication bypass or credential access.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{destination.ip}'
          rule.category|contains:
            - "authentication"
            - "brute-force"
            - "credential"
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
        - alert.severity_label