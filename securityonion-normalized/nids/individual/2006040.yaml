name: ET WEB_SPECIFIC_APPS The Address Book SQL Injection Attempt -- user.php defaultLetter UNION SELECT
id: 1209440
description: |
  Detects SQL injection attempts targeting The Address Book application's user.php script via the defaultLetter parameter.
  May trigger on legitimate database queries containing UNION SELECT or security testing activities.
type: detection
detection_id: 2006040
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the user.php request?
  context: Reveals the exact UNION SELECT statement and injection technique used.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access The Address Book application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web browser or tool submitted the SQL injection request?
  context: Identifies whether this originated from automated tools or manual testing.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: user.php
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: What other SQL injection patterns were attempted against this web server?
  context: Identifies additional injection attempts targeting the same application.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - UNION
        - SELECT
        - INSERT
        - DELETE
        - UPDATE
        - DROP
        - ''''
        - --
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Were there successful HTTP responses following the injection attempts?
  context: Determines if any SQL injection attempts received successful responses.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.status_code:
        - 200
        - 302
        - 301
        src_ip: '{source.ip}'
    fields:
    - http.status_code
    - http.uri
    - http.response.body.length
    logsource:
      category: network
      service: http
- question: What web application files were accessed after the SQL injection attempt?
  context: Reveals if the attacker attempted to access additional application components.
  range: +2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - .php
        - .asp
        - .jsp
        - admin
        - config
        - database
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - http.status_code
    logsource:
      category: network
      service: http
- question: Are other hosts attempting SQL injection against the same web server?
  context: Determines if this is part of a coordinated attack against the application.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: UNION
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Did this source IP attempt to access database backup or configuration files?
  context: Identifies attempts to access sensitive files that may contain database credentials.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - .sql
        - .bak
        - backup
        - config.php
        - database.php
        - db_config
        - wp-config
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.status_code
    - dst_ip
    logsource:
      category: network
      service: http
- question: What authentication attempts occurred from this source after the SQL injection?
  context: Reveals if the attacker attempted to use extracted credentials for login.
  range: +4h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.method: POST
        http.uri|contains:
        - login
        - auth
        - signin
        - admin
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.status_code
    - dst_ip
    logsource:
      category: network
      service: http
- question: Are there related alerts indicating successful application compromise?
  context: Identifies other security events that may indicate successful exploitation.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip