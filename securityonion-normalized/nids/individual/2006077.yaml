name: ET WEB_SPECIFIC_APPS The Address Book SQL Injection Attempt -- save.php groupAddName INSERT
id: 1202216
description: |
  Detects SQL injection attempts targeting The Address Book application's save.php script.
  May trigger on legitimate database operations or security testing activities.
type: detection
detection_id: 2006077
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full payload and parameters used in the injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access The Address Book application?
    context: Determines if this represents normal application usage or external attack.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests to save.php occurred from this source?
    context: Identifies patterns of interaction with the vulnerable script.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "save.php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: What web application process handled this SQL injection request?
    context: Identifies the specific service processing the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were there successful responses to requests containing SQL injection patterns?
    context: Assesses whether the injection attempts resulted in successful database access.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "save.php"
          http.status_code: [200, 201, 302]
        condition: selection
      fields:
        - http.status_code
        - http.uri
        - src_ip
        - http.user_agent
  - question: What other external connections occurred from this host after the injection attempt?
    context: Identifies potential data exfiltration or additional attack activity.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts targeting The Address Book application with similar patterns?
    context: Determines scope of attack campaign against this application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created on the web server after the SQL injection attempt?
    context: Identifies potential web shells or malicious files uploaded through injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any database-related processes started after the injection attempt?
    context: Reveals potential database manipulation or data extraction activities.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - mysql.exe
          - mysqldump.exe
          - sqlcmd.exe
          - psql.exe
          - sqlite3.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Are there other SQL injection attempts targeting different applications from the same source?
    context: Identifies broader SQL injection attack patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UNION"
            - "DROP"
            - "UPDATE"
            - "DELETE"
        condition: selection
      fields:
        - http.uri
        - http.virtual_host
        - http.user_agent
        - http.status_code
  - question: What user-agent patterns are associated with these SQL injection attempts?
    context: Reveals automated tools or attack frameworks being used.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: ["save.php", "INSERT"]
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - http.method
  - question: Are there related alerts for web application attacks across the organization?
    context: Determines if this is part of a coordinated attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category