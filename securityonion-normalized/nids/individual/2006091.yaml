name: ET WEB_SPECIFIC_APPS DMXReady Secure Login Manager SQL Injection Attempt
id: 1220626
description: |
  Detects SQL injection attempts targeting DMXReady Secure Login Manager through send_password_preferences.asp.
  May trigger on legitimate testing, security scanning, or actual exploitation attempts against vulnerable applications.
type: detection
detection_id: 2006091
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full payload and parameters used in the attack against send_password_preferences.asp.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access DMXReady applications or similar web services?
    context: Determines if HTTP requests to this application are typical for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application or process is running on the targeted server?
    context: Identifies the specific service potentially vulnerable to this SQL injection attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests were made to the same web server?
    context: Identifies additional reconnaissance or exploitation attempts against the application.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were any files created on the web server after this SQL injection attempt?
    context: Identifies potential web shells or other files created through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts targeting the same web application with similar requests?
    context: Determines if this is part of a broader scanning or attack campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other web applications on this server received requests with SQL injection patterns?
    context: Assesses whether the attacker is testing multiple applications for vulnerabilities.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
        sql_patterns:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "ASCII("
            - "CHAR("
        condition: selection and sql_patterns
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: Did the web server return any database error messages or unusual responses?
    context: Indicates whether the SQL injection attempt was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        error_responses:
          http.status_code:
            - 500
            - 400
            - 403
        condition: selection and error_responses
      fields:
        - http.status_code
        - http.uri
        - http.method
  - question: Are there related alerts involving SQL injection attempts across the organization?
    context: Identifies coordinated SQL injection campaigns targeting multiple systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What authentication or session activity occurred from the attacking IP?
    context: Determines if the attacker attempted to authenticate or maintain persistence.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        auth_patterns:
          http.uri|contains:
            - "login"
            - "auth"
            - "session"
            - "admin"
        condition: selection and auth_patterns
      fields:
        - dst_ip
        - http.method
        - http.uri
        - http.status_code