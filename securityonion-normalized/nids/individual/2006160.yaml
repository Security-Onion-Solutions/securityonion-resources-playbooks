name: ET WEB_SPECIFIC_APPS Efkan Forum SQL Injection Attempt -- default.asp grup UNION SELECT
id: 1223451
description: |
  Detects SQL injection attempts targeting Efkan Forum's default.asp page using UNION SELECT statements in the grup parameter.
  May indicate legitimate penetration testing or automated vulnerability scanning.
type: detection
detection_id: 2006160
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the default.asp request?
  context: Reveals the specific UNION SELECT statement used in the grup parameter.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access Efkan Forum applications?
  context: Determines if HTTP access to this forum application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What other SQL injection patterns were attempted against this web server?
  context: Identifies additional injection attempts targeting the same application.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - UNION
        - SELECT
        - DROP
        - INSERT
        - UPDATE
        - DELETE
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    - http.method
    logsource:
      category: network
      service: http
- question: What other hosts are attempting SQL injection against this web server?
  context: Determines scope of attack activity against the forum application.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are there successful authentication events following these injection attempts?
  context: Assesses whether the SQL injection resulted in unauthorized access.
  range: +2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.status_code:
        - 200
        - 302
        http.uri|contains: login
    fields:
    - src_ip
    - http.status_code
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What web application processes are running on the target server?
  context: Identifies the specific forum application handling these requests.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Were any database-related files accessed after the injection attempt?
  context: Determines if the SQL injection affected database files or backups.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.name|contains:
        - .mdb
        - .sql
        - .db
        - .bak
        - database
        host.ip: '{destination.ip}'
    fields:
    - file.path
    - file.name
    - Image
    - User
    logsource:
      category: file_event
- question: Are other web applications receiving similar SQL injection attempts?
  context: Identifies broader SQL injection campaign patterns.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What is the pattern of requests from this source IP to the web server?
  context: Analyzes the sequence and timing of injection attempts.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{related.ip}'
        dst_ip: '{related.ip}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: Were any administrative or configuration files accessed following the injection?
  context: Determines if the attack progressed beyond SQL injection to file access.
  range: +2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - admin
        - config
        - .conf
        - backup
        - install
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.status_code
    - http.user_agent
    - http.method
    logsource:
      category: network
      service: http
- question: What user-agent patterns are associated with these injection attempts?
  context: Identifies automated tools or consistent patterns used in the attack.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - UNION
        - SELECT
    fields:
    - src_ip
    - http.user_agent
    - http.uri
    - http.method
    logsource:
      category: network
      service: http