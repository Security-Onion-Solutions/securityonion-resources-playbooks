name: ET WEB_SPECIFIC_APPS chatwm SQL Injection Attempt -- SelGruFra.asp txtPas SELECT
id: 1223232
description: |
  Detects SQL injection attempts targeting the chatwm application's SelGruFra.asp page through the txtPas parameter.
  May trigger on legitimate database queries or penetration testing activities.
type: detection
detection_id: 2006177
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the HTTP request?
  context: Reveals the exact SELECT statement and injection technique used against the txtPas parameter.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the chatwm application?
  context: Determines if HTTP requests to this web application are typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What process initiated the connection to the chatwm application?
  context: Identifies the browser or application responsible for the SQL injection attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What DNS queries preceded this SQL injection attempt?
  context: Shows how the attacker discovered or navigated to the vulnerable application.
  range: -5m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip: '{source.ip}'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: What other HTTP requests were made to this web server?
  context: Reveals additional reconnaissance or exploitation attempts against the same target.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Did the web server return database error messages or unusual response codes?
  context: Indicates whether the SQL injection attempt was successful or revealed system information.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection or errors
      errors:
        http.status_code:
        - 500
        - 501
        - 502
        - 503
        - 504
      selection:
        community_id: '{network.community_id}'
    fields:
    - http.status_code
    - http.response.body.length
    logsource:
      category: network
      service: http
- question: Are other hosts attempting SQL injection against the same application?
  context: Determines if this is part of a coordinated attack against the chatwm application.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        http.uri|contains: SELECT
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What other web applications on this server were targeted?
  context: Reveals broader reconnaissance or exploitation attempts against the web server.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and sql_patterns
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
      sql_patterns:
        http.uri|contains:
        - SELECT
        - UNION
        - INSERT
        - UPDATE
        - DELETE
        - DROP
        - ''''
        - '%27'
    fields:
    - http.uri
    - http.method
    - http.status_code
    logsource:
      category: network
      service: http
- question: Did any lateral movement occur from this host after the SQL injection attempt?
  context: Determines if the attack progressed beyond the initial web application compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Were any files created on the web server during this timeframe?
  context: Identifies potential web shells or malicious files uploaded through SQL injection.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Are there related alerts involving the same source IP?
  context: Provides context about other malicious activities from the same attacker.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip