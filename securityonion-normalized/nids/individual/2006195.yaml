name: ET WEB_SPECIFIC_APPS Future Internet SQL Injection Attempt -- index.cfm categoryid SELECT
id: 1222114
description: |
  Detects SQL injection attempts targeting Future Internet application's index.cfm page via the categoryid parameter.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2006195
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the categoryid parameter?
    context: Reveals the exact SQL commands and injection technique being attempted.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this web application?
    context: Determines if this represents unauthorized access to the Future Internet application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this application?
    context: Identifies additional exploitation attempts using different SQL injection techniques.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "/index.cfm"
        sql_patterns:
          http.uri|contains:
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "'"
            - "--"
            - "/*"
        condition: selection and sql_patterns
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: Are other hosts targeting the same application with similar injection attempts?
    context: Determines if this is part of a coordinated attack against the web application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What web application process handled these SQL injection requests?
    context: Identifies the specific application server processing the malicious requests.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any database-related files accessed during this timeframe?
    context: Assesses whether the SQL injection attempt accessed or modified database files.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the application establish any new database connections after the injection attempt?
    context: Identifies potential database access resulting from successful SQL injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        database_ports:
          dst_port:
            - 1433
            - 3306
            - 5432
            - 1521
            - 27017
        condition: selection and database_ports
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: Are there similar alerts across the organization targeting web applications?
    context: Reveals broader SQL injection campaign activity against multiple applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What files were created by the web application process after the injection attempt?
    context: Identifies potential web shells or other malicious files created through SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Were any administrative or configuration files accessed following the injection attempt?
    context: Determines if the attacker gained access to sensitive application configuration.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
        admin_files:
          file.path|contains:
            - "web.config"
            - "application.xml"
            - "database.xml"
            - "config.php"
            - "settings.ini"
            - "admin"
        condition: selection and admin_files
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did any lateral movement occur from the web server after the injection attempt?
    context: Assesses whether successful exploitation led to network propagation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport