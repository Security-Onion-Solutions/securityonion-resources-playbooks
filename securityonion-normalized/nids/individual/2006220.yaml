name: ET WEB_SPECIFIC_APPS Eric GUILLAUME uploader&downloader SQL Injection Attempt
id: 1209946
description: |
  Detects SQL injection attempts targeting the Eric GUILLAUME uploader&downloader application via administre2.php.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2006220
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the administre2.php request?
  context: Reveals the specific UNION SELECT statement and parameters used in the attack attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the Eric GUILLAUME uploader application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web browser or tool was used to make this SQL injection request?
  context: Identifies the user agent which may indicate automated scanning or manual exploitation.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: administre2.php
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - http.method
    - http.status_code
    - http.uri
    logsource:
      category: network
      service: http
- question: What other requests did this source make to the web application?
  context: Identifies reconnaissance activity or additional exploitation attempts.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - http.status_code
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Were any successful HTTP responses returned to the SQL injection attempts?
  context: Assesses whether the application may have processed the malicious SQL queries.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.status_code:
        - 200
        - 301
        - 302
        http.uri|contains: administre2.php
        src_ip: '{source.ip}'
    fields:
    - http.status_code
    - http.uri
    - http.response.body.length
    logsource:
      category: network
      service: http
- question: Did the web server process initiate any database connections after the SQL injection attempt?
  context: Determines if the application server established database connections that could indicate successful injection.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Are other hosts attempting SQL injection against the same web application?
  context: Identifies coordinated attacks or scanning campaigns targeting this vulnerability.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: UNION
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What files were accessed by the web application process during this timeframe?
  context: Identifies potential data access or file manipulation following SQL injection.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .doc
        - .docx
        - .xls
        - .xlsx
        - .pdf
        - .rtf
        - .ppt
        - .pptx
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did any lateral movement occur from the web server after the SQL injection attempt?
  context: Determines if successful exploitation led to further network access.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Were there other SQL injection attempts against different applications from this source?
  context: Reveals broader SQL injection scanning or exploitation campaigns.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        dst_ip: '{destination.ip}'
      selection:
        http.uri|contains:
        - UNION
        - SELECT
        - OR 1=1
        - ''' OR '''
        - admin' --
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.virtual_host
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Are there related alerts involving the same source IP across the organization?
  context: Identifies coordinated attack patterns or compromised systems.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip