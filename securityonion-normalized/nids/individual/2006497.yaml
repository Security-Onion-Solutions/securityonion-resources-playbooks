name: ET WEB_SPECIFIC_APPS Jasmine CMS SQL Injection Attempt -- login.php login_username UPDATE
id: 1209925
description: |
  Detects SQL injection attempts targeting Jasmine CMS login functionality through the login_username parameter.
  May trigger on legitimate database operations or security testing activities.
type: detection
detection_id: 2006497
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the login.php request?
    context: Reveals the exact injection string and UPDATE statement targeting the login system.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive login requests from external sources?
    context: Determines if external access to the login interface represents normal usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process handled this login.php request?
    context: Identifies the specific web server or application responsible for processing the request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other requests occurred from this source IP around the same time?
    context: Identifies additional reconnaissance or exploitation attempts against the web application.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Did the web server process create or modify any files after this request?
    context: Identifies potential webshell uploads or configuration changes resulting from successful injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What database-related processes were active during this timeframe?
    context: Identifies database activity that may indicate successful SQL injection execution.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - postgres.exe
          - sqlservr.exe
          - oracle.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Are other hosts attempting similar SQL injection attacks against login interfaces?
    context: Determines if this is part of a broader campaign targeting CMS login systems.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    http.uri|contains: \n      - \"login.php\"\n      - \"admin.php\"\n      - \"wp-login.php\"\n    http.uri|contains:\n      - \"UPDATE\"\n      - \"INSERT\"\n      - \"DELETE\"\n      - \"SELECT\"\n  filter:\n    src_ip: '{source.ip}'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - dst_ip\n  - http.uri\n  - http.method\n"
  - question: What response codes did the web server return for login attempts from this IP?
    context: Indicates whether the SQL injection attempts were successful or blocked.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "login"
        condition: selection
      fields:
        - http.status_code
        - http.uri
        - http.method
  - question: Did any authentication logs show successful logins during this attack timeframe?
    context: Determines if the SQL injection bypassed authentication controls.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: authentication
      detection:
        selection:
          host.ip: '{destination.ip}'
          event.outcome:
            - "success"
            - "failure"
        condition: selection
      fields:
        - event.outcome
        - user.name
        - source.ip
        - event.action
  - question: Are there other alerts involving this source IP and web application attacks?
    context: Identifies related malicious activity from the same source targeting web applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the pattern of HTTP requests from this IP over the past hour?
    context: Reveals systematic scanning or exploitation patterns against the web application.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent