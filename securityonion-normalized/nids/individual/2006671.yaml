name: ET WEB_SPECIFIC_APPS Invision Gallery SQL Injection Attempt
id: 1221382
description: |
  Detects SQL injection attempts against Invision Gallery's post.php script targeting the img parameter.
  May trigger on legitimate database administration tools or security testing activities.
type: detection
detection_id: 2006671
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact SQL payload and injection method used against the Invision Gallery.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Invision Gallery application?
    context: Determines if this represents unauthorized access to the forum gallery module.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool was used to submit this SQL injection attempt?
    context: Identifies whether automated tools or manual browsers were used for the attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "/forum/modules/gallery/post.php"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other SQL injection patterns were attempted from this source?
    context: Reveals the scope of SQL injection testing or attack attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_patterns:
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UNION"
            - "DROP"
            - "DELETE"
            - "UPDATE"
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.virtual_host
        - dst_ip
  - question: What other Invision Power Board components were accessed from this source?
    context: Determines if this is part of broader reconnaissance against the forum platform.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        invision_patterns:
          http.uri|contains:
            - "/forum/"
            - "/board/"
            - "index.php"
            - "admin.php"
            - "login.php"
        condition: selection and invision_patterns
      fields:
        - http.uri
        - http.virtual_host
        - http.status_code
  - question: Are other hosts attempting similar SQL injection attacks against web applications?
    context: Identifies coordinated attacks or widespread SQL injection campaigns.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What web application processes handled these SQL injection attempts?
    context: Identifies the specific web server or application processing the malicious requests.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from the web server after this attempt?
    context: Assesses whether the SQL injection resulted in additional network activity.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any database-related files accessed after this SQL injection attempt?
    context: Identifies potential data access or file system interaction following the injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
        file_patterns:
          file.name|contains:
            - ".sql"
            - ".db"
            - ".mdb"
            - "database"
            - "backup"
        condition: selection and file_patterns
      fields:
        - file.path
        - file.name
        - Image
  - question: Did any lateral movement occur from the web server after this attack?
    context: Determines if successful exploitation led to internal network reconnaissance.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport