name: ET WEB_SPECIFIC_APPS PWP Technologies The Classified Ad System SQL Injection Attempt
id: 1209888
description: |
  Detects SQL injection attempts targeting PWP Technologies' Classified Ad System through default.asp.
  May trigger on legitimate queries using UNION statements or security testing activities.
type: detection
detection_id: 2006731
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the UNION SELECT statement?
    context: Reveals the full SQL injection payload and parameter manipulation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Classified Ad System application?
    context: Determines if this represents typical user behavior or external probing.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies additional exploitation attempts targeting the same application.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "CREATE"
            - "ALTER"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: What web application files were accessed before this SQL injection attempt?
    context: Shows the attack path and reconnaissance activities.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: ".asp"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: Are other hosts attempting similar SQL injection attacks?
    context: Determines scope of scanning or targeted campaign activity.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What was the web server's response to the SQL injection attempt?
    context: Indicates whether the attack was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri
  - question: Did the attacking host perform database-related network connections?
    context: Identifies potential database access or data exfiltration attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port:
            - 1433  # MSSQL
            - 3306  # MySQL
            - 5432  # PostgreSQL
            - 1521  # Oracle
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - network.bytes_sent
        - network.bytes_received
  - question: What user-agent patterns were used in this attack?
    context: Reveals automated tools or manual browser-based exploitation.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - http.method
  - question: Were any file uploads attempted after the SQL injection?
    context: Identifies attempts to upload web shells or malicious files.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.method: "POST"
        condition: selection
      fields:
        - http.uri
        - http.request.body.length
        - http.status_code
        - http.user_agent
  - question: Are there other alerts involving this source IP?
    context: Provides broader context of malicious activity from this host.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What authentication attempts occurred from this source?
    context: Shows potential credential harvesting or brute force activities.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "login"
            - "auth"
            - "signin"
            - "password"
            - "user"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.request.body.length