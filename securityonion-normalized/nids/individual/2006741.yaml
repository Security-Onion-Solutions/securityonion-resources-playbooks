name: ET WEB_SPECIFIC_APPS Neocrome Seditio SQL Injection Attempt -- ipsearch.admin.php UPDATE
id: 1221077
description: |
  Detects SQL injection attempts targeting Neocrome Seditio's ipsearch.admin.php with UPDATE statements.
  May trigger on legitimate administrative updates or security testing of this application.
type: detection
detection_id: 2006741
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload targeting the ipsearch.admin.php vulnerability.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive administrative requests to ipsearch.admin.php?
    context: Determines if this represents normal administrative activity or an attack.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other HTTP requests were made to this web server around the same time?
    context: Identifies additional reconnaissance or exploitation attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
        filter:
          community_id: '{network.community_id}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: What other external connections occurred from this host after the SQL injection attempt?
    context: Identifies potential data exfiltration or command execution results.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there other SQL injection attempts targeting different applications on this server?
    context: Assesses whether this is part of broader web application scanning.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{destination.ip}'
          rule.category|contains: "web-application-attack"
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - src_ip
        - rule.name
        - alert.severity_label
  - question: Did the web server process create any new files after this request?
    context: Identifies potential webshells or backdoors created through SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were there any database-related processes executed after the SQL injection attempt?
    context: Determines if the SQL injection successfully executed database commands.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|contains:
            - mysql
            - mysqld
            - postgres
            - psql
            - sqlcmd
            - sqlite
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
  - question: Are other web servers receiving similar Neocrome Seditio exploitation attempts?
    context: Determines scope of campaign targeting this specific vulnerability.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of requests from this source IP to web applications?
    context: Identifies systematic scanning or targeted exploitation behavior.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - ".php"
            - ".asp"
            - ".jsp"
            - "admin"
        condition: selection
      fields:
        - dst_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: Did any authentication or session management events occur after the SQL injection?
    context: Identifies potential privilege escalation or account compromise.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{destination.ip}'
        auth_events:
          rule.name|contains:
            - "authentication"
            - "login"
            - "session"
            - "privilege"
        condition: selection and auth_events
      fields:
        - src_ip
        - rule.name
        - alert.severity_label