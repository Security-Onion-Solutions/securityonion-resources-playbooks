name: ET WEB_SPECIFIC_APPS Infinitytechs Restaurants CM SQL Injection Attempt
id: 1221502
description: |
  Detects SQL injection attempts targeting the Infinitytechs Restaurants CM application's res_details.asp page.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2006875
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the HTTP request?
    context: Reveals the exact UNION SELECT statement and parameters used in the attack attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Restaurants CM application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What user-agent and source pattern was used for this SQL injection attempt?
    context: Identifies the client application and potential automation tools used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What other SQL injection attempts occurred against this web server?
    context: Identifies broader SQL injection scanning or attack campaigns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: Were there successful HTTP responses to any SQL injection attempts?
    context: Determines if any injection attempts returned data or succeeded.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.status_code: [200, 302, 500]
        sql_patterns:
          http.uri|contains:
            - "UNION"
            - "SELECT"
        condition: selection and sql_patterns
      fields:
        - src_ip
        - http.status_code
        - http.uri
        - http.response.body.length
  - question: What other web application attacks originated from this source?
    context: Identifies additional web application exploitation attempts from the same source.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        attack_patterns:
          http.uri|contains:
            - "../"
            - "<script"
            - "javascript:"
            - "cmd.exe"
            - "/etc/passwd"
            - "phpinfo"
            - "eval("
        condition: selection and attack_patterns
      fields:
        - dst_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: Are other hosts targeting the same web application with SQL injection?
    context: Determines scope of potential coordinated attack against the application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "res_details.asp"
        sql_injection:
          http.uri|contains:
            - "UNION"
            - "SELECT"
        filter:
          src_ip: '{source.ip}'
        condition: selection and sql_injection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What was the timing pattern of requests from this source?
    context: Reveals whether this was automated scanning or manual exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
  - question: Did this source attempt to access database backup or configuration files?
    context: Identifies attempts to access sensitive database files after SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        file_access:
          http.uri|contains:
            - ".sql"
            - ".bak"
            - ".mdb"
            - ".config"
            - "backup"
            - "dump"
        condition: selection and file_access
      fields:
        - dst_ip
        - http.uri
        - http.status_code
  - question: Are there related alerts involving this source IP across the organization?
    context: Identifies broader attack patterns or campaign activity from this source.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip