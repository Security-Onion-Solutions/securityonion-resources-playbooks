name: ET WEB_SPECIFIC_APPS FipsSHOP SQL Injection Attempt -- index.asp did UPDATE
id: 1208855
description: |
  Detects SQL injection attempts targeting FipsSHOP application's index.asp page using UPDATE statements in the 'did' parameter.
  May trigger on legitimate database operations or security testing of the application.
type: detection
detection_id: 2006909
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload and parameters used in the FipsSHOP exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access FipsSHOP or similar web applications?
    context: Determines if HTTP access to this application represents normal user behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool was used to send this SQL injection request?
    context: User agent analysis may reveal automated tools or manual exploitation attempts.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "index.asp"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: Were additional SQL injection attempts made against this application?
    context: Identifies follow-up exploitation attempts or enumeration of the FipsSHOP application.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "index.asp"
        sql_keywords:
          http.uri|contains:
            - "SELECT"
            - "INSERT"
            - "DELETE"
            - "UPDATE"
            - "UNION"
            - "ORDER BY"
        condition: selection and sql_keywords
      fields:
        - src_ip
        - http.uri
        - http.method
  - question: What other web applications on this server received requests from the same source?
    context: Assesses whether this represents broader web application targeting or scanning.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        filter:
          http.uri|contains: "index.asp"
        condition: selection and not filter
      fields:
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Did the web server return successful responses to the SQL injection attempts?
    context: HTTP status codes indicate whether the injection attempts were processed successfully.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "index.asp"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are other hosts targeting the same FipsSHOP application?
    context: Determines scope of potential campaign or coordinated attack against the vulnerable application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "index.asp"
        sql_patterns:
          http.uri|contains:
            - "UPDATE"
            - "SELECT"
            - "INSERT"
        filter:
          src_ip: '{source.ip}'
        condition: selection and sql_patterns and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What database-related processes were active on the web server during this timeframe?
    context: Identifies database connections that may have processed the malicious SQL statements.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        database_processes:
          Image|contains:
            - "mysql"
            - "sqlservr"
            - "postgres"
            - "oracle"
            - "access"
        condition: selection and database_processes
      fields:
        - Image
        - CommandLine
        - User
  - question: Were any files created or modified on the web server after the SQL injection attempt?
    context: Identifies potential web shells or configuration changes resulting from successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there related alerts indicating successful database compromise?
    context: Correlates with other security events that may indicate successful SQL injection exploitation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip