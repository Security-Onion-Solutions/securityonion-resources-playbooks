name: ET WEB_SPECIFIC_APPS Recipes Complete Website SQL Injection Attempt -- list.php categoryid UPDATE
id: 1222920
description: |
  Detects SQL injection attempts targeting the categoryid parameter in list.php with UPDATE statements.
  May trigger on legitimate database administration or security testing activities.
type: detection
detection_id: 2006950
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the categoryid parameter?
    context: Reveals the full SQL injection payload targeting the Recipes Complete website.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Recipes Complete application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies additional exploitation attempts targeting the same application.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "list.php"
            - "categoryid="
        sql_patterns:
          http.uri|contains:
            - "UPDATE"
            - "INSERT"
            - "DELETE"
            - "SELECT"
            - "UNION"
            - "DROP"
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.method
        - src_ip
        - http.user_agent
  - question: What web application vulnerability scanners were active during this timeframe?
    context: Distinguishes between automated security scanning and targeted exploitation.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        scanner_agents:
          http.user_agent|contains:
            - "sqlmap"
            - "nmap"
            - "nikto"
            - "burp"
            - "acunetix"
            - "scanner"
            - "crawl"
        condition: selection and scanner_agents
      fields:
        - http.user_agent
        - http.uri
        - dst_ip
  - question: What other web applications on this server received similar injection attempts?
    context: Assesses the scope of web application targeting on the affected server.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        sql_injection:
          http.uri|contains:
            - "UPDATE"
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "DELETE"
        filter:
          http.uri|contains: "list.php"
        condition: selection and sql_injection and not filter
      fields:
        - http.uri
        - http.method
        - dst_port
  - question: Are other hosts attempting SQL injection against web applications?
    context: Determines if this is part of a coordinated attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What file upload or download activity occurred on this web server?
    context: Identifies potential webshell deployment following successful SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        upload_methods:
          http.method: ["POST", "PUT"]
        download_patterns:
          http.uri|contains:
            - ".php"
            - ".asp"
            - ".jsp"
            - ".pl"
            - "shell"
            - "cmd"
        condition: selection and (upload_methods or download_patterns)
      fields:
        - http.method
        - http.uri
        - src_ip
        - http.request.body.length
  - question: What database-related processes were executed on hosts behind this web server?
    context: Identifies potential database compromise following SQL injection attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        db_processes:
          Image|contains:
            - "mysql"
            - "mysqld"
            - "sqlcmd"
            - "osql"
            - "psql"
            - "sqlite"
        condition: selection and db_processes
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid
  - question: What authentication attempts occurred against database services?
    context: Reveals potential database credential attacks following web application compromise.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        db_ports:
          dst_port: [3306, 1433, 5432, 1521, 27017]
        condition: selection and db_ports
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - network.bytes
  - question: Were any PHP or web application files modified after the injection attempt?
    context: Identifies webshell deployment or application tampering following exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
        web_files:
          file.name|endswith:
            - ".php"
            - ".asp"
            - ".aspx"
            - ".jsp"
            - ".pl"
            - ".py"
        condition: selection and web_files
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: What network connections were established from the web server after the injection attempt?
    context: Identifies reverse shells or data exfiltration following successful compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        outbound_filter:
          dst_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
        condition: selection and not outbound_filter
      fields:
        - dst_ip
        - dst_port
        - network.bytes
        - connection.state