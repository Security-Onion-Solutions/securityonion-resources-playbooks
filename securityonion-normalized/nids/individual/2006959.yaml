name: ET WEB_SPECIFIC_APPS dev4u CMS SQL Injection Attempt -- index.php gruppe_id INSERT
id: 1209917
description: |
  Detects SQL injection attempts targeting the dev4u CMS gruppe_id parameter via INSERT statements.
  May trigger on legitimate database operations or security testing against dev4u CMS installations.
type: detection
detection_id: 2006959
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full malicious payload and injection technique used against the dev4u CMS.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the dev4u CMS application?
    context: Determines if this represents unauthorized access to the CMS application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection to the dev4u CMS?
    context: Identifies the web server or application handling the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source around the same time?
    context: Identifies additional attack attempts or reconnaissance activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were there successful SQL injection attempts based on HTTP response patterns?
    context: Determines if the injection was successful by analyzing response codes and sizes.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "gruppe_id="
        success_indicators:
          http.status_code: [200, 500]
        condition: selection and success_indicators
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: What database-related files were accessed after the SQL injection attempt?
    context: Identifies potential database file access or backup creation following the attack.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
        database_files:
          file.name|contains:
            - ".sql"
            - ".db"
            - ".mdb"
            - "database"
            - "backup"
        condition: selection and database_files
      fields:
        - file.path
        - file.name
        - Image
  - question: Did the web server establish any external database connections after the attack?
    context: Reveals potential data exfiltration or remote database access attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_port: [1433, 3306, 5432, 1521, 27017]
        private_filter:
          dst_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
        condition: selection and not private_filter
      fields:
        - dst_ip
        - dst_port
        - network.protocol
  - question: Are other hosts targeting the same dev4u CMS application with similar attacks?
    context: Determines if this is part of a coordinated attack campaign against the CMS.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "gruppe_id="
        sql_injection:
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UNION"
            - "DROP"
        exclude_source:
          src_ip: '{source.ip}'
        condition: selection and sql_injection and not exclude_source
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What user-agent patterns are associated with these SQL injection attempts?
    context: Identifies automated tools or specific attack frameworks targeting the CMS.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \n      - \"gruppe_id=\"\n      - \"INSERT\"\n  condition: selection\nfields:\n  - src_ip\n  - http.user_agent\n  - http.uri\n"
  - question: Did any lateral movement occur from the web server after the SQL injection?
    context: Assesses whether the compromise led to further network penetration.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving the same source IP across the organization?
    context: Reveals broader attack patterns and other targeted systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip