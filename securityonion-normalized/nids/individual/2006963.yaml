name: ET WEB_SPECIFIC_APPS dev4u CMS SQL Injection Attempt -- index.php go_target SELECT
id: 1246608
description: |
  Detects SQL injection attempts against dev4u CMS through the go_target parameter in index.php.
  May trigger on legitimate database queries or security testing tools scanning for SQL injection vulnerabilities.
type: detection
detection_id: 2006963
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact SQL payload and injection technique used against the dev4u CMS.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this web application?
    context: Determines if this represents unusual access to the dev4u CMS application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this server?
    context: Identifies coordinated SQL injection attacks targeting the same web application.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "CREATE"
            - "ALTER"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What other web application vulnerabilities were tested from this source?
    context: Reveals broader web application attack patterns from the same source IP.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "../"
            - "../../"
            - "cmd="
            - "exec="
            - "system("
            - "shell_exec"
            - "passthru"
            - "eval("
            - "base64_decode"
            - "file_get_contents"
            - "include("
            - "require("
            - "<script"
            - "javascript:"
            - "onload="
            - "onerror="
        condition: selection
      fields:
        - dst_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: Are other hosts being targeted with similar dev4u CMS SQL injection attempts?
    context: Determines the scope of the campaign targeting dev4u CMS installations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "go_target="
          http.uri|contains: "SELECT"
        filter:
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
  - question: What was the web server's response to the SQL injection attempt?
    context: Indicates whether the injection was successful or blocked by security controls.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri
  - question: What user-agent patterns are associated with these SQL injection attempts?
    context: Identifies automated tools or frameworks used for SQL injection attacks.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "SELECT"
        condition: selection
      fields:
        - http.user_agent
        - dst_ip
        - http.uri
  - question: Were any successful database queries executed after this injection attempt?
    context: Assesses potential data extraction or database compromise following the attack.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.status_code:
            - 200
            - 201
            - 202
          http.uri|contains: "go_target="
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.status_code
        - http.response.body.length
  - question: Are there related alerts indicating compromise of this web server?
    context: Correlates with other security events that may indicate successful exploitation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the geographic and network origin of these SQL injection attempts?
    context: Provides context about the attack source for threat intelligence and blocking decisions.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "go_target="
          http.uri|contains: "SELECT"
        condition: selection
      fields:
        - src_ip
        - http.user_agent
        - http.uri
