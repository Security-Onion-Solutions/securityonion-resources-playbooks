name: ET WEB_SPECIFIC_APPS phpBB SQL Injection Attempt -- admin_hacks_list.php hack_id UNION SELECT
id: 1209423
description: |
  Detects SQL injection attempts targeting phpBB's admin_hacks_list.php with UNION SELECT statements.
  May trigger on legitimate database queries or security testing of phpBB installations.
type: detection
detection_id: 2006970
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the admin_hacks_list.php request?
    context: Reveals the specific UNION SELECT statement used in the exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access phpBB administrative interfaces?
    context: Determines if administrative access to phpBB is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool was used to make this SQL injection request?
    context: Identifies whether this was automated scanning or manual exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "admin_hacks_list.php"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other phpBB pages were accessed from this source?
    context: Reveals reconnaissance or enumeration of phpBB functionality.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        phpbb_pattern:
          http.uri|contains:
            - ".php"
        condition: selection and phpbb_pattern
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Were there other SQL injection attempts from this source?
    context: Identifies broader SQL injection scanning or attack patterns.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_patterns:
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.virtual_host
        - dst_ip
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "admin_hacks_list.php"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
  - question: Are other hosts targeting the same phpBB server?
    context: Determines scope of potential coordinated attack against the phpBB installation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did this source attempt to access other web applications with SQL injection?
    context: Reveals broader web application attack patterns beyond phpBB.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_injection:
          http.uri|contains:
            - "UNION SELECT"
            - "' OR "
            - "1=1"
            - "' AND "
        condition: selection and sql_injection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
  - question: What is the geographic location and hosting information for the attacking IP?
    context: Provides attribution context for the SQL injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - src_ip
        - geoip.country_name
        - geoip.asn
  - question: Are there related SQL injection alerts across the organization?
    context: Identifies coordinated SQL injection campaigns targeting multiple systems.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What authentication attempts occurred before the SQL injection?
    context: Determines if legitimate credentials were attempted before resorting to injection.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        auth_patterns:
          http.uri|contains:
            - "login"
            - "auth"
            - "signin"
          http.method: "POST"
        condition: selection and auth_patterns
      fields:
        - http.uri
        - http.status_code
        - http.user_agent