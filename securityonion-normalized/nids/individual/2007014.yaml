name: ET WEB_SPECIFIC_APPS MidiCart ASP Shopping Cart SQL Injection Attempt
id: 1222065
description: |
  Detects SQL injection attempts targeting MidiCart ASP Shopping Cart applications via the maingroup parameter.
  May trigger on legitimate database queries containing INSERT statements or security testing activities.
type: detection
detection_id: 2007014
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the item_list.asp request?
  context: Reveals the specific INSERT statement and injection technique being attempted.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access MidiCart shopping cart applications?
  context: Determines if HTTP access to this shopping cart platform is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled this SQL injection attempt?
  context: Identifies the web application server that processed the malicious request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other external connections occurred from this host during the attack timeframe?
  context: Identifies additional reconnaissance or attack activity from the same source.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts attempting similar SQL injection attacks against shopping cart applications?
  context: Determines if this is part of a coordinated campaign targeting e-commerce platforms.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What files were created on the web server after the SQL injection attempt?
  context: Identifies potential web shells or malicious files uploaded through SQL injection.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did the attacking host perform reconnaissance on other shopping cart endpoints?
  context: Reveals broader enumeration patterns targeting e-commerce applications.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - cart
        - shop
        - product
        - item
        - catalog
        - checkout
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - http.status_code
    - dst_ip
    logsource:
      category: network
      service: http
- question: Were any scheduled tasks or services created after the SQL injection attempt?
  context: Identifies persistence mechanisms that may have been established through successful exploitation.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|endswith:
        - schtasks.exe
        - taskeng.exe
        - taskhostw.exe
      condition: selection
    fields:
      - CommandLine
      - Image
      - ProcessGuid
      - User
      - ParentImage
- question: Did lateral movement occur from the targeted web server?
  context: Determines if the SQL injection led to further compromise of internal systems.
  range: +4h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Are there other alerts involving this source IP across the organization?
  context: Provides broader context of the attacker's activities and targets.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: Did the attacker attempt other SQL injection techniques against this application?
  context: Reveals the full scope of SQL injection attempts and attack methodology.
  range: +/-4h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - SELECT
        - UNION
        - DROP
        - DELETE
        - UPDATE
        - CREATE
        - ALTER
        - INSERT
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - http.status_code
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What database-related processes were active during the injection attempt?
  context: Identifies database services that may have processed the malicious SQL commands.
  range: +/-30m
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|contains:
        - mysqld.exe
        - sqlservr.exe
        - oracle.exe
        - postgres.exe
        - mysql
        - postgresql
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid