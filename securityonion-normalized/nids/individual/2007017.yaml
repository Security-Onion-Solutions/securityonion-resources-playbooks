name: ET WEB_SPECIFIC_APPS MidiCart ASP Shopping Cart SQL Injection Attempt
id: 1209676
description: |
  Detects SQL injection attempts targeting MidiCart ASP Shopping Cart item_list.asp containing UPDATE statements.
  May trigger on legitimate database administration or automated security testing.
type: detection
detection_id: 2007017
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the item_list.asp request?
    context: Reveals the exact injection string and UPDATE statement used in the attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the MidiCart shopping cart application?
    context: Determines if HTTP access to this shopping cart is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies additional injection attempts that may be part of the same attack sequence.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "UPDATE"
            - "INSERT"
            - "DELETE"
            - "SELECT"
            - "UNION"
            - "DROP"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: What web application vulnerabilities were targeted on this server?
    context: Reveals the scope of web application attack attempts beyond SQL injection.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{destination.ip}'
          rule.category: "web-application-attack"
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Are other shopping cart applications receiving similar SQL injection attempts?
    context: Determines if this is part of a broader campaign targeting e-commerce platforms.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip: '{source.ip}'
          rule.name|contains:
            - "Shopping Cart"
            - "SQL Injection"
            - "item_list"
        condition: selection
      fields:
        - dst_ip
        - rule.name
        - alert.severity_label
  - question: What is the pattern of requests from this source IP to web applications?
    context: Analyzes the broader attack methodology and target selection.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: ".asp"
        condition: selection
      fields:
        - dst_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: Did the web server respond with database error messages?
    context: Indicates whether the SQL injection attempt was successful or revealed database information.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.status_code:
            - 500
            - 200
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: What user-agent patterns are associated with these SQL injection attempts?
    context: Identifies automated tools or browsers used in the attack campaign.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "UPDATE"
        condition: selection
      fields:
        - dst_ip
        - http.user_agent
        - http.uri
  - question: Are there related alerts indicating successful exploitation of this web server?
    context: Assesses whether the SQL injection led to further compromise or data access.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What other hosts are connecting to this potentially vulnerable shopping cart?
    context: Identifies legitimate users who may be affected by a compromised e-commerce site.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "item_list.asp"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.method