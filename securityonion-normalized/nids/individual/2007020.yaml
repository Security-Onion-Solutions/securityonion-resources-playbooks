name: ET WEB_SPECIFIC_APPS MidiCart ASP Shopping Cart SQL Injection Attempt
id: 1222820
description: |
  Detects SQL injection attempts targeting MidiCart ASP Shopping Cart applications via the item_list.asp secondgroup parameter.
  May trigger on legitimate database operations or security testing of shopping cart applications.
type: detection
detection_id: 2007020
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the item_list.asp request?
    context: Reveals the specific INSERT statement and injection technique used against the shopping cart.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access MidiCart shopping cart applications?
    context: Determines if HTTP access to this shopping cart application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or application made this SQL injection request?
    context: Identifies whether this came from automated tools or manual browser activity.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests were made to this shopping cart application?
    context: Reveals additional reconnaissance or exploitation attempts against the same target.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "item_list.asp"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did this source attempt SQL injection against other web applications?
    context: Determines if this is part of broader SQL injection scanning activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UNION"
            - "DROP"
            - "UPDATE"
            - "DELETE"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.method
  - question: Are other hosts targeting the same shopping cart application?
    context: Identifies coordinated attacks or scanning campaigns against this web application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful or returned error messages.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - src_ip
        - dst_ip
  - question: Did the shopping cart application process execute any database queries after this request?
    context: Reveals whether the SQL injection affected backend database operations.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are there other alerts related to web application attacks from this source?
    context: Provides context on whether this is isolated or part of broader web application scanning.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip: '{source.ip}'
          rule.category|contains:
            - "web-application-attack"
            - "attempted-admin"
            - "sql-injection"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - rule.category
        - alert.severity_label