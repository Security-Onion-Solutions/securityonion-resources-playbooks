name: ET WEB_SPECIFIC_APPS Enthrallweb eClassifieds SQL Injection Attempt -- dirSub.asp sid DELETE
id: 1221661
description: |
  Detects SQL injection attempts targeting the dirSub.asp script in Enthrallweb eClassifieds application.
  May trigger on legitimate database maintenance operations or security testing of web applications.
type: detection
detection_id: 2007039
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact SQL injection payload and parameters used in the attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the eClassifieds application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What user-agent and client details were used in the SQL injection request?
    context: Identifies the tool or browser used to submit the malicious request.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    community_id: '{network.community_id}'\n  condition: selection\nfields:\n  - http.user_agent\n  - http.method\n  - http.virtual_host\n  - http.uri\n  - http.request.body.length\n  \n"
  - question: What other SQL injection patterns were attempted against this web server?
    context: Reveals broader SQL injection campaign targeting the same application.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains:\n      - \"DELETE\"\n      - \"INSERT\"\n      - \"UPDATE\"\n      - \"UNION\"\n      - \"SELECT\"\n      - \"DROP\"\n  condition: selection\nfields:\n  - src_ip\n  - http.uri\n  - http.user_agent\n  - http.method\n  \n"
  - question: Are other hosts attempting SQL injection against this web application?
    context: Determines if multiple sources are targeting the same vulnerable application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other web application attacks occurred from this source IP?
    context: Identifies additional attack vectors being used against web applications.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n  web_attack_patterns:\n    http.uri|contains:\n      - \"../\"\n      - \"cmd=\"\n      - \"exec(\"\n      - \"eval(\"\n      - \"script>\"\n      - \"javascript:\"\n      - \"vbscript:\"\n  condition: selection and web_attack_patterns\nfields:\n  - dst_ip\n  - http.virtual_host\n  - http.uri\n  - http.method\n  \n"
  - question: Did the web server respond differently to the SQL injection attempt?
    context: Assesses whether the injection was successful based on server response patterns.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    community_id: '{network.community_id}'\n  condition: selection\nfields:\n  - http.status_code\n  - http.response.body.length\n  - http.status_msg\n  \n"
  - question: What is the timing pattern of requests to the eClassifieds application?
    context: Reveals automated scanning behavior versus manual exploitation attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Are there related alerts involving the same source IP?
    context: Correlates with other security events from the same potential attacker.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did any file upload or creation activity occur on the web server?
    context: Identifies potential web shell deployment following SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What database-related processes were active during the injection attempt?
    context: Determines if the SQL injection affected backend database operations.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        db_processes:
          Image|contains:
            - "mysql"
            - "sqlservr"
            - "postgres"
            - "oracle"
            - "sqlite"
        condition: selection and db_processes
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage