name: ET WEB_SPECIFIC_APPS Enthrallweb eClassifieds SQL Injection Attempt
id: 1220392
description: |
  Detects SQL injection attempts targeting Enthrallweb eClassifieds ad.asp with INSERT INTO statements in AD_ID parameter.
  May trigger on legitimate database operations or security testing of classified ad applications.
type: detection
detection_id: 2007044
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the ad.asp request?
    context: Reveals the specific INSERT statement and attack vector used against the classified ads application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the eClassifieds application?
    context: Determines if HTTP requests to this web application are typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection attempts occurred against this web server?
    context: Identifies additional database attack vectors targeting the same application.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "'"
            - "UNION"
            - "SELECT"
            - "DROP"
            - "DELETE"
            - "UPDATE"
            - "INSERT"
            - "--"
            - "/*"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What other web applications on this server were targeted?
    context: Assesses the scope of web application attacks against the server infrastructure.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        filter:
          http.uri|contains: "/ad.asp"
        condition: selection and not filter
      fields:
        - http.virtual_host
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Are other hosts attempting SQL injection against this eClassifieds application?
    context: Determines if multiple sources are targeting the same vulnerable web application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "/ad.asp"
          http.uri|contains: "AD_ID="
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What was the web server's response to the SQL injection attempt?
    context: Indicates whether the attack was successful or blocked by security controls.
    range: +/-5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri
  - question: Did this source perform reconnaissance of the web application structure?
    context: Identifies directory traversal or application mapping attempts preceding the SQL injection.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        recon_patterns:
          http.uri|contains:
            - "/.."
            - "/admin"
            - "/config"
            - "/test"
            - "robots.txt"
            - ".bak"
            - ".old"
            - "phpinfo"
        condition: selection and recon_patterns
      fields:
        - http.uri
        - http.status_code
        - http.user_agent
  - question: What user-agent pattern was used for this SQL injection attack?
    context: Reveals whether automated tools or manual techniques were used for the attack.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - http.method
  - question: Are there related alerts indicating broader web application attacks?
    context: Determines if this SQL injection is part of a larger campaign against web applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did the attacking host attempt to access database backup or configuration files?
    context: Identifies attempts to access sensitive database files after the SQL injection attempt.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        database_files:
          http.uri|contains:
            - ".sql"
            - ".db"
            - ".mdb"
            - "backup"
            - "dump"
            - "database"
        condition: selection and database_files
      fields:
        - http.uri
        - http.status_code
        - http.user_agent