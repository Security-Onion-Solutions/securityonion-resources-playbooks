name: ET WEB_SPECIFIC_APPS Enthrallweb eHomes SQL Injection Attempt
id: 1201905
description: |
  Detects SQL injection attempts targeting the homeDetail.asp page in Enthrallweb eHomes application.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2007098
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the homeDetail.asp request?
    context: Reveals the specific injection technique and SQL commands attempted.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the eHomes application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies broader SQL injection campaign targeting the same application.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "ASCII("
            - "CHAR("
            - "SUBSTRING"
            - "WAITFOR"
            - "SLEEP("
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: What web application vulnerability scanners were used against this server?
    context: Identifies security tools that may have triggered this detection.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.user_agent|contains:
            - "sqlmap"
            - "nmap"
            - "nikto"
            - "burp"
            - "scanner"
            - "havij"
            - "acunetix"
        condition: selection
      fields:
        - src_ip
        - http.user_agent
        - http.uri
  - question: What other web applications on this server received similar attack attempts?
    context: Assesses the scope of web application attacks against this infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - ".asp"
            - ".php"
            - ".jsp"
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "ASCII"
        filter:
          http.uri|contains: "homeDetail.asp"
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.method
  - question: Are other hosts attempting SQL injection against web applications?
    context: Determines if this is part of a coordinated attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What was the web server's response to the SQL injection attempt?
    context: Indicates whether the injection was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - src_ip
        - dst_ip
  - question: What database-related processes were executed on the web server after this request?
    context: Identifies potential command execution resulting from SQL injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|contains:
            - "sqlcmd"
            - "mysql"
            - "psql"
            - "sqlite"
            - "osql"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Were any files created or modified on the web server following the injection attempt?
    context: Detects potential webshell creation or data exfiltration activities.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the web server establish any outbound connections after the SQL injection?
    context: Identifies potential data exfiltration or reverse shell connections.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description