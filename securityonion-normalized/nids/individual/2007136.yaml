name: ET WEB_SPECIFIC_APPS Enthrallweb eHomes SQL Injection Attempt -- result.asp abedrooms SELECT
id: 1209340
description: |
  Detects SQL injection attempts targeting the Enthrallweb eHomes application through the result.asp page.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2007136
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection string in the result.asp request?
    context: Reveals the specific SQL payload attempting to exploit the abedrooms parameter.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the eHomes application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool was used to make this SQL injection request?
    context: Identifies whether this originated from automated tools or manual browsing.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "result.asp"
          http.uri|contains: "abedrooms"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other web application attacks originated from this source?
    context: Identifies patterns of web application scanning or exploitation attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip: '{source.ip}'
          rule.category: "web-application-attack"
        condition: selection
      fields:
        - rule.name
        - dst_ip
        - http.uri
  - question: Did the SQL injection attempt receive successful HTTP responses?
    context: Determines if the application may be vulnerable to the injection attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "result.asp"
          http.status_code: [200, 500]
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are other hosts attempting SQL injection against the same eHomes application?
    context: Determines scope of targeting against this specific web application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{destination.ip}'
          rule.name|contains: "eHomes"
        exclude_source:
          src_ip: '{source.ip}'
        condition: selection and not exclude_source
      fields:
        - src_ip
        - rule.name
        - http.uri
  - question: What database-related processes were active on the web server during this timeframe?
    context: Identifies database services that may have processed the SQL injection attempt.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - sqlservr.exe
          - mysqld.exe
          - oracle.exe
          - postgres.exe
          - mongod.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Were any suspicious files created on the web server after the SQL injection attempt?
    context: Detects potential web shells or malicious files uploaded through SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did this source perform reconnaissance activities before the SQL injection?
    context: Reveals enumeration or scanning activities that preceded the attack.
    range: -2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.status_code: [403, 404, 500]
        condition: selection
      fields:
        - http.uri
        - http.status_code
        - http.user_agent
  - question: What other external connections occurred from this source during the attack timeframe?
    context: Identifies additional infrastructure or targets associated with this attack source.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there indicators of data extraction following the SQL injection attempt?
    context: Detects large responses that may indicate successful data exfiltration.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.response.body.length|gte: 10000
        condition: selection
      fields:
        - http.response.body.length
        - http.uri
        - http.status_code