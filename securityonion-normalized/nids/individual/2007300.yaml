name: ET WEB_SPECIFIC_APPS Doug Luxem Liberum Help Desk SQL Injection Attempt
id: 1221430
description: |
  Detects SQL injection attempts targeting Doug Luxem Liberum Help Desk application via update.asp.
  May trigger on legitimate database queries or security testing of the application.
type: detection
detection_id: 2007300
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the HTTP request?
    context: Reveals the exact SELECT statement and injection technique used against update.asp.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Liberum Help Desk application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to the help desk application around this time?
    context: Identifies the broader attack pattern against the web application.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "update.asp"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What other SQL injection patterns were attempted from this source?
    context: Assesses the scope of database exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_patterns:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.virtual_host
        - http.method
        - http.status_code
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful based on HTTP response codes and patterns.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "update.asp"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are other hosts attempting SQL injection against the same application?
    context: Identifies if multiple sources are targeting the Liberum Help Desk vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "update.asp"
        sql_injection:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "'"
            - "--"
        filter:
          src_ip: '{source.ip}'
        condition: selection and sql_injection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What other web applications on this server are being targeted?
    context: Assesses if the attacker is performing broader web application reconnaissance.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        web_attacks:
          http.uri|contains:
            - ".asp"
            - ".php"
            - "admin"
            - "login"
            - "SELECT"
            - "UNION"
        condition: selection and web_attacks
      fields:
        - http.virtual_host
        - http.uri
        - http.method
        - http.status_code
  - question: Did the source IP attempt authentication bypass or privilege escalation?
    context: Determines if SQL injection is part of broader unauthorized access attempts.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        auth_bypass:
          http.uri|contains:
            - "admin"
            - "login"
            - "auth"
            - "password"
            - "user"
        condition: selection and auth_bypass
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.virtual_host
  - question: Are there related alerts indicating successful database compromise?
    context: Identifies other security events that may indicate successful SQL injection exploitation.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip