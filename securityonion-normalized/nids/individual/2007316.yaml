name: ET WEB_SPECIFIC_APPS Doug Luxem Liberum Help Desk SQL Injection
id: 1200089
description: |
  Detects SQL injection attempts against Doug Luxem Liberum Help Desk forgotpass.asp with ASCII/SELECT patterns.
  May trigger on legitimate administrative queries or security testing tools.
type: detection
detection_id: 2007316
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the forgotpass.asp request?
    context: Reveals the exact injection string and attack methodology used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Is access to this help desk application normally seen from external sources?
    context: Determines if external access to the help desk represents normal usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to the help desk application around this time?
    context: Identifies additional enumeration or exploitation attempts against the same application.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "forgotpass.asp"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What other SQL injection patterns were attempted against this web server?
    context: Reveals broader SQL injection attack campaigns against the same target.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "ASCII("
            - "CHAR("
            - "OR 1=1"
            - "' OR '"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: Are other web applications on this server receiving similar injection attempts?
    context: Determines if this is part of broader web application scanning or targeting.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - ".asp"
            - ".php"
            - ".jsp"
        sql_patterns:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "ASCII"
            - "OR 1="
        condition: selection and sql_patterns
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What web server process handled these SQL injection requests?
    context: Identifies the specific web application service processing malicious requests.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are other hosts being targeted by the same source with SQL injection attempts?
    context: Assesses the scope of SQL injection attack campaigns across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What database-related processes were active during the injection attempts?
    context: Identifies database services that may have processed malicious queries.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - sqlservr.exe
          - mysqld.exe
          - postgres.exe
          - oracle.exe
          - w3wp.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Were any database files accessed or modified after the injection attempts?
    context: Determines if SQL injection resulted in unauthorized database access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|endswith:
            - ".mdb"
            - ".accdb"
            - ".sql"
            - ".bak"
            - ".ldf"
            - ".mdf"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did any lateral movement occur from the targeted web server?
    context: Checks if successful exploitation led to internal network reconnaissance.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there other alerts involving the same source IP across the organization?
    context: Identifies coordinated attack patterns or reconnaissance from the same attacker.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip