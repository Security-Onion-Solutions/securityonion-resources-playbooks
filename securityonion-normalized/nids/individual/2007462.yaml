name: ET WEB_SPECIFIC_APPS BPG-InfoTech Content Management System SQL Injection Attempt
id: 1220458
description: |
  Detects SQL injection attempts targeting BPG-InfoTech CMS publication_view.asp page using ASCII function.
  May trigger on legitimate database queries or penetration testing activities.
type: detection
detection_id: 2007462
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the publication_view.asp request?
    context: Reveals the exact injection attempt and technique used against the BPG-InfoTech CMS.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the BPG-InfoTech CMS application?
    context: Determines if this represents unauthorized access to the content management system.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to the BPG-InfoTech CMS from this source?
    context: Identifies potential reconnaissance or additional exploitation attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "publication_view.asp"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - http.status_code
  - question: Were other SQL injection techniques attempted against this web server?
    context: Assesses the scope of SQL injection testing or exploitation attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        sql_patterns:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "ASCII("
            - "CHAR("
            - "SUBSTRING("
            - "OR 1=1"
            - "' OR "
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.method
        - http.user_agent
  - question: What web application files were accessed after the SQL injection attempt?
    context: Identifies potential unauthorized file access following successful injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: Are other hosts targeting the same BPG-InfoTech CMS application?
    context: Determines if multiple sources are exploiting the same vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "publication_view.asp"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What is the user-agent pattern of requests targeting this CMS vulnerability?
    context: Identifies automated tools or manual browser-based exploitation attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "publication_view"
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - http.method
  - question: Were any database-related files created on the web server after this request?
    context: Assesses potential data extraction or file creation following SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
        file_types:
          file.name|endswith:
            - ".sql"
            - ".mdb"
            - ".bak"
            - ".txt"
            - ".csv"
        condition: selection and file_types
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Did any processes with database connectivity execute after the SQL injection attempt?
    context: Identifies potential command execution or database manipulation following injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        db_processes:
          Image|contains:
            - "sqlcmd"
            - "osql"
            - "mysql"
            - "psql"
            - "sqlite"
        condition: selection and db_processes
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - ParentImage
  - question: Are there related alerts indicating successful exploitation of this CMS?
    context: Correlates with other security events that may indicate compromise.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip