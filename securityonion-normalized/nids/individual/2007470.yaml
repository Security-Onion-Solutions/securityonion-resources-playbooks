name: ET WEB_SPECIFIC_APPS CandyPress Store SQL Injection Attempt -- prodList.asp brand SELECT
id: 1206685
description: |
  Detects SQL injection attempts targeting CandyPress Store's prodList.asp endpoint via the brand parameter.
  May trigger on legitimate database queries or security testing of web applications.
type: detection
detection_id: 2007470
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the exact payload and injection technique used against the CandyPress Store application.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access this web application?
  context: Determines if HTTP access to this CandyPress Store endpoint represents normal usage patterns.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What process initiated the connection to the CandyPress Store application?
  context: Identifies the web server or application responsible for processing the SQL injection request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other external connections occurred from this web server?
  context: Identifies potential data exfiltration channels or additional attack vectors.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts connecting to the same web application infrastructure?
  context: Determines if multiple systems are being targeted in this SQL injection campaign.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What database-related files were accessed after the SQL injection attempt?
  context: Identifies potential database file access or backup creation following the injection.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{source.ip}'
      database_files:
        file.name|contains:
          - .mdb
          - .sql
          - .db
          - .sqlite
          - database
          - backup
      condition: selection and database_files
    fields:
      - file.path
      - file.name
      - Image
      - User
- question: Were any web application files modified following the SQL injection attempt?
  context: Identifies potential webshell installation or application compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{source.ip}'
      web_files:
        file.name|endswith:
          - .asp
          - .aspx
          - .php
          - .jsp
      condition: selection and web_files
    fields:
      - file.path
      - file.name
      - Image
      - User
- question: Did any lateral movement occur from this web server?
  context: Assesses whether the SQL injection led to broader network compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Are there related SQL injection alerts across the organization?
  context: Determines if this is part of a coordinated attack against multiple web applications.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What is the pattern of requests to the prodList.asp endpoint?
  context: Analyzes the frequency and source of requests to identify systematic scanning or exploitation.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: prodList.asp
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    - http.method
    logsource:
      category: network
      service: http
- question: Were any administrative database commands executed following the injection attempt?
  context: Identifies potential privilege escalation or administrative access through SQL injection.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{source.ip}'
      database_tools:
        Image|contains:
          - sqlcmd
          - mysql
          - psql
          - osql
      admin_commands:
        CommandLine|contains:
          - xp_cmdshell
          - sp_configure
          - EXEC
          - INSERT
          - UPDATE
          - DELETE
          - DROP
      condition: selection and (database_tools or admin_commands)
    fields:
      - Image
      - CommandLine
      - User
      - ParentImage