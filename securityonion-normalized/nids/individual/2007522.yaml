name: ET WEB_SPECIFIC_APPS 20/20 Auto Gallery SQL Injection Attempt
id: 1223293
description: |
  Detects SQL injection attempts against 20/20 Auto Gallery vehiclelistings.asp targeting the stock_number parameter.
  May trigger on legitimate database queries or security testing of web applications.
type: detection
detection_id: 2007522
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the vehiclelistings.asp request?
    context: Reveals the specific injection technique and target database structure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive requests to vehiclelistings.asp?
    context: Determines if this represents normal application usage or targeted attack activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection attempts occurred against this web server?
    context: Identifies additional exploitation attempts against the same application.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains:\n      - \"SELECT\"\n      - \"UNION\"\n      - \"INSERT\"\n      - \"'OR'\"\n      - \"DROP\"\n      - \"UPDATE\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - src_ip\n  - http.user_agent\n  \n"
  - question: What other parameters in vehiclelistings.asp were tested for SQL injection?
    context: Reveals the scope of parameter testing and application reconnaissance.
    range: +/-1h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"vehiclelistings.asp\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - http.user_agent\n  \n"
  - question: Did the web application return database error messages?
    context: Determines if the SQL injection revealed database structure or credentials.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{destination.ip}'\n    dst_ip: '{source.ip}'\n    http.status_code: [500, 404, 403]\n  condition: selection\nfields:\n  - http.status_code\n  - http.response.body.length\n  - http.uri\n  \n"
  - question: What web application files were accessed after the SQL injection attempt?
    context: Identifies potential file access or data exfiltration following successful injection.
    range: +1h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n  filter:\n    http.uri|contains: \"vehiclelistings.asp\"\n  condition: selection and not filter\nfields:\n  - http.uri\n  - http.method\n  - http.status_code\n  - http.user_agent\n  \n"
  - question: Are other web servers receiving similar SQL injection attempts?
    context: Determines if this is part of a broader campaign targeting multiple applications.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"SELECT\"\n      - \"stock_number\"\n  condition: selection\nfields:\n  - dst_ip\n  - http.uri\n  - http.virtual_host\n  - http.user_agent\n  \n"
  - question: What user-agent and source patterns are associated with these injection attempts?
    context: Identifies attack tools or automated scanning behavior.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains: \"SELECT\"\n  condition: selection\nfields:\n  - http.user_agent\n  - http.uri\n  - dst_ip\n  - http.virtual_host\n  \n"
  - question: Did any database administration tools connect to the server after the injection attempt?
    context: Assesses whether the injection provided database access credentials.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: [1433, 3306, 5432, 1521, 27017]
        condition: selection
      fields:
        - src_ip
        - dst_port
        - network.protocol
        - connection.state