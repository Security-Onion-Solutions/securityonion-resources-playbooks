name: ET WEB_SPECIFIC_APPS 20/20 Auto Gallery SQL Injection Attempt
id: 1220752
description: |
  Detects SQL injection attempts targeting the 20/20 Auto Gallery vehiclelistings.asp page.
  May trigger on legitimate database queries or web application testing tools.
type: detection
detection_id: 2007542
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact SQL injection payload in the vehiclelistings.asp request?
    context: Reveals the specific INSERT statement attempting to exploit CVE-2006-6092.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the 20/20 Auto Gallery application?
    context: Determines if HTTP requests to this application are typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool generated this SQL injection request?
    context: Identifies whether this appears to be automated scanning or manual exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "vehiclelistings.asp"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other web application attacks originated from this source IP?
    context: Determines if this is part of broader web application scanning or exploitation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip: '{source.ip}'
          rule.category|contains: "web-application-attack"
        filter:
          rule.uuid: '{rule.uuid}'
        condition: selection and not filter
      fields:
        - rule.name
        - dst_ip
        - http.uri
  - question: Did this source attempt SQL injection against other web applications?
    context: Identifies systematic SQL injection attempts across multiple applications.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UNION"
            - "DROP"
            - "DELETE"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
  - question: What web application processed the SQL injection attempt?
    context: Identifies the specific web server or application handling the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are other hosts being targeted with similar 20/20 Auto Gallery SQL injection attempts?
    context: Determines the scope of this SQL injection campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were accessed or modified by the web application after the SQL injection attempt?
    context: Assesses potential file system impact from successful SQL injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the web server establish any external connections after the SQL injection attempt?
    context: Identifies potential data exfiltration or secondary payload delivery.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any database-related processes started after this SQL injection attempt?
    context: Detects potential database compromise or unauthorized database access.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|contains:
            - "mysql"
            - "sqlcmd"
            - "osql"
            - "isql"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
  - question: Are there signs of lateral movement from the web server after the SQL injection attempt?
    context: Determines if successful exploitation led to internal network compromise.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are other alerts related to this SQL injection campaign occurring across the organization?
    context: Identifies coordinated attacks targeting web applications organization-wide.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip