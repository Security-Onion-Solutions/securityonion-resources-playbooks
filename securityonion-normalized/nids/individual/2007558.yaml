name: ET WEB_SPECIFIC_APPS 20/20 Auto Gallery SQL Injection Attempt
id: 1200177
description: |
  Detects SQL injection attempts targeting the 20/20 Auto Gallery application's vehiclelistings.asp page.
  May trigger on legitimate database queries or security testing of the auto gallery application.
type: detection
detection_id: 2007558
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the vehiclelistings.asp request?
    context: Reveals the exact injection string attempting to exploit CVE-2006-6092.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the 20/20 Auto Gallery application?
    context: Determines if this represents normal usage or external reconnaissance.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other attempts were made to access the vehiclelistings.asp page?
    context: Identifies patterns of SQL injection testing or application enumeration.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "vehiclelistings.asp"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What web application server process handled this SQL injection attempt?
    context: Identifies the specific service processing the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any database-related errors or responses returned after the injection attempt?
    context: Assesses whether the SQL injection was successful or returned error information.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
        database_errors:
          http.response.body|contains:
            - "SQL"
            - "mysql_"
            - "ORA-"
            - "Microsoft OLE DB"
            - "ODBC"
            - "SQLException"
        condition: selection and database_errors
      fields:
        - http.status_code
        - http.response.body
        - http.uri
  - question: What other SQL injection patterns were attempted against this web server?
    context: Reveals broader SQL injection campaign targeting the application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        sql_patterns:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "DELETE"
            - "DROP"
            - "OR 1=1"
            - "' OR '"
        condition: selection and sql_patterns
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: Are other hosts attempting SQL injection against this same application?
    context: Determines if multiple sources are targeting the 20/20 Auto Gallery vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "vehiclelistings.asp"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What files were accessed or modified on the web server after the injection attempt?
    context: Identifies potential file system access gained through SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any lateral movement occur from the web server after this attack?
    context: Assesses whether SQL injection led to further network compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving the same source IP across the organization?
    context: Identifies coordinated attacks or reconnaissance from the same threat actor.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip