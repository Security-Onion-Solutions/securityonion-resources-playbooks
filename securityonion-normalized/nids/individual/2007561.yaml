name: ET WEB_SPECIFIC_APPS 20/20 Auto Gallery SQL Injection Attempt -- vehiclelistings.asp listing_price DELETE
id: 1206751
description: |
  Detects SQL injection attempts targeting the 20/20 Auto Gallery application's vehiclelistings.asp page with DELETE statements in the listing_price parameter.
  May trigger on legitimate database maintenance operations or security testing activities.
type: detection
detection_id: 2007561
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the vehiclelistings.asp request?
  context: Reveals the exact DELETE statement and injection technique being attempted.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the 20/20 Auto Gallery application?
  context: Determines if this represents normal application usage or external targeting.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled the SQL injection request?
  context: Identifies the specific web application and server processing the malicious request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other SQL injection attempts occurred from this source?
  context: Identifies patterns of SQL injection testing against web applications.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - SELECT
        - INSERT
        - UPDATE
        - DELETE
        - UNION
        - DROP
        - CREATE
        - ALTER
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - dst_ip
    - dst_port
    logsource:
      category: network
      service: http
- question: What other external connections occurred from this host after the SQL injection attempt?
  context: Identifies potential data exfiltration or additional attack infrastructure.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Were any database-related files or executables created after this request?
  context: Assesses whether the SQL injection resulted in file system access.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Are other hosts receiving similar SQL injection attempts against vehiclelistings.asp?
  context: Determines if this is part of a broader campaign targeting this application.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What other web applications on this server received SQL injection attempts?
  context: Identifies the scope of SQL injection testing against the web server.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - SELECT
        - INSERT
        - UPDATE
        - DELETE
        - UNION
        - ''''
        - OR 1=1
        - ; --
    fields:
    - http.uri
    - http.virtual_host
    - src_ip
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Did any lateral movement occur from the targeted web server?
  context: Determines if successful SQL injection led to further network compromise.
  range: +4h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Were any scheduled tasks or services created on the web server after this attack?
  context: Identifies potential persistence mechanisms established through SQL injection.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|endswith:
        - schtasks.exe
        - taskeng.exe
        - taskhostw.exe
      condition: selection
    fields:
      - CommandLine
      - Image
      - ProcessGuid
      - User
      - ParentImage
- question: Are there related alerts involving the same attacker infrastructure?
  context: Correlates this SQL injection attempt with other malicious activities.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip