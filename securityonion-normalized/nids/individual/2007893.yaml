name: ET WEB_SPECIFIC_APPS Cacti SQL Injection Vulnerability tree.php leaf_id SELECT
id: 1221500
description: |
  Detects SQL injection attempts targeting Cacti's tree.php page via the leaf_id parameter.
  May trigger on legitimate database queries or security testing activities.
type: detection
detection_id: 2007893
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the tree.php request?
    context: Reveals the exact injection string and techniques used in the attack attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Cacti web application?
    context: Determines if this represents normal administrative access or external attack activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection attempts occurred from this source?
    context: Identifies patterns of database attack activity beyond this specific request.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        sql_patterns:
          - http.uri|contains: "SELECT"
          - http.uri|contains: "UNION"
          - http.uri|contains: "INSERT"
          - http.uri|contains: "UPDATE"
          - http.uri|contains: "DELETE"
          - http.uri|contains: "DROP"
        condition: selection and 1 of sql_patterns*
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - http.status_code
  - question: What web application process handled this SQL injection attempt?
    context: Identifies the specific web server or application processing the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other requests were made to the Cacti application during this session?
    context: Reveals the full scope of interaction with the vulnerable application.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "cacti"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - http.status_code
  - question: Were any database-related files accessed after the SQL injection attempt?
    context: Assesses whether the injection resulted in unauthorized database file access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
        db_files:
          - file.path|contains: ".sql"
          - file.path|contains: ".db"
          - file.path|contains: ".mdb"
          - file.path|contains: "mysql"
          - file.path|contains: "database"
        condition: selection and 1 of db_files*
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: What external connections occurred from the Cacti server after the injection attempt?
    context: Identifies potential data exfiltration or remote access establishment.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts experiencing similar Cacti SQL injection attempts?
    context: Determines if this is part of a coordinated attack against multiple Cacti installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What was the response status code and size for the SQL injection request?
    context: Indicates whether the injection attempt was successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri
  - question: Did any privilege escalation occur on the Cacti server following this request?
    context: Assesses whether successful SQL injection led to system compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        priv_commands:
          - CommandLine|contains: "sudo"
          - CommandLine|contains: "su -"
          - CommandLine|contains: "whoami"
          - CommandLine|contains: "id"
          - Image|endswith: "sudo"
        condition: selection and 1 of priv_commands*
      fields:
        - CommandLine
        - Image
        - User
        - ParentImage
  - question: Were any new user accounts created on the Cacti system after the injection attempt?
    context: Identifies potential account creation for persistent access following successful exploitation.
    range: +6h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        user_creation:
          - CommandLine|contains: "useradd"
          - CommandLine|contains: "adduser"
          - CommandLine|contains: "net user"
          - Image|endswith: "useradd"
          - Image|endswith: "adduser"
        condition: selection and 1 of user_creation*
      fields:
        - CommandLine
        - Image
        - User
        - ParentImage