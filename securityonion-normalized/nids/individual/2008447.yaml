name: ET DNS Query Responses with 3 RR's set (50+ in 2 seconds) - possible NS RR Cache Poisoning Attempt
id: 1248493
description: |
  Detects DNS responses with specific RR patterns occurring at high frequency, potentially indicating DNS cache poisoning attempts.
  May trigger on legitimate DNS servers during zone transfers or high-traffic periods with similar response patterns.
type: detection
detection_id: 2008447
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What were the exact DNS queries and responses showing the RR pattern?
    context: Reveals the specific DNS response structure matching cache poisoning indicators.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Does this host normally generate high-volume DNS response traffic?
    context: Determines if this DNS response pattern represents normal server behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name: '{dns.query_name}'
        condition: selection
      fields:
        - dns.query.name
  - question: What domains were being queried during this high-frequency response period?
    context: Identifies the target domains that may be subject to cache poisoning attempts.
    range: +/-5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Are the same domains being targeted from multiple source IPs?
    context: Indicates coordinated DNS cache poisoning attempts across different sources.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name: '{dns.query_name}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dns.resolved_ip
        - dns.authoritative
  - question: What other external connections occurred from hosts receiving these DNS responses?
    context: Identifies potential follow-up connections to poisoned DNS resolutions.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other DNS servers experiencing similar high-frequency response patterns?
    context: Determines the scope of potential DNS infrastructure targeting.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What is the timing pattern of these DNS responses?
    context: Reveals whether responses follow automated patterns consistent with cache poisoning tools.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Are there DNS queries for the same domains from internal hosts after these responses?
    context: Assesses whether internal clients may have received poisoned DNS responses.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name: '{dns.query_name}'
        internal_filter:
          src_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
        condition: selection and internal_filter
      fields:
        - src_ip
        - dns.resolved_ip
        - dns.authoritative
  - question: Did any processes initiate connections to IPs that may have been provided in poisoned responses?
    context: Identifies applications that may have acted on potentially poisoned DNS resolutions.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are there related DNS security alerts across the organization?
    context: Correlates with other DNS-based attack indicators or security events.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
