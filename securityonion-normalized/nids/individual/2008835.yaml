name: ET WEB_SPECIFIC_APPS MyioSoft EasyBookMarker Parent parameter SQL Injection
id: 1220205
description: |
  Detects SQL injection attempts targeting the Parent parameter in MyioSoft EasyBookMarker application.
  May trigger on legitimate database queries or security testing of the bookmarker_backend.php endpoint.
type: detection
detection_id: 2008835
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the bookmarker_backend.php request?
    context: Reveals the exact UNION SELECT statement and parameters used in the injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the EasyBookMarker application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool generated the SQL injection request?
    context: Identifies whether this was automated tool usage or manual browser-based testing.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "bookmarker_backend.php"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other SQL injection patterns were attempted from this source?
    context: Reveals broader SQL injection campaign targeting multiple applications or parameters.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_patterns:
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "DROP"
            - "DELETE"
            - "UPDATE"
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.virtual_host
        - dst_ip
  - question: Did the web server respond successfully to the SQL injection attempt?
    context: Determines if the injection was successful based on HTTP response codes.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "bookmarker_backend.php"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: What other web applications on this server were targeted?
    context: Identifies additional applications that may be vulnerable to similar attacks.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        php_files:
          http.uri|contains: ".php"
        condition: selection and php_files
      fields:
        - http.uri
        - http.virtual_host
        - http.status_code
  - question: Are other hosts attempting SQL injection against the same web application?
    context: Determines scope of coordinated attack against EasyBookMarker installations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "bookmarker_backend.php"
        sql_injection:
          http.uri|contains:
            - "UNION"
            - "SELECT"
        filter:
          src_ip: '{source.ip}'
        condition: selection and sql_injection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What database enumeration attempts followed the initial injection?
    context: Reveals post-exploitation database reconnaissance and data extraction efforts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        database_recon:
          http.uri|contains:
            - "information_schema"
            - "table_name"
            - "column_name"
            - "database()"
            - "version()"
            - "user()"
        condition: selection and database_recon
      fields:
        - http.uri
        - http.virtual_host
        - dst_ip
  - question: Were any file upload or web shell deployment attempts made?
    context: Identifies escalation from SQL injection to web shell installation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        upload_indicators:
          http.uri|contains:
            - "upload"
            - "shell"
            - "cmd"
            - "eval"
        webshell_patterns:
          http.uri|contains:
            - ".php?cmd"
            - "system("
            - "exec("
        condition: selection and (upload_indicators or webshell_patterns)
      fields:
        - http.uri
        - http.method
        - dst_ip
  - question: Are there related alerts indicating successful compromise of this web server?
    context: Correlates with other security events that may indicate successful exploitation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip