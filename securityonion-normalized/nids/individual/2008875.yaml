name: ET WEB_SPECIFIC_APPS Vlog System note parameter SQL Injection
id: 1209333
description: |
  Detects SQL injection attempts against the Vlog System blog.php application targeting the note parameter.
  May trigger on legitimate database queries containing UNION SELECT statements or security testing tools.
type: detection
detection_id: 2008875
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the blog.php request?
    context: Reveals the specific UNION SELECT pattern and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Vlog System application?
    context: Determines if this represents unusual access to the vulnerable web application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other SQL injection attempts occurred against this web server?
    context: Identifies additional exploitation attempts targeting database vulnerabilities.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "CREATE"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: What other web applications on this server received similar injection attempts?
    context: Assesses the scope of web application attack activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - ".php"
            - ".asp"
            - ".jsp"
        injection_indicators:
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "'"
            - "\""
            - "OR 1=1"
        condition: selection and injection_indicators
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.virtual_host
  - question: What process was running the web server that received this request?
    context: Identifies the web application service processing the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Did the web server access any database files after receiving this request?
    context: Determines if the SQL injection attempt affected database operations.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|endswith:
            - ".db"
            - ".sql"
            - ".mdb"
            - ".accdb"
            - ".sqlite"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Were any files created or modified on the web server after this attack?
    context: Identifies potential web shells or malicious files created through exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What other hosts are targeting this web server with similar attack patterns?
    context: Reveals the scope of attackers attempting SQL injection against the application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "blog.php"
        attack_pattern:
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "note="
        filter:
          src_ip: '{source.ip}'
        condition: selection and attack_pattern and not filter
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: Are other web servers in the environment receiving similar SQL injection attempts?
    context: Determines if this is part of a broader campaign targeting web applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What user-agent patterns are associated with these SQL injection attempts?
    context: Identifies attack tools or automated scanners targeting the web application.
    range: +/-6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "UNION"
            - "SELECT"
        condition: selection
      fields:
        - http.user_agent
        - count(src_ip) as unique_sources
  - question: Did any authentication bypass attempts occur alongside these SQL injection attacks?
    context: Assesses whether attackers are combining SQL injection with authentication attacks.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "login"
            - "auth"
            - "admin"
        bypass_indicators:
          http.uri|contains:
            - "OR 1=1"
            - "' OR '"
            - "admin'--"
            - "admin'#"
        condition: selection and bypass_indicators
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.status_code