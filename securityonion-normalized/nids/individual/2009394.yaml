name: ET WEB_SPECIFIC_APPS GDL gdl.php node Parameter SQL Injection
id: 1221825
description: |
  Detects SQL injection attempts targeting the GDL application's gdl.php node parameter.
  May trigger on legitimate database queries or security testing tools.
type: detection
detection_id: 2009394
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the gdl.php request?
  context: Reveals the specific UNION SELECT statement and injection technique used.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the GDL application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web browser or tool was used to make this SQL injection request?
  context: Identifies the user agent pattern which may indicate automated tools or manual testing.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: gdl.php
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: What other SQL injection attempts occurred from this source IP?
  context: Identifies additional database exploitation attempts or scanning activity.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - UNION
        - SELECT
        - INSERT
        - UPDATE
        - DELETE
        - DROP
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.virtual_host
    - dst_ip
    logsource:
      category: network
      service: http
- question: What was the web server's response to the SQL injection attempt?
  context: Determines if the injection was successful or blocked by security controls.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: gdl.php
        src_ip: '{source.ip}'
    fields:
    - http.status_code
    - http.response.body.length
    - http.uri
    logsource:
      category: network
      service: http
- question: Did the web server process make any database connections after this request?
  context: Identifies if the SQL injection reached the database layer.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Are other hosts attempting similar SQL injection attacks against web applications?
  context: Determines if this is part of a coordinated web application attack campaign.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What other web applications were targeted by this source IP?
  context: Reveals the scope of web application enumeration or attack attempts.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains: .php
        src_ip: '{source.ip}'
    fields:
    - http.virtual_host
    - http.uri
    - dst_ip
    logsource:
      category: network
      service: http
- question: Did any web application files get modified after the SQL injection attempt?
  context: Identifies potential web shell uploads or application tampering.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: What other external connections occurred from the web server after this request?
  context: Identifies potential data exfiltration or reverse shell connections.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description