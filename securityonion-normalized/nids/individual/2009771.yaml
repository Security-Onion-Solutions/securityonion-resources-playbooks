name: ET WEB_SERVER Possible SELECT FROM SQL Injection In Cookie
id: 1247150
description: |
  Detects HTTP requests containing SQL SELECT statements in cookie headers.
  May indicate SQL injection attempts or legitimate applications using SQL-like syntax in cookies.
type: detection
detection_id: 2009771
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL SELECT statement in the cookie?
    context: Reveals the exact SQL injection payload and request structure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive requests with SQL-like content in cookies?
    context: Determines if SQL syntax in cookies represents normal application behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application processed this request with SQL content in cookies?
    context: Identifies the specific service that may be vulnerable to SQL injection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests with SQL injection patterns occurred from this source?
    context: Identifies additional SQL injection attempts in the attack sequence.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n  sql_patterns:\n    - http.request.body|contains: \"SELECT\"\n    - http.request.body|contains: \"UNION\"\n    - http.request.body|contains: \"INSERT\"\n    - http.request.body|contains: \"UPDATE\"\n    - http.request.body|contains: \"DELETE\"\n    - http.uri|contains: \"SELECT\"\n    - http.uri|contains: \"UNION\"\n  condition: selection and sql_patterns\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.request.body\n  \n"
  - question: What database-related files were accessed after this SQL injection attempt?
    context: Identifies potential data access or database file manipulation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other web servers receiving similar SQL injection attempts in cookies?
    context: Determines if this is part of a broader SQL injection campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What was the pattern of HTTP responses to requests with SQL content in cookies?
    context: Analyzes server responses that may indicate successful SQL injection.
    range: +/-30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n  condition: selection\nfields:\n  - http.status_code\n  - http.response.body.length\n  - http.method\n  - http.uri\n  \n"
  - question: Did any lateral movement occur from the web server after this SQL injection attempt?
    context: Identifies potential compromise and lateral movement following successful injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What authentication-related activity occurred around the time of this SQL injection attempt?
    context: Identifies potential authentication bypass or credential theft attempts.
    range: +/-30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n  auth_patterns:\n    - http.uri|contains: \"login\"\n    - http.uri|contains: \"auth\"\n    - http.uri|contains: \"admin\"\n    - http.uri|contains: \"session\"\n  condition: selection and auth_patterns\nfields:\n  - src_ip\n  - http.method\n  - http.uri\n  - http.status_code\n  \n"
  - question: Are there related alerts indicating web application attacks across the organization?
    context: Identifies coordinated attacks against multiple web applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
