name: ET WEB_SPECIFIC_APPS GS Real Estate Portal email.php AgentID Parameter SQL Injection
id: 1202092
description: |
  Detects SQL injection attempts targeting the AgentID parameter in GS Real Estate Portal's email.php script.
  May trigger on legitimate database queries or security testing containing UNION SELECT statements.
type: detection
detection_id: 2009791
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the email.php request?
    context: Reveals the exact injection string and techniques used in the attack attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the GS Real Estate Portal application?
    context: Determines if this represents unusual access to the vulnerable application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to email.php or similar scripts from this source?
    context: Identifies broader attack patterns against the web application.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"email.php\"\n      - \".php?\"\n      - \"AgentID=\"\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - dst_ip\n  \n"
  - question: Were other SQL injection patterns attempted against this web server?
    context: Assesses the scope of SQL injection testing or exploitation attempts.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains:\n      - \"UNION\"\n      - \"SELECT\"\n      - \"' OR \"\n      - \"1=1\"\n      - \"admin'--\"\n  condition: selection\nfields:\n  - src_ip\n  - http.method\n  - http.uri\n  - http.user_agent\n  \n"
  - question: What web application or service is running on the targeted server?
    context: Identifies the specific application that may be vulnerable to SQL injection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are other hosts attempting similar SQL injection attacks against web applications?
    context: Determines if this is part of a coordinated campaign targeting SQL injection vulnerabilities.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the geographic origin and user-agent pattern of these requests?
    context: Provides attribution context for the SQL injection attempts.
    range: +/-1h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n  condition: selection\nfields:\n  - http.user_agent\n  - src_ip\n  - http.method\n  - http.uri\n  \n"
  - question: Did any database-related processes show unusual activity after these requests?
    context: Assesses whether SQL injection attempts resulted in database compromise.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip: '{destination.ip}'\n    Image|contains:\n      - \"mysql\"\n      - \"postgres\"\n      - \"sqlserver\"\n      - \"oracle\"\n      - \"mariadb\"\n  condition: selection\nfields:\n  - Image\n  - CommandLine\n  - User\n  - ProcessGuid\n  \n"
  - question: Were any files created or modified on the web server after the SQL injection attempt?
    context: Identifies potential web shells or malicious files created through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there other alerts involving the same source IP across the organization?
    context: Determines if this attacker is targeting multiple systems or applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip