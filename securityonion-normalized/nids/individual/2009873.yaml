name: ET WEB_SPECIFIC_APPS PHPauction GPL settings.inc.php include_path Parameter Remote File Inclusion
id: 1246516
description: |
  Detects attempts to exploit PHPauction GPL through the include_path parameter in settings.inc.php.
  May trigger on legitimate file operations or automated testing of web applications.
type: detection
detection_id: 2009873
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the include_path parameter?
    context: Reveals the exact file inclusion payload and remote URL being loaded.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the PHPauction application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web server process handled this request?
    context: Identifies the web application responsible for processing the file inclusion attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this web server?
    context: Identifies potential data exfiltration or additional remote file inclusions.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What PHP files were created or modified after this request?
    context: Identifies files that may have been created through remote file inclusion.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts attempting similar PHPauction exploitation?
    context: Determines if this is part of a broader campaign targeting this vulnerability.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What domain was specified in the include_path parameter?
    context: Identifies the remote server hosting the malicious include file.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "include_path="
          http.uri|re|i: "include_path=.*?(ftps?|https?|php)://"
        condition: selection
      fields:
        - http.uri
        - http.user_agent
        - http.method
  - question: Did this source IP attempt other web application attacks?
    context: Reveals broader attack patterns targeting multiple web vulnerabilities.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip: '{source.ip}'
          rule.category: "web-application-attack"
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - dst_ip
        - http.uri
  - question: Was there any DNS resolution for remote domains in the include_path?
    context: Identifies DNS queries that preceded the file inclusion attempt.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Are there signs of successful code execution on the web server?
    context: Assesses whether the file inclusion resulted in remote code execution.
    range: +1h
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip: '{destination.ip}'\n    ParentImage|contains: \n      - \"apache\"\n      - \"nginx\"\n      - \"httpd\"\n      - \"php\"\n  condition: selection\nfields:\n  - Image\n  - CommandLine\n  - ParentImage\n  - User"
