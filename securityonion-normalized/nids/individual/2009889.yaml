name: ET WEB_SPECIFIC_APPS MAXcms RFI attempt (2)
id: 1204181
description: |
  Detects remote file inclusion attempts targeting MAXcms class.Tree.php script via GLOBALS parameter manipulation.
  May trigger on legitimate administrative access or security testing of MAXcms installations.
type: detection
detection_id: 2009889
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the MAXcms RFI attempt?
    context: Reveals the full exploitation payload and any additional parameters used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access MAXcms applications?
    context: Determines if HTTP access to this MAXcms installation is typical for this client.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other HTTP requests to MAXcms occurred from this source?
    context: Identifies reconnaissance or additional exploitation attempts against the CMS.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "maxcms"
            - "class.Tree.php"
            - "GLOBALS"
            - "/classes/"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What web application process handled the RFI request?
    context: Identifies the specific web server or PHP process that processed the request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this web server?
    context: Identifies potential data exfiltration or additional compromise indicators.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What PHP or web-related files were created after the RFI attempt?
    context: Identifies files that may have been uploaded through the RFI vulnerability.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts targeting MAXcms installations with similar RFI attempts?
    context: Determines if this is part of a broader campaign against MAXcms vulnerabilities.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What remote files were the RFI attempts trying to include?
    context: Analyzes the external URLs being included to understand the attack payload.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "GLOBALS[thCMS_root]=http"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
  - question: Did the web server establish connections to external hosts after the RFI attempt?
    context: Identifies whether the RFI successfully included remote malicious files.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What DNS queries were made before or after the RFI attempt?
    context: Reveals domain resolution activity that may be related to the attack.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip