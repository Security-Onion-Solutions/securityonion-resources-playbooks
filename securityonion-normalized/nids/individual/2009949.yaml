name: ET WEB_SERVER Tilde in URI - potential .pl source disclosure vulnerability
id: 1221251
description: |
  Detects HTTP requests containing tilde characters in URIs targeting .pl files, which may indicate attempts to access backup or temporary files created by web servers or editors. This could reveal Perl script source code if the web server serves these files directly instead of executing them.
type: detection
detection_id: 2009949
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete URI containing the tilde character in the .pl request?
  context: Reveals the exact file path being targeted for potential source disclosure.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally receive requests for Perl scripts?
  context: Determines if .pl file access represents normal application usage patterns.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled this request with the tilde character?
  context: Identifies the web application that may be vulnerable to source disclosure.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What was the HTTP response status and content for the tilde request?
  context: Determines if the source disclosure attempt was successful.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: .pl~
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.status_code
    - http.response.body.length
    - http.method
    logsource:
      category: network
      service: http
- question: Are there other requests targeting backup or temporary files from this source?
  context: Identifies broader enumeration patterns for file disclosure vulnerabilities.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - '~'
        - .bak
        - .backup
        - .tmp
        - .old
        - .orig
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.uri
    - http.method
    - http.status_code
    logsource:
      category: network
      service: http
- question: What other external connections occurred from this host after the request?
  context: Identifies potential data exfiltration following successful source disclosure.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts being targeted with similar tilde-based requests?
  context: Determines scope of scanning activity across web applications.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What files were accessed or modified on the web server during this timeframe?
  context: Assesses whether source files were actually accessed or compromised.
  range: +/-30m
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .doc
        - .docx
        - .xls
        - .xlsx
        - .pdf
        - .rtf
        - .ppt
        - .pptx
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Are there related alerts involving the same source IP?
  context: Provides context about other suspicious activities from this source.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: Did any lateral movement occur from the targeted web server?
  context: Determines if successful exploitation led to further network compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport