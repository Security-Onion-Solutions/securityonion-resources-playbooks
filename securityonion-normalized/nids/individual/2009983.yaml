name: ET FTP Possible FTP Daemon Username INSERT INTO SQL Injection Attempt
id: 1221433
description: |
  Detects FTP USER commands containing SQL INSERT INTO statements, indicating potential SQL injection attacks against FTP daemons.
  May trigger on legitimate database operations or testing scenarios involving SQL syntax in usernames.
type: detection
detection_id: 2009983
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete FTP USER command containing the SQL injection attempt?
    context: Reveals the exact SQL injection payload used in the authentication attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally receive FTP connections from external sources?
    context: Determines if FTP access from this source represents normal network patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What FTP daemon process handled this SQL injection attempt?
    context: Identifies the specific FTP service that may be vulnerable to SQL injection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were there multiple SQL injection attempts against this FTP service?
    context: Assesses if this is part of a systematic attack against the FTP daemon.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: 21
        condition: selection
      fields:
        - src_ip
        - src_port
        - connection.history
        - network.bytes
  - question: Did the FTP service establish any database connections after the injection attempt?
    context: Determines if the SQL injection attempt reached backend database systems.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_port: [1433, 3306, 5432, 1521, 27017]
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - network.bytes
  - question: What other external connections occurred from this FTP server?
    context: Identifies potential data exfiltration or additional compromise indicators.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other FTP servers receiving similar SQL injection attempts?
    context: Determines scope of the attack campaign against FTP services.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any database-related files accessed by the FTP daemon process?
    context: Reveals if the FTP service accessed database files that could be compromised.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|contains:
            - ".db"
            - ".mdb"
            - ".sql"
            - "database"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Did any lateral movement occur from this FTP server after the injection attempt?
    context: Assesses if successful SQL injection led to broader network compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving the same source IP across other services?
    context: Identifies broader attack patterns beyond FTP SQL injection attempts.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip