name: ET WEB_SPECIFIC_APPS RS-CMS rscms_mod_newsview.php key Parameter Processing Remote SQL Injection
id: 1210094
description: |
  Detects SQL injection attempts targeting the RS-CMS newsview module through the key parameter.
  May trigger on legitimate database queries or security testing of the application.
type: detection
detection_id: 2010021
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the rscms_mod_newsview.php request?
  context: Reveals the exact UNION SELECT statement used in the exploitation attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the RS-CMS application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What other SQL injection attempts occurred against this web server?
  context: Identifies additional database exploitation attempts targeting the same application.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - UNION
        - SELECT
        - INSERT
        - UPDATE
        - DELETE
        - DROP
    fields:
    - src_ip
    - http.uri
    - http.method
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What other RS-CMS modules were targeted from this source IP?
  context: Reveals the scope of reconnaissance or exploitation against the CMS platform.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - rscms
        - rs-cms
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.uri
    - http.method
    - http.status_code
    logsource:
      category: network
      service: http
- question: What web application files were accessed after the SQL injection attempt?
  context: Identifies potential file access resulting from successful database exploitation.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.path|contains:
        - .php
        - .sql
        - .txt
        - .log
        host.ip: '{destination.ip}'
    fields:
    - file.path
    - file.name
    - Image
    - User
    logsource:
      category: file_event
- question: Are other hosts targeting the same RS-CMS vulnerability?
  context: Determines if this is part of a coordinated campaign against the application.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: key=
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What database-related processes executed on the web server after this request?
  context: Identifies database operations that may have resulted from the SQL injection.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        Image|contains:
        - mysql
        - mysqld
        - psql
        - sqlcmd
        - sqlite
        host.ip: '{destination.ip}'
    fields:
    - Image
    - CommandLine
    - User
    - ParentImage
    logsource:
      category: process_creation
- question: What web shells or backdoors were uploaded to the RS-CMS directory?
  context: Detects potential persistence mechanisms installed through SQL injection.
  range: +2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.name|re: .*\.(php|asp|aspx|jsp|cgi)$
        file.path|contains: rscms
        host.ip: '{destination.ip}'
    fields:
    - file.path
    - file.name
    - Image
    - ProcessGuid
    logsource:
      category: file_event
- question: Are there related SQL injection alerts across the organization?
  context: Identifies broader SQL injection campaign activity.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What sensitive files were accessed from the web application directory?
  context: Assesses potential data exposure through directory traversal or file inclusion.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.name|contains:
        - config
        - database
        - passwd
        - shadow
        - .conf
        - .ini
        host.ip: '{destination.ip}'
    fields:
    - file.path
    - file.name
    - Image
    - User
    logsource:
      category: file_event