name: ET WEB_SERVER SELECT INSTR in Cookie, Possible ORACLE Related Blind SQL Injection Attempt
id: 1247105
description: |
  Detects HTTP requests containing Oracle SQL INSTR function patterns within cookies.
  May indicate blind SQL injection attempts targeting Oracle databases or legitimate applications using Oracle functions.
type: detection
detection_id: 2010286
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the Oracle INSTR pattern in the cookie?
    context: Reveals the full SQL injection payload and cookie structure used in the attack attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive HTTP requests with complex cookie parameters?
    context: Determines if cookie-based SQL injection attempts represent unusual activity for this web server.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process handled the request with the Oracle INSTR pattern?
    context: Identifies the specific web server or application that processed the potential SQL injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other SQL-related patterns appeared in requests from the same source?
    context: Identifies systematic SQL injection testing or broader database attack patterns.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.cookie|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "SUBSTR"
            - "CONCAT"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.method
        - http.uri
        - http.cookie
        - http.user_agent
  - question: Did the web server establish any external database connections after receiving these requests?
    context: Assesses whether the SQL injection attempt resulted in unauthorized database access or data exfiltration.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other web servers receiving similar Oracle SQL injection attempts?
    context: Determines if this is part of a coordinated campaign targeting Oracle database applications.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What database-related files were accessed after the SQL injection attempt?
    context: Identifies potential data access or database configuration file changes following the attack.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|contains:
            - ".db"
            - ".sql"
            - ".mdb"
            - "database"
            - "oracle"
            - "tnsnames"
        condition: selection
      fields:
        - host.ip
        - file.path
        - file.name
        - Image
        - User
  - question: Were any Oracle database error responses returned to the requesting client?
    context: Reveals whether the SQL injection attempt generated database errors that could provide attack feedback.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{source.ip}'
          src_ip: '{destination.ip}'
        oracle_errors:
          http.request.body.content|contains:
            - "ORA-"
            - "Oracle"
            - "SQLSTATE"
            - "TNS:"
        condition: selection and oracle_errors
      fields:
        - src_ip
        - dst_ip
        - http.status_code
        - http.request.body.content
  - question: What was the pattern of HTTP response codes returned for these cookie-based requests?
    context: Analyzes server responses to determine if SQL injection attempts were successful or blocked.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.method
        - http.uri
        - http.status_code
        - http.request.body.length
  - question: Did this source IP attempt SQL injection against other database platforms?
    context: Reveals broader SQL injection campaign targeting multiple database types beyond Oracle.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_patterns:
          http.cookie|contains:
            - "mysql"
            - "mssql"
            - "postgres"
            - "sqlite"
            - "sybase"
        condition: selection and sql_patterns
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.cookie
        - http.user_agent
  - question: Are there related SQL injection alerts from the same source across the organization?
    context: Identifies coordinated SQL injection attacks targeting multiple applications or systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
