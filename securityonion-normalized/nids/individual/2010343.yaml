name: ET SCAN pangolin SQL injection tool
id: 1257105
description: |
  Detects HTTP requests using the pangolin SQL injection tool user-agent.
  May trigger on legitimate security testing or penetration testing activities.
type: detection
detection_id: 2010343
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request made by the pangolin user-agent?
    context: Understanding the full request reveals potential SQL injection attempts and target parameters.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive HTTP traffic from external sources?
    context: Determines if external web requests to this host are typical behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application or service received the pangolin request?
    context: Identifies the specific application that may be targeted for SQL injection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from the requesting host?
    context: Identifies additional scanning or exploitation activity from the same source.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts in the network receiving similar pangolin requests?
    context: Determines scope of SQL injection scanning campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other SQL injection tools or scanners have been detected?
    context: Reveals broader SQL injection testing patterns across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.user_agent|contains:
            - "sqlmap"
            - "havij"
            - "sqlninja"
            - "bsqlbf"
            - "pangolin"
            - "sqlsus"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.user_agent
        - http.uri
        - http.method
  - question: What database-related error messages were returned to the pangolin requests?
    context: Identifies successful SQL injection attempts or information disclosure.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
        database_errors:
          http.response.body|contains:
            - "SQL syntax"
            - "mysql_fetch"
            - "ORA-"
            - "Microsoft OLE DB"
            - "ODBC SQL Server"
            - "PostgreSQL"
            - "SQLite"
        condition: selection and database_errors
      fields:
        - http.status_code
        - http.response.body
        - http.uri
  - question: What web application authentication attempts occurred around this time?
    context: Determines if SQL injection is combined with authentication bypass attempts.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "login"
            - "auth"
            - "signin"
            - "admin"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Were any database-related files or executables created after the pangolin requests?
    context: Identifies potential webshell deployment or database compromise artifacts.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|contains:
            - ".php"
            - ".asp"
            - ".jsp"
            - ".sql"
            - "shell"
            - "cmd"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: What is the pattern of HTTP requests from the pangolin source?
    context: Analyzes the scanning methodology and targeted parameters.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Are there related SQL injection alerts across the organization?
    context: Identifies coordinated SQL injection campaigns targeting multiple systems.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
