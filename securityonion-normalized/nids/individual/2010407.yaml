name: ET SHELLCODE METASPLOIT BSD Reverse shell (PexFnstenvSub Encoded 1)
id: 1242528
description: |
  Detects specific byte sequence characteristic of Metasploit's BSD reverse shell using PexFnstenvSub encoding.
  May trigger on legitimate network traffic containing similar binary patterns or security testing activities.
type: detection
detection_id: 2010407
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete network payload containing the shellcode pattern?
    context: Reveals the full context of the binary data and transmission method.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally receive binary data from this external source?
    context: Determines if this represents unusual network communication patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process established the connection that received this shellcode?
    context: Identifies the application or service that processed the potentially malicious payload.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What executable files were created after receiving this shellcode pattern?
    context: Detects files that may have been dropped through successful shellcode execution.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did this host establish new outbound connections after receiving the shellcode?
    context: Identifies reverse shell connections or additional C2 communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any processes spawned by system services after this network activity?
    context: Detects potential privilege escalation or system-level compromise.
    range: +1h
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip: '{source.ip}'\n  system_parents:\n    ParentImage|contains:\n      - \"services.exe\"\n      - \"lsass.exe\" \n      - \"winlogon.exe\"\n      - \"csrss.exe\"\n  timeframe:\n    \"@timestamp|gte\": \"now-1h\"\n  condition: selection and system_parents and timeframe\nfields:\n  - Image\n  - CommandLine\n  - ParentImage\n  - User\n"
  - question: Are other hosts receiving similar shellcode patterns?
    context: Determines scope of potential exploitation campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did lateral movement occur from this potentially compromised host?
    context: Assesses whether successful shellcode execution led to network propagation.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Were any persistence mechanisms established after the shellcode activity?
    context: Identifies attempts to maintain access following successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: What network services were accessed from this host after receiving the shellcode?
    context: Reveals post-exploitation reconnaissance or data access patterns.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        interesting_ports:
          dst_port:
            - 22    # SSH
            - 135   # RPC
            - 139   # NetBIOS
            - 445   # SMB
            - 1433  # SQL Server
            - 3389  # RDP
            - 5432  # PostgreSQL
            - 3306  # MySQL
        condition: selection and interesting_ports
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: What files were accessed by processes after this network activity?
    context: Identifies data that may have been targeted following successful compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{source.ip}'
        sensitive_paths:
          file.path|contains:
            - "\\Documents\\"
            - "\\Desktop\\"
            - "\\Downloads\\"
            - "\\Users\\"
            - "\\System32\\config\\"
            - "/home/"
            - "/etc/"
            - "/var/log/"
        condition: selection and sensitive_paths
      fields:
        - file.path
        - file.name
        - Image
        - User
