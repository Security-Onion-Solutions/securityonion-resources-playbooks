name: ET WEB_SPECIFIC_APPS Mambo Component com_viewfulllisting SQL Injection Attempt
id: 1220809
description: |
  Detects SQL injection attempts targeting the com_viewfulllisting component in Mambo CMS.
  May trigger on legitimate application usage or security testing activities.
type: detection
detection_id: 2010605
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload and injection technique used against the Mambo component.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this Mambo CMS application?
    context: Determines if HTTP access to this web application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool was used to make this request?
    context: Identifies the user agent which may indicate automated attack tools.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "com_viewfulllisting"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other SQL injection patterns were attempted from this source?
    context: Reveals broader SQL injection attack patterns or automated scanning.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_patterns:
          http.uri|contains:
            - "union"
            - "select"
            - "insert"
            - "update"
            - "delete"
            - "drop"
            - "alter"
            - "exec"
            - "script"
            - "javascript"
            - "vbscript"
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.method
        - dst_ip
  - question: Were other Mambo or CMS components targeted from this source?
    context: Identifies systematic targeting of CMS vulnerabilities.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        mambo_components:
          http.uri|contains:
            - "option=com_"
            - "mambo"
            - "joomla"
            - "index.php?option"
        condition: selection and mambo_components
      fields:
        - http.uri
        - http.virtual_host
        - dst_ip
  - question: What was the web server's response to these injection attempts?
    context: Determines if the SQL injection was successful based on response codes.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "listing_id="
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are other hosts attempting similar attacks against this web application?
    context: Determines if this is part of a coordinated attack against the Mambo CMS.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "com_viewfulllisting"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What authentication attempts occurred from this source?
    context: Identifies attempts to gain administrative access to the CMS.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        auth_paths:
          http.uri|contains:
            - "login"
            - "admin"
            - "administrator"
            - "wp-admin"
            - "user"
            - "auth"
        condition: selection and auth_paths
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Were any suspicious files uploaded or accessed after the injection attempt?
    context: Identifies potential web shell uploads or file manipulation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        file_operations:
          http.method: "POST"
        suspicious_files:
          http.uri|contains:
            - ".php"
            - ".asp"
            - ".jsp"
            - "upload"
            - "shell"
        condition: selection and (file_operations or suspicious_files)
      fields:
        - http.uri
        - http.method
        - http.request.body.length
  - question: What other web application vulnerabilities were probed from this source?
    context: Reveals broader web application attack patterns or vulnerability scanning.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        vuln_patterns:
          http.uri|contains:
            - "../"
            - "..%2f"
            - "%00"
            - "<?php"
            - "<script"
            - "eval("
            - "base64"
        condition: selection and vuln_patterns
      fields:
        - http.uri
        - http.virtual_host
        - dst_ip