name: ET WEB_SPECIFIC_APPS phpBMS invoices_discount_ajax.php id Parameter UPDATE SET SQL Injection Attempt
id: 1223250
description: |
  Detects SQL injection attempts targeting the id parameter in phpBMS invoices_discount_ajax.php.
  May trigger on legitimate database queries containing UPDATE SET statements or security testing.
type: detection
detection_id: 2010619
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the exact payload and injection technique used against the phpBMS application.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access phpBMS application endpoints?
    context: Determines if requests to phpBMS represent normal application usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to phpBMS endpoints from this source?
    context: Identifies potential reconnaissance or additional exploitation attempts.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains: \"bms\"\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: Were there successful HTTP responses to any of these phpBMS requests?
    context: Determines if the SQL injection attempt was successful or blocked.
    range: +/-30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"invoices_discount_ajax.php\"\n  condition: selection\nfields:\n  - http.status_code\n  - http.response.body.length\n  - http.uri\n  \n"
  - question: What other SQL injection patterns were attempted from this source?
    context: Reveals broader SQL injection campaign targeting multiple applications.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"SELECT\"\n      - \"UNION\"\n      - \"INSERT\"\n      - \"DELETE\"\n      - \"UPDATE\"\n      - \"DROP\"\n      - \"OR 1=1\"\n      - \"' OR '\"\n      - \"admin'--\"\n  condition: selection\nfields:\n  - http.uri\n  - http.virtual_host\n  - dst_ip\n  \n"
  - question: Are other hosts being targeted with similar phpBMS SQL injection attempts?
    context: Determines scope of campaign targeting phpBMS installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What web application vulnerabilities are being scanned from this source?
    context: Identifies automated scanning tools or broader web application attacks.
    range: +/-4h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \".php?\"\n      - \"admin\"\n      - \"login\"\n      - \"config\"\n      - \"wp-\"\n      - \"ajax\"\n  condition: selection\nfields:\n  - http.uri\n  - http.virtual_host\n  - dst_ip\n  - http.user_agent\n  \n"
  - question: Did the web server process execute any database-related commands after this request?
    context: Identifies potential code execution or database manipulation following SQL injection.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip: '{destination.ip}'\n    Image|contains:\n      - \"mysql\"\n      - \"mysqld\"\n      - \"php\"\n      - \"apache\"\n      - \"nginx\"\n  condition: selection\nfields:\n  - Image\n  - CommandLine\n  - User\n  - ParentImage\n  \n"
  - question: Were any files created on the web server after the SQL injection attempt?
    context: Detects potential webshell creation or file system compromise.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|endswith:
            - ".php"
            - ".jsp"
            - ".asp"
            - ".aspx"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User