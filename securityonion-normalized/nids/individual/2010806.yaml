name: ET WEB_SPECIFIC_APPS Joomla com_yelp Component cid Parameter DELETE FROM SQL Injection Attempt
id: 1221183
description: |
  Detects SQL injection attempts targeting the Joomla com_yelp component's cid parameter with DELETE FROM statements.
  May trigger on legitimate database administration tools or security testing.
type: detection
detection_id: 2010806
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full URI and parameters used in the potential com_yelp exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access Joomla applications?
    context: Determines if HTTP requests to Joomla installations are typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other Joomla components or parameters were accessed from this source?
    context: Identifies broader reconnaissance or exploitation attempts against Joomla.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"index.php\"\n      - \"option=com_\"\n      - \"component\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - http.user_agent\n  - dst_ip\n  \n"
  - question: Were there other SQL injection patterns attempted from this source?
    context: Reveals systematic database exploitation attempts beyond the specific DELETE FROM pattern.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"SELECT\"\n      - \"UNION\"\n      - \"INSERT\"\n      - \"UPDATE\"\n      - \"DROP\"\n      - \"ALTER\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - dst_ip\n  \n"
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful or blocked by the application.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"option=com_yelp\"\n  condition: selection\nfields:\n  - http.status_code\n  - http.response.body.length\n  - http.uri\n  \n"
  - question: Are other hosts attempting similar Joomla component exploits?
    context: Identifies coordinated attacks against Joomla installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What other web applications on this server were accessed during the attack timeframe?
    context: Assesses scope of reconnaissance against the targeted web server.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: Did the source IP attempt to access database administration interfaces?
    context: Reveals attempts to directly access database management tools.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"phpmyadmin\"\n      - \"adminer\"\n      - \"mysql\"\n      - \"database\"\n      - \"db_\"\n      - \"sql\"\n  condition: selection\nfields:\n  - http.uri\n  - dst_ip\n  - http.status_code\n  \n"
  - question: What files were accessed or created on the web server after the injection attempt?
    context: Identifies potential web shell uploads or file system access through SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any database-related processes spawned on the target server?
    context: Detects potential command execution through SQL injection vulnerabilities.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|contains:
            - "mysql"
            - "mysqld"
            - "sqlcmd"
            - "osql"
            - "psql"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage