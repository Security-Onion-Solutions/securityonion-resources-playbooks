name: ET WEB_SPECIFIC_APPS Joomla com_job Component id_job Parameter UPDATE SET SQL Injection Attempt
id: 1204814
description: |
  Detects GET requests to Joomla com_job component containing SQL UPDATE SET keywords in the id_job parameter.
  May trigger on legitimate administrative operations or security testing of Joomla installations.
type: detection
detection_id: 2010857
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete URI containing the SQL injection attempt?
    context: Reveals the exact SQL payload and injection technique used against the Joomla component.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this Joomla application?
    context: Determines if this represents unauthorized access to the web application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to this Joomla installation?
    context: Identifies reconnaissance or additional exploitation attempts against the application.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
          http.uri|contains: "/index.php"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What other external connections occurred from this host?
    context: Identifies additional external communications or data movement.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did other hosts attempt similar SQL injection attacks against Joomla?
    context: Determines if this is part of a coordinated campaign targeting Joomla installations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains:
            - "option=com_job"
            - "id_job="
          http.uri|contains|all:
            - "UPDATE"
            - "SET"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
  - question: What was the server response to the SQL injection attempt?
    context: Indicates whether the injection was successful or blocked by security controls.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.method
        - http.uri
  - question: Are there signs of database interaction or file access following the request?
    context: Assesses potential impact if the SQL injection was successful.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the web server process make any external connections after this request?
    context: Identifies potential data exfiltration or remote code execution.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{network.public_ip}'
        filter:
          dst_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: What other Joomla components were accessed from this source?
    context: Reveals broader reconnaissance or exploitation attempts against the Joomla installation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "option=com_"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: Are other hosts connecting to the same Joomla server?
    context: Identifies additional sources of potential compromise or legitimate access.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description