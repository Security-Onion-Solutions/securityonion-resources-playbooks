name: ET WEB_SPECIFIC_APPS Joomla com_perchagallery Component id Parameter SELECT FROM SQL Injection Attempt
id: 1223618
description: |
  Detects GET requests to Joomla com_perchagallery component containing SQL injection patterns with SELECT FROM statements.
  May trigger on legitimate database queries or security testing activities targeting Joomla installations.
type: detection
detection_id: 2010924
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection attempt in the com_perchagallery request?
    context: Reveals the specific payload and injection technique used against the Joomla component.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this Joomla application?
    context: Determines if HTTP access to this web server represents normal user behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What additional requests were made to this Joomla installation?
    context: Identifies follow-up exploitation attempts or reconnaissance activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "index.php"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did this source IP attempt SQL injection on other web applications?
    context: Assesses whether this represents broader SQL injection scanning activity.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_patterns:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
        filter:
          dst_ip: '{destination.ip}'
        condition: selection and sql_patterns and not filter
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.method
  - question: Are other hosts targeting this Joomla server with similar injection attempts?
    context: Determines if multiple attackers are exploiting the same vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "com_perchagallery"
        sql_injection:
          http.uri|contains:
            - "SELECT"
            - "FROM"
        filter:
          src_ip: '{source.ip}'
        condition: selection and sql_injection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.method
  - question: What other Joomla components were targeted by this source IP?
    context: Reveals broader enumeration or exploitation of Joomla installation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "option=com_"
        filter:
          http.uri|contains: "com_perchagallery"
        condition: selection and not filter
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Did the web server return successful responses to any injection attempts?
    context: Identifies potentially successful SQL injection exploitation.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.status_code:
            - 200
            - 302
        sql_patterns:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "FROM"
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.status_code
        - http.request.body.length
  - question: Are there related SQL injection alerts across the organization?
    context: Determines scope of SQL injection campaign targeting web applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What was the pattern of requests from this source IP?
    context: Analyzes timing and methodology of the SQL injection attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did any processes on the web server exhibit unusual behavior after these requests?
    context: Identifies potential compromise or exploitation of the web application.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        suspicious_processes:
          Image|contains:
            - "mysql"
            - "mysqldump"
            - "php"
            - "apache"
            - "nginx"
        condition: selection and suspicious_processes
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User