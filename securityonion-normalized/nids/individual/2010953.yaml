name: ET SCAN Skipfish Web Application Scan Detected
id: 1201805
description: |
  Detects Skipfish web application security scanner activity based on its distinctive user-agent string.
  May indicate legitimate security testing or unauthorized reconnaissance of web applications.
type: detection
detection_id: 2010953
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request with the Skipfish user-agent string?
    context: Reveals the specific URLs and parameters being tested by the scanner.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this source IP normally access these web applications?
    context: Determines if this represents unauthorized scanning activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What is the pattern of requests from this source IP?
    context: Analyzes the scanning behavior and target selection patterns.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What other external connections occurred from the target web server?
    context: Identifies potential follow-up activity after the scanning.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other web applications being scanned from the same source?
    context: Determines the scope of the scanning activity across the environment.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What web applications and URLs were targeted by the scanner?
    context: Identifies which applications may be at risk based on scanner focus.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.user_agent|contains: "Mozilla/5.0 SF"
        condition: selection
      fields:
        - http.virtual_host
        - http.uri
        - http.method
        - http.status_code
        - dst_ip
  - question: Did the scanner identify any applications with error responses?
    context: Reveals potential vulnerabilities discovered during the scan.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.user_agent|contains: "Mozilla/5.0 SF"
          http.status_code:
            - 500
            - 501
            - 502
            - 503
            - 504
        condition: selection
      fields:
        - http.virtual_host
        - http.uri
        - http.status_code
        - dst_ip
  - question: Are there related security scanning alerts from the same source?
    context: Identifies coordinated reconnaissance activities beyond Skipfish.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What authentication-related requests were made by the scanner?
    context: Determines if the scanner attempted credential-based attacks.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.user_agent|contains: "Mozilla/5.0 SF"
        auth_paths:
          http.uri|contains:
            - login
            - auth
            - admin
            - signin
            - logon
        condition: selection and auth_paths
      fields:
        - http.virtual_host
        - http.uri
        - http.method
        - http.status_code
  - question: Did the scanner attempt to access administrative interfaces?
    context: Assesses targeting of high-value administrative functions.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.user_agent|contains: "Mozilla/5.0 SF"
        admin_paths:
          http.uri|contains:
            - admin
            - manager
            - console
            - dashboard
            - control
            - config
        condition: selection and admin_paths
      fields:
        - http.virtual_host
        - http.uri
        - http.method
        - http.status_code