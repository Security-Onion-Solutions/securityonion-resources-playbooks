name: ET WEB_SPECIFIC_APPS XAMPP xamppsecurity.php TEXT Parameter Cross Site Scripting Attempt
id: 1221937
description: |
  Detects XSS attempts targeting the TEXT parameter in XAMPP's xamppsecurity.php script.
  May trigger on legitimate web application testing or security assessments of XAMPP installations.
type: detection
detection_id: 2011139
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact XSS payload in the XAMPP xamppsecurity.php request?
    context: Reveals the specific cross-site scripting attempt and attack vector used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access XAMPP administrative interfaces?
    context: Determines if XAMPP administration access represents normal usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or application made the request to xamppsecurity.php?
    context: Identifies the process responsible for the XSS attempt against XAMPP.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other XAMPP administrative pages were accessed from this source?
    context: Identifies broader reconnaissance or exploitation of XAMPP components.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/xampp/"
            - "/phpmyadmin/"
            - "/webalizer/"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - http.status_code
  - question: Did any web-related processes create new files after this XSS attempt?
    context: Assesses whether the XSS attempt resulted in file creation or web shell deployment.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts attempting XSS attacks against XAMPP installations?
    context: Determines if this is part of coordinated scanning for vulnerable XAMPP deployments.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other web application vulnerabilities were tested from this source?
    context: Identifies broader web application attack patterns beyond XAMPP XSS.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        xss_patterns:
          http.uri|contains:
            - "<script"
            - "javascript:"
            - "onload="
            - "alert("
            - "document.cookie"
        condition: selection and xss_patterns
      fields:
        - http.uri
        - http.virtual_host
        - http.user_agent
        - http.status_code
  - question: Did the targeted server respond with successful HTTP status codes to XSS attempts?
    context: Determines if the XAMPP server may be vulnerable to the XSS exploitation.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "xamppsecurity.php"
        success_codes:
          http.status_code:
            - 200
            - 302
        condition: selection and success_codes
      fields:
        - http.status_code
        - http.uri
        - http.method
  - question: Were any authentication attempts made against XAMPP services?
    context: Identifies attempts to authenticate to XAMPP components after XSS discovery.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.method: "POST"
        xampp_auth:
          http.uri|contains:
            - "/xampp/"
            - "/phpmyadmin/"
            - "login"
            - "auth"
        condition: selection and xampp_auth
      fields:
        - http.uri
        - http.virtual_host
        - http.status_code
        - http.request.body.length
  - question: Are there other alerts involving the same source IP and web applications?
    context: Correlates this XSS attempt with other web application security events.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip