name: ET WEB_SPECIFIC_APPS Campsite article_id Parameter INSERT INTO SQL Injection Attempt
id: 1220403
description: |
  Detects SQL injection attempts targeting the Campsite CMS article_id parameter with INSERT INTO statements.
  May trigger on legitimate database queries or security testing tools scanning for vulnerabilities.
type: detection
detection_id: 2011218
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the article_id parameter?
    context: Reveals the exact INSERT INTO statement and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the Campsite attachments.php endpoint?
    context: Determines if this represents a change from normal application usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection to the Campsite application?
    context: Identifies the web server or application responsible for processing the request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this web server?
    context: Identifies additional attack vectors or data exfiltration attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were there other SQL injection attempts against this Campsite installation?
    context: Assesses the scope of SQL injection testing or exploitation attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "/plugins/campsiteattachment/attachments.php"
        sql_patterns:
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "DROP"
            - "DELETE"
            - "UPDATE"
            - "INSERT"
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.method
        - http.user_agent
  - question: Are other hosts targeting the same Campsite application?
    context: Determines if this is part of a coordinated attack against the web application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What database-related files were accessed after the injection attempt?
    context: Identifies potential database compromise or file system access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
        db_files:
          file.name|contains:
            - ".sql"
            - ".db"
            - ".mdb"
            - "database"
            - "backup"
        condition: selection and db_files
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Were there attempts to access administrative functions after the injection?
    context: Reveals potential privilege escalation following successful SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        admin_paths:
          http.uri|contains:
            - "admin"
            - "config"
            - "setup"
            - "install"
            - "manager"
        condition: selection and admin_paths
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Are there similar SQL injection attempts across other web applications?
    context: Determines if this is part of a broader web application attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What user-agent patterns are associated with these injection attempts?
    context: Identifies automated tools or browsers used in the attack.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        sql_injection:
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UNION"
        condition: selection and sql_injection
      fields:
        - http.user_agent
        - http.uri
        - http.method
  - question: Did any lateral movement occur from the web server after the injection attempt?
    context: Assesses whether successful exploitation led to internal network access.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport