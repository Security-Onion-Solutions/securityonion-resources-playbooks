name: ET WEB_SPECIFIC_APPS iScripts MultiCart orderid Parameter SELECT FROM SQL Injection Attempt
id: 1209647
description: |
  Detects SQL injection attempts targeting the orderid parameter in iScripts MultiCart refund_request.php.
  May trigger on legitimate database queries or security testing tools performing SQL syntax validation.
type: detection
detection_id: 2011378
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete SQL injection payload in the orderid parameter?
    context: Reveals the specific SQL commands attempted in the refund_request.php query string.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the iScripts MultiCart application?
    context: Determines if HTTP access to this web application represents normal usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other parameters were included in requests to refund_request.php?
    context: Identifies additional attack vectors or data being targeted in the web application.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "refund_request.php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
  - question: What other SQL injection patterns were attempted against this web server?
    context: Reveals broader SQL injection attack campaigns targeting the same infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
  - question: Did the web server return error messages or unusual response codes?
    context: Identifies potential SQL errors that may indicate successful injection or application compromise.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.status_code:
            - 500
            - 503
            - 400
            - 403
        condition: selection
      fields:
        - http.status_code
        - http.uri
        - http.method
  - question: What other web applications on this server received similar attack patterns?
    context: Assesses the scope of SQL injection attempts across hosted applications.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - ".php?"
            - "SELECT"
            - "FROM"
        filter:
          http.uri|contains: "refund_request.php"
        condition: selection and not filter
      fields:
        - http.uri
        - http.virtual_host
        - http.method
  - question: Are other hosts attempting SQL injection against the same web application?
    context: Determines if this represents coordinated attacks or widespread scanning activity.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "refund_request.php"
          http.uri|contains: "orderid="
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What user agent patterns are associated with these SQL injection attempts?
    context: Identifies automated tools or specific browsers used in the attack campaign.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "SELECT"
            - "UNION"
            - "orderid="
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - http.method
  - question: Did any lateral movement occur from the source of these SQL injection attempts?
    context: Identifies potential network compromise or credential theft resulting from successful attacks.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving the same source IP across the organization?
    context: Reveals broader attack patterns or campaigns targeting multiple systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip