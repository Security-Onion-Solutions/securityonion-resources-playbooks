name: ET WEB_SPECIFIC_APPS Joomla com_zoomportfolio component SELECT FROM SQL Injection Attempt
id: 1221215
description: |
  Detects SQL injection attempts against Joomla com_zoomportfolio component using SELECT FROM statements.
  May trigger on legitimate database queries or security scanning tools testing for SQL injection vulnerabilities.
type: detection
detection_id: 2011560
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection attempt?
    context: Reveals the full payload structure and injection technique used against the Joomla component.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access Joomla applications on this server?
    context: Determines if this represents unusual access patterns to the web application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests to com_zoomportfolio occurred from this source?
    context: Identifies additional exploitation attempts or reconnaissance against the same component.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains: \"com_zoomportfolio\"\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: Were there other SQL injection patterns attempted against this server?
    context: Reveals broader SQL injection campaign targeting the web application.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains:\n      - \"SELECT\"\n      - \"UNION\"\n      - \"INSERT\"\n      - \"UPDATE\"\n      - \"DELETE\"\n      - \"DROP\"\n  condition: selection\nfields:\n  - src_ip\n  - http.method\n  - http.uri\n  - http.user_agent\n  \n"
  - question: What was the web server's response to the SQL injection attempt?
    context: Determines if the injection was successful based on HTTP response codes and patterns.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    community_id: '{network.community_id}'\n  condition: selection\nfields:\n  - http.status_code\n  - http.response.body.length\n  - http.uri\n  \n"
  - question: Are other hosts attempting similar Joomla component exploitation?
    context: Identifies coordinated attacks against Joomla installations across the network.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"com_zoomportfolio\"\n  filter:\n    src_ip: '{source.ip}'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - http.method\n  - http.uri\n  - http.user_agent\n  \n"
  - question: What other Joomla components were targeted by this source?
    context: Reveals the scope of reconnaissance and exploitation attempts against the Joomla installation.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains: \"option=com_\"\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: Did any database processes show unusual activity after the injection attempt?
    context: Identifies potential successful SQL injection exploitation on the database backend.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    Image|contains:\n      - \"mysql\"\n      - \"mysqld\"\n      - \"postgres\"\n      - \"sqlservr\"\n    CommandLine|contains:\n      - \"SELECT\"\n      - \"UNION\"\n      - \"INSERT\"\n  condition: selection\nfields:\n  - Image\n  - CommandLine\n  - User\n  - ProcessGuid\n  \n"
  - question: Were any files created or modified on the web server after the SQL injection attempt?
    context: Detects potential web shell uploads or configuration changes resulting from successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the web application generate any error logs related to database operations?
    context: Identifies database errors that may indicate successful or attempted SQL injection.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: application
      detection:
        selection:
          message|contains:
            - "SQL"
            - "database"
            - "mysql"
            - "query"
            - "syntax error"
            - "invalid query"
        condition: selection
      fields:
        - message
        - application
        - level