name: ET WEB_SPECIFIC_APPS BaconMap updatelist.php filepath Local File Inclusion Attempt
id: 1222113
description: |
  Detects GET requests to BaconMap's updatelist.php containing filepath parameter with directory traversal patterns.
  May trigger on legitimate administrative access or security testing tools scanning for known vulnerabilities.
type: detection
detection_id: 2011843
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete filepath parameter value in the BaconMap request?
    context: Reveals the specific directory traversal pattern and target file being accessed.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access BaconMap administration interfaces?
    context: Determines if administrative access to this application is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to this BaconMap server around the same time?
    context: Identifies reconnaissance or follow-up exploitation attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "baconmap"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: What web application or process is serving the BaconMap requests?
    context: Identifies the web server handling these requests for vulnerability assessment.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any files accessed or created on the web server after this request?
    context: Determines if the local file inclusion attempt successfully accessed system files.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did this source IP attempt similar directory traversal attacks against other applications?
    context: Assesses whether this is part of systematic web application scanning.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "../"
            - "..%2f"
            - "..%5c"
            - "%2e%2e%2f"
            - "%2e%2e%5c"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.method
  - question: Are other hosts attempting to access BaconMap administrative functions?
    context: Determines scope of targeting against this specific application.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "baconmap/admin"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.method
        - http.uri
  - question: What is the user-agent pattern of requests targeting BaconMap?
    context: Identifies scanning tools or automated exploitation frameworks being used.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "baconmap"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: Are there related alerts involving the same source IP?
    context: Correlates with other attack patterns or malicious activity from this source.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did any web shells or script files get created after this request?
    context: Identifies potential web shell uploads or remote code execution attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User