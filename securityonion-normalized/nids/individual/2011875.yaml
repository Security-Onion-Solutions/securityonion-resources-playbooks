name: ET WEB_SPECIFIC_APPS DBHcms editmenu Parameter SELECT FROM SQL Injection Attempt
id: 1246123
description: |
  Detects SQL injection attempts targeting the editmenu parameter in DBHcms applications.
  May trigger on legitimate database queries or security testing tools scanning for SQL injection vulnerabilities.
type: detection
detection_id: 2011875
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the exact payload and parameters used in the potential exploitation attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the DBHcms application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web application or process handled this DBHcms request?
  context: Identifies the web server or application processing the potentially malicious request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other web requests occurred from this source around the same time?
  context: Identifies additional web application attacks or reconnaissance activity.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts attempting similar SQL injection attacks against DBHcms?
  context: Determines if this is part of a coordinated attack campaign against the application.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Did the source attempt SQL injection against other web applications?
  context: Reveals broader web application attack patterns from the same source.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        src_ip: '{source.ip}'
        http.uri|contains:
          - "SELECT"
          - "UNION"
          - "INSERT"
          - "DELETE"
          - "UPDATE"
          - "DROP"
      filter:
        http.uri|contains: "dbhcms_pid="
      condition: selection and not filter
    fields:
      - http.uri
      - http.method
      - dst_ip
      - dst_port
- question: What was the web server's response to the SQL injection attempt?
  context: Determines if the injection was successful or blocked by the application.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        community_id: '{network.community_id}'
    fields:
    - http.status_code
    - http.response.body.length
    - http.uri
    - src_ip
    - dst_ip
    logsource:
      category: network
      service: http
- question: Are there related alerts indicating successful database compromise?
  context: Identifies other alerts that might indicate successful exploitation.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: Did any database-related processes show unusual activity after the injection attempt?
  context: Looks for signs of successful database exploitation or compromise.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{destination.ip}'
        Image|contains:
          - "mysql"
          - "mysqld"
          - "postgresql"
          - "postgres"
          - "sqlservr"
          - "oracle"
      condition: selection
    fields:
      - Image
      - CommandLine
      - User
      - ParentImage
- question: Were any database or configuration files accessed after the SQL injection attempt?
  context: Identifies potential data access or configuration changes following the attack.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{destination.ip}'
        file.path|contains:
          - ".sql"
          - ".db"
          - ".mdb"
          - "database"
          - "config"
          - ".ini"
          - ".conf"
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - User
