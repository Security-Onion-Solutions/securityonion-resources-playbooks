name: ET WEB_SPECIFIC_APPS phpCow skin_file Parameter Local File Inclusion Attempt
id: 1220577
description: |
  Detects attempts to exploit Local File Inclusion vulnerability in phpCow templateie plugin through skin_file parameter.
  May trigger on legitimate file access patterns or security scanning tools testing for LFI vulnerabilities.
type: detection
detection_id: 2012008
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the phpCow skin_file parameter?
    context: Reveals the exact path traversal sequence and target file being accessed.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access phpCow applications?
    context: Determines if HTTP access to this phpCow installation is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other Local File Inclusion attempts occurred from this source?
    context: Identifies patterns of LFI scanning or exploitation attempts.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"../\"\n      - \"%2e%2e%2f\"\n      - \"..../\"\n      - \"..%2f\"\n      - \"%2e%2e/\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - dst_ip\n  - dst_port\n  \n"
  - question: What other web application vulnerabilities was this source testing?
    context: Reveals broader attack patterns beyond LFI attempts.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"wp-admin\"\n      - \"admin\"\n      - \"login\"\n      - \"config\"\n      - \"sql\"\n      - \"union\"\n      - \"select\"\n      - \"eval\"\n      - \"exec\"\n  condition: selection\nfields:\n  - http.uri\n  - http.method\n  - dst_ip\n  - http.virtual_host\n  \n"
  - question: Were any files accessed or created on the web server after this request?
    context: Determines if the LFI attempt resulted in unauthorized file access.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What process handled the phpCow request with the skin_file parameter?
    context: Identifies the web server or PHP process that processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are other hosts receiving similar phpCow LFI attempts?
    context: Determines scope of campaign targeting phpCow installations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What sensitive files was the attacker attempting to access through path traversal?
    context: Reveals specific system files being targeted through the LFI vulnerability.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"passwd\"\n      - \"shadow\"\n      - \"hosts\"\n      - \"config\"\n      - \"web.config\"\n      - \"wp-config\"\n      - \".htaccess\"\n      - \"database\"\n  condition: selection\nfields:\n  - http.uri\n  - dst_ip\n  - http.virtual_host\n  \n"
  - question: Did this source establish any other external connections during the attack timeframe?
    context: Identifies additional infrastructure used in the attack campaign.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there related alerts involving the same source IP across the organization?
    context: Reveals broader attack patterns and targeted systems.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip