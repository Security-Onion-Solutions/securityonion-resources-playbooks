name: ET WEB_SPECIFIC_APPS Informacion General informacion_general.php DELETE FROM SQL Injection Attempt
id: 1221945
description: |
  Detects SQL injection attempts targeting informacion_general.php using DELETE FROM statements.
  May trigger on legitimate database administration or security testing activities.
type: detection
detection_id: 2012160
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the DELETE FROM SQL injection attempt?
  context: Reveals the full payload and injection technique used against informacion_general.php.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access this web application?
  context: Determines if this represents unusual access to the vulnerable PHP application.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What process initiated the connection to the web server?
  context: Identifies the application or browser making the SQL injection request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests occurred from this source IP around the same time?
  context: Identifies additional web application attack attempts or reconnaissance activity.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Did the web server respond with database error messages or unusual status codes?
  context: Determines if the SQL injection attempt was successful or revealed database information.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection and errors
      errors:
        http.status_code:
        - 500
        - 403
        - 404
      selection:
        dst_ip: '{destination.ip}'
        dst_port: '{destination.port}'
    fields:
    - http.status_code
    - http.response.body.length
    logsource:
      category: network
      service: http
- question: Are other hosts targeting this web application with similar SQL injection attempts?
  context: Determines scope of attacks against the vulnerable PHP application.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: DELETE
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What files were accessed by the web server process after this request?
  context: Identifies potential file system access or data modification from SQL injection.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .doc
        - .docx
        - .xls
        - .xlsx
        - .pdf
        - .rtf
        - .ppt
        - .pptx
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Were any database-related processes executed on the web server?
  context: Detects potential command execution or database interaction resulting from injection.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|contains:
        - mysql.exe
        - mysqld.exe
        - sqlcmd.exe
        - psql.exe
        - sqlite3.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: Did this source IP attempt SQL injection against other web applications?
  context: Identifies broader SQL injection campaign or automated scanning activity.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and sql_patterns
      selection:
        src_ip: '{source.ip}'
      sql_patterns:
        http.uri|contains:
        - SELECT
        - INSERT
        - UPDATE
        - DELETE
        - UNION
        - DROP
        - ALTER
    fields:
    - dst_ip
    - http.uri
    - http.method
    logsource:
      category: network
      service: http
- question: Are there related SQL injection alerts from this source IP?
  context: Correlates with other database attack signatures across the organization.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What was the timing pattern of requests from this source IP?
  context: Determines if this represents automated scanning or manual exploitation attempts.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{related.ip}'
        dst_ip: '{related.ip}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: Did any processes create suspicious files after the SQL injection attempt?
  context: Identifies potential web shell creation or malicious file uploads.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User