name: ET WEB_SPECIFIC_APPS WordPress Audio showfile Parameter Cross Site Scripting Attempt
id: 1209492
description: |
  Detects attempts to exploit XSS vulnerabilities in WordPress Audio plugin through the showfile parameter.
  May trigger on legitimate file browsing or security testing of WordPress installations.
type: detection
detection_id: 2012353
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the showfile parameter?
    context: Reveals the exact XSS payload and exploitation method used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress sites or admin panels?
    context: Determines if WordPress access represents normal user behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What browser or application initiated this request to the WordPress plugin?
    context: Identifies the source application that may have been compromised or used for exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other requests were made to WordPress plugins or admin areas from this host?
    context: Reveals additional WordPress exploitation attempts or reconnaissance activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/wp-admin/"
            - "/wp-content/plugins/"
            - "/wp-includes/"
            - "wp-login.php"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - dst_ip
  - question: Did any JavaScript or HTML files get created on the web server after this request?
    context: Identifies potential web shell installation or persistent XSS payload deployment.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts attempting similar WordPress plugin exploitation?
    context: Determines if this is part of a broader WordPress attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What DNS queries were made before accessing this WordPress site?
    context: Reveals how the attacker discovered or targeted this WordPress installation.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Did this host attempt to access other vulnerable WordPress plugins?
    context: Identifies broader WordPress vulnerability scanning or exploitation patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/wp-content/plugins/"
        vulnerable_plugins:
          http.uri|contains:
            - "timthumb.php"
            - "showfile="
            - "file="
            - "page="
            - "load="
            - "cat="
        condition: selection and vulnerable_plugins
      fields:
        - http.uri
        - http.method
        - dst_ip
  - question: Were any privilege escalation attempts made against WordPress after this XSS attempt?
    context: Assesses whether the XSS was used to steal admin credentials or escalate privileges.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        wordpress_admin:
          http.uri|contains:
            - "wp-admin"
            - "wp-login"
            - "user-new.php"
            - "user-edit.php"
            - "plugins.php"
            - "theme-editor.php"
        condition: selection and wordpress_admin
      fields:
        - http.uri
        - http.method
        - http.user_agent
  - question: What responses did the web server return to these WordPress plugin requests?
    context: Determines if the exploitation attempts were successful or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          src_ip: '{source.ip}'
          http.uri|contains: "showfile="
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
        - http.method