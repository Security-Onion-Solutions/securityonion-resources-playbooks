name: ET WEB_SPECIFIC_APPS Boonex Dolphin relocate Parameter Cross Site Scripting Attempt
id: 1209338
description: |
  Detects attempts to inject JavaScript or event handlers into the relocate parameter of Boonex Dolphin CMS.
  May trigger on legitimate applications using similar parameter patterns or security testing tools.
type: detection
detection_id: 2012371
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the relocate parameter?
    context: Reveals the exact XSS payload and injection technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access Boonex Dolphin applications?
    context: Determines if HTTP access to this application is typical behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or application initiated this request?
    context: Identifies the user-agent and source application making the XSS attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests occurred from this source around the same time?
    context: Identifies additional web application testing or attack attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there similar XSS attempts against other web applications?
    context: Determines if this is part of broader web application scanning activity.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"script\"\n      - \"onmouse\"\n      - \"onkey\"\n      - \"onload\"\n      - \"onclick\"\n      - \"javascript\"\n  condition: selection\nfields:\n  - http.uri\n  - http.virtual_host\n  - http.user_agent\n  \n"
  - question: Did this source attempt to access other Boonex Dolphin modules or scripts?
    context: Reveals systematic enumeration of the CMS application structure.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.uri|contains:\n      - \"modules/boonex\"\n      - \"dolphin\"\n      - \"post_mod\"\n  condition: selection\nfields:\n  - http.uri\n  - http.virtual_host\n  - http.method\n  \n"
  - question: Are other hosts targeting the same Boonex Dolphin application?
    context: Identifies coordinated attacks or scanning from multiple sources.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were there successful HTTP responses to any of these XSS attempts?
    context: Determines if the application may be vulnerable to the injection attempts.
    range: +/-1h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    http.uri|contains: \"relocate\"\n    http.status_code:\n      - 200\n      - 302\n      - 301\n  condition: selection\nfields:\n  - http.status_code\n  - http.uri\n  - src_ip\n  \n"
  - question: Did any web application processes create or modify files after these requests?
    context: Identifies potential file uploads or shell creation through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there related web application attack alerts from this source?
    context: Reveals broader web application security testing or attack campaigns.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip