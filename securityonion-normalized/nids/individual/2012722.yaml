name: ET WEB_SPECIFIC_APPS WordPress SocialGrid Plugin default_services Cross-Site Scripting Vulnerability
id: 1202218
description: |
  Detects XSS attempts targeting the WordPress SocialGrid plugin's inline-admin.js.php file.
  May trigger on legitimate use of SocialGrid plugin or security testing of WordPress sites.
type: detection
detection_id: 2012722
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete URI and payload in the SocialGrid XSS attempt?
    context: Reveals the specific XSS payload and parameters targeting the WordPress plugin.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress sites or administrative interfaces?
    context: Determines if HTTP access to WordPress sites is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: Did the WordPress server respond successfully to the XSS request?
    context: Assesses whether the vulnerable plugin processed the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
          http.status_code: [200, 201, 202, 204, 302, 304]
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: What other WordPress plugins or admin interfaces were accessed from this source?
    context: Identifies broader WordPress reconnaissance or exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/wp-admin/"
            - "/plugins/"
            - "/wp-content/"
            - "/wp-login"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - dst_ip
  - question: What other external connections occurred from this host?
    context: Identifies additional web application testing or attack activity.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts targeting the same WordPress server with plugin exploits?
    context: Determines scope of WordPress-focused attack campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created on the WordPress server after the XSS attempt?
    context: Assesses whether the XSS led to file upload or webshell deployment.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any administrative actions performed on the WordPress server following this request?
    context: Identifies potential privilege escalation or administrative compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "/wp-admin/"
            - "admin-ajax.php"
            - "admin-post.php"
          http.method: "POST"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
        - http.request.body.length
  - question: Are there similar XSS attempts targeting other WordPress plugins across the organization?
    context: Reveals broader WordPress plugin exploitation campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What user-agent patterns are associated with this WordPress attack activity?
    context: Identifies automated tools or browsers used for WordPress exploitation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "/plugins/"
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - dst_ip
  - question: Did this source attempt to access other known vulnerable WordPress plugin endpoints?
    context: Assesses systematic WordPress plugin vulnerability scanning.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/plugins/"
          http.uri|contains:
            - ".php?"
            - "admin"
            - "upload"
            - "shell"
        condition: selection
      fields:
        - http.uri
        - http.method
        - dst_ip