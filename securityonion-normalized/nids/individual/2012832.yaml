name: ET WEB_SPECIFIC_APPS Joomla Component com_hello INSERT INTO SQL Injection Attempt
id: 1208921
description: |
  Detects GET requests to Joomla com_hello component containing SQL injection patterns with INSERT INTO statements.
  May trigger on legitimate database administration tools or security testing of Joomla installations.
type: detection
detection_id: 2012832
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the INSERT INTO SQL injection attempt?
    context: Reveals the full exploitation payload and parameters used in the Joomla attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this Joomla application?
    context: Determines if this represents unusual access patterns to the web application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests to the com_hello component occurred from this source?
    context: Identifies reconnaissance or repeated exploitation attempts against the vulnerable component.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "option=com_hello"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What web application process handled these requests?
    context: Identifies the specific web server or PHP process that processed the malicious requests.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any database-related files accessed after this SQL injection attempt?
    context: Determines if the injection succeeded in accessing or modifying database files.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|contains:
            - ".sql"
            - ".db"
            - ".mdb"
            - "database"
            - "backup"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: What other SQL injection patterns were attempted against this web server?
    context: Reveals broader SQL injection campaign activity targeting the same infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "INSERT"
            - "SELECT"
            - "UPDATE"
            - "DELETE"
            - "UNION"
            - "DROP"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: Are other hosts attempting similar Joomla com_hello component attacks?
    context: Determines if this is part of a coordinated campaign targeting Joomla installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What was the pattern of requests leading up to this SQL injection attempt?
    context: Reveals reconnaissance activity or vulnerability scanning that preceded the attack.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did this source IP attempt to access Joomla administrative interfaces?
    context: Identifies attempts to access admin panels following successful or failed SQL injection.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "administrator"
            - "admin"
            - "login"
            - "wp-admin"
            - "phpmyadmin"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: What files were modified on the web server after this injection attempt?
    context: Determines if the attack resulted in web shell installation or content modification.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.path|contains:
            - "/var/www"
            - "/htdocs"
            - "/public_html"
            - ".php"
            - ".jsp"
            - ".asp"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Are there related alerts involving the same source IP across the organization?
    context: Reveals coordinated attack activity against multiple systems from the same source.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip