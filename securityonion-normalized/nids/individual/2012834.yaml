name: ET WEB_SPECIFIC_APPS ChillyCMS mod Parameter Blind SQL Injection Attempt
id: 1247316
description: |
  Detects GET requests to ChillyCMS show.site.php with SQL injection patterns in the mod parameter.
  May trigger on legitimate database queries or security testing of ChillyCMS installations.
type: detection
detection_id: 2012834
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the ChillyCMS request?
  context: Reveals the specific injection string and techniques used against the mod parameter.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally receive requests to ChillyCMS applications?
  context: Determines if ChillyCMS access represents typical web traffic patterns.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled the ChillyCMS request with SQL injection?
  context: Identifies the web application server processing potentially malicious requests.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other SQL injection attempts occurred against this web server?
  context: Identifies additional exploitation attempts targeting the same application.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.method: GET
        http.uri|contains:
        - SELECT
        - UNION
        - ORDER BY
        - substring
        - AND 1=
        - OR 1=
    fields:
    - src_ip
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Did any database-related processes execute after the SQL injection attempt?
  context: Determines if the injection attempt resulted in database access or modification.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        Image|contains:
        - mysql
        - mysqld
        - psql
        - postgres
        - sqlite
        - sqlcmd
        host.ip: '{destination.ip}'
    fields:
    - Image
    - CommandLine
    - User
    logsource:
      category: process_creation
- question: What files were accessed by the web server after the injection attempt?
  context: Identifies potential data access or file system modifications.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        ProcessGuid: '{event_data.process.entity_id}'
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - User
- question: Are other hosts attempting SQL injection against ChillyCMS installations?
  context: Determines if this is part of a coordinated attack against ChillyCMS applications.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        http.uri|contains: SELECT
    fields:
    - src_ip
    - dst_ip
    - http.uri
    logsource:
      category: network
      service: http
- question: What user-agent patterns are associated with these SQL injection attempts?
  context: Reveals automated tools or attack frameworks targeting ChillyCMS.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: SELECT
    fields:
    - src_ip
    - http.user_agent
    - http.uri
    logsource:
      category: network
      service: http
- question: Did the source IP attempt to access other vulnerable web applications?
  context: Identifies broader web application scanning or exploitation patterns.
  range: +/-12h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        dst_ip: '{destination.ip}'
      selection:
        http.uri|contains:
        - .php
        - admin
        - login
        - config
        - wp-
        - joomla
        - drupal
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.uri
    - http.method
    logsource:
      category: network
      service: http
- question: Are there related alerts involving the same source IP?
  context: Connects this SQL injection attempt to other malicious activities.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: Did any authentication attempts occur after the SQL injection?
  context: Determines if the attacker attempted to use extracted credentials.
  range: +2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - login
        - auth
        - signin
        - admin
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.uri
    - http.method
    - http.status_code
    logsource:
      category: network
      service: http
- question: What other external connections occurred from the web server?
  context: Identifies potential data exfiltration or additional compromise indicators.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
