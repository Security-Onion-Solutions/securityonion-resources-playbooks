name: ET WEB_CLIENT Sidename.js Injected Script Served by Local WebServer
id: 1246947
description: |
  Detects HTTP responses containing sidename.js script injection patterns served by local web servers.
  May indicate compromised web applications serving malicious JavaScript or legitimate security testing.
type: detection
detection_id: 2013061
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the sidename.js script reference?
    context: Reveals the full context of the injected script and surrounding HTML content.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally serve JavaScript files to external clients?
    context: Determines if JavaScript delivery represents normal application behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process served the response containing sidename.js?
    context: Identifies the specific web service that may be compromised or misconfigured.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP responses were served to the same client?
    context: Reveals additional content delivered during the same session or attack.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          network.transport: tcp
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
        - http.virtual_host
  - question: Are other internal web servers serving similar injected scripts?
    context: Determines if multiple web applications are affected by the same injection campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "sidename.js"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.virtual_host
        - http.user_agent
  - question: What files were modified on the web server around the time of this activity?
    context: Identifies potential web shell uploads or configuration changes that enabled the injection.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the web server process create or modify any script files?
    context: Reveals whether the injection involved file system changes on the server.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What is the pattern of HTTP requests preceding this injected response?
    context: Identifies potential exploitation attempts or upload activities that led to the injection.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{source.ip}'
          http.method: ["POST", "PUT", "PATCH"]
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.request.body.length
  - question: Are there signs of lateral movement from the affected web server?
    context: Determines if the compromise has spread beyond the initial web application.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What external connections originated from the web server after serving the injected content?
    context: Identifies potential data exfiltration or command and control communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did any administrative or maintenance tasks occur on the web server recently?
    context: Determines if legitimate maintenance activities could explain the script injection.
    range: -24h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{source.ip}'
          Image|endswith:
            - "\\iisreset.exe"
            - "\\appcmd.exe"
            - "\\net.exe"
            - "\\sc.exe"
            - "\\powershell.exe"
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Are there related alerts involving the same web server or client IPs?
    context: Provides broader context for potential ongoing web application attacks.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
