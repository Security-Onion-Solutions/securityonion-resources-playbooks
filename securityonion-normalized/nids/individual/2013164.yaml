name: ET WEB_SPECIFIC_APPS Webcat web_id Parameter Blind SQL Injection Vulnerability
id: 1222667
description: |
  Detects GET requests to Webcat CMS targeting the web_id parameter with SQL injection patterns.
  May trigger on legitimate queries containing SQL-like syntax or security testing of web applications.
type: detection
detection_id: 2013164
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection string in the web_id parameter?
  context: Reveals the specific injection payload attempting to exploit the Webcat vulnerability.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the Webcat CMS application?
  context: Determines if HTTP access to this web application is typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What user-agent and source IP patterns are associated with this request?
  context: Identifies the client making the SQL injection attempt.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains: cms_view.php
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - src_ip
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: What other SQL injection attempts occurred from this source IP?
  context: Assesses whether this is part of broader SQL injection scanning activity.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and sql_patterns
      selection:
        src_ip: '{source.ip}'
      sql_patterns:
        http.uri|contains:
        - and
        - or
        - union
        - select
        - substring
        - concat
        - database
    fields:
    - http.uri
    - dst_ip
    - http.virtual_host
    logsource:
      category: network
      service: http
- question: Are other hosts being targeted with similar Webcat SQL injection attempts?
  context: Determines scope of scanning activity across web servers.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What web application processed this SQL injection request?
  context: Identifies the specific web server handling the potentially malicious request.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other external connections occurred from the targeted web server?
  context: Identifies potential data exfiltration channels if SQL injection was successful.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Were any database-related processes spawned after this request?
  context: Detects process execution that might indicate successful SQL injection exploitation.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|contains:
        - mysql.exe
        - mysqld.exe
        - sqlcmd.exe
        - psql.exe
        - sqlite3.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: What files were accessed by the web application after the SQL injection attempt?
  context: Reveals file system access that could indicate successful database compromise.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .doc
        - .docx
        - .xls
        - .xlsx
        - .pdf
        - .rtf
        - .ppt
        - .pptx
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did the source IP attempt to access other vulnerable web application endpoints?
  context: Identifies broader web application attack patterns beyond SQL injection.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and vuln_paths
      selection:
        src_ip: '{source.ip}'
      vuln_paths:
        http.uri|contains:
        - .php
        - admin
        - login
        - config
        - upload
        - shell
    fields:
    - http.uri
    - http.method
    - dst_ip
    - http.virtual_host
    logsource:
      category: network
      service: http
- question: Are there related alerts involving the same source IP and web application attacks?
  context: Correlates with other web application security events from the same source.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip