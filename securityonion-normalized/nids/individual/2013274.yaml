name: ET SHELLCODE Double BackSlash Hex Obfuscated JavaScript Heap Spray 0a0a0a0a
id: 1200203
description: |
  Detects JavaScript containing double backslash hex obfuscation patterns that may indicate heap spray shellcode.
  May trigger on legitimate JavaScript obfuscation, minification tools, or encoded content delivery.
type: detection
detection_id: 2013274
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the obfuscated JavaScript pattern?
    context: Reveals the full payload and delivery mechanism for the potential shellcode.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive JavaScript content from this source?
    context: Determines if JavaScript delivery from this destination represents normal web browsing.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or process received the obfuscated JavaScript content?
    context: Identifies the application that processed the potentially malicious JavaScript.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host after receiving the JavaScript?
    context: Identifies potential command and control channels established after exploitation.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any executable files created after the JavaScript was received?
    context: Detects malware or exploits that may have been delivered through the heap spray.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What script files were created or modified on this system?
    context: Identifies additional JavaScript or scripts that may be part of the attack chain.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts receiving similar obfuscated JavaScript patterns?
    context: Determines if this is part of a broader exploit kit campaign or drive-by download attack.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did any lateral movement occur from this host after the JavaScript delivery?
    context: Assesses whether successful exploitation led to network propagation.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What domains delivered content with similar hex obfuscation patterns?
    context: Identifies related infrastructure used in the exploit campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.request.body|contains:
            - "\\x0a\\x0a\\x0a\\x0a"
            - "\\\\x0a\\\\x0a"
            - "5C5C78306"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.user_agent
  - question: What browser exploitation artifacts were created in temporary directories?
    context: Detects files typically created during browser-based exploitation attempts.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{source.ip}'
          file.path|contains:
            - "\\Temp\\"
            - "\\AppData\\Local\\Temp\\"
            - "/tmp/"
            - "\\Downloads\\"
        file_types:
          file.name|endswith:
            - ".jar"
            - ".class"
            - ".swf"
            - ".pdf"
            - ".doc"
            - ".docx"
        condition: selection and file_types
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Were there any related alerts involving the same source IP or domain?
    context: Correlates with other detection rules that may have triggered on related exploit activity.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip