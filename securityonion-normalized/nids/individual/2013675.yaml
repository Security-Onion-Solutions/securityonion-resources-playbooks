name: ET WEB_SPECIFIC_APPS WordPress Tune Library Plugin letter parameter UNION SELECT SQL Injection Attempt
id: 1210047
description: |
  Detects SQL injection attempts targeting the WordPress Tune Library Plugin's letter parameter.
  May trigger on legitimate database queries containing UNION SELECT statements or security testing.
type: detection
detection_id: 2013675
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL injection payload in the tune-library request?
  context: Reveals the exact UNION SELECT statement and injection technique used.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access the WordPress Tune Library plugin?
  context: Determines if access to this specific plugin endpoint is typical behavior.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What other requests to WordPress plugins occurred from this source?
  context: Identifies if this is part of broader WordPress enumeration or exploitation.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - /wp-content/plugins/
        - /wp-admin/
        - /wp-includes/
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were there other SQL injection attempts against this WordPress site?
  context: Assesses the scope of SQL injection testing or exploitation attempts.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - UNION
        - SELECT
        - ''' OR '
        - 1=1
        - DROP TABLE
        - INSERT INTO
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: What was the response code and size for the SQL injection attempt?
  context: Indicates if the injection was successful or blocked by security controls.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        community_id: '{network.community_id}'
    fields:
    - http.status_code
    - http.response.body.length
    - http.method
    - http.uri
    logsource:
      category: network
      service: http
- question: Are other WordPress sites being targeted with similar SQL injection patterns?
  context: Determines if this represents a campaign against multiple WordPress installations.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What other external connections occurred from this host after the injection attempt?
  context: Identifies potential data exfiltration or secondary payloads following successful injection.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Did the web server process create any new files after the SQL injection attempt?
  context: Detects potential webshell uploads or malicious file creation through SQL injection.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.path|contains:
        - .php
        - .jsp
        - .asp
        - wp-content
        host.ip: '{destination.ip}'
    fields:
    - file.path
    - file.name
    - Image
    - User
    logsource:
      category: file_event
- question: Were there authentication attempts or privilege escalation activities following the injection?
  context: Identifies attempts to gain administrative access after successful SQL injection.
  range: +2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - wp-login.php
        - wp-admin
        - user_login
        - user_pass
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: What is the geographic origin and reputation of the attacking IP address?
  context: Provides context about the threat actor's location and known malicious activity.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip: '{source.ip}'
    fields:
    - rule.name
    - rule.category
    - alert.severity_label
    - src_ip
    logsource:
      category: alert