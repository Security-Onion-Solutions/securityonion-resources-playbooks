name: ET WEB_SPECIFIC_APPS WordPress Tune Library Plugin letter parameter UPDATE SET SQL Injection Attempt
id: 1222675
description: |
  Detects SQL injection attempts targeting the WordPress Tune Library Plugin's letter parameter with UPDATE SET statements.
  May trigger on legitimate database maintenance operations or security testing tools scanning for SQL injection vulnerabilities.
type: detection
detection_id: 2013677
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the exact payload structure and injection technique used against the WordPress plugin.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access this WordPress application or tune-library plugin?
  context: Determines if this represents unusual access to the vulnerable WordPress plugin.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What process initiated the connection to the WordPress server?
  context: Identifies the application or service that made the request to the vulnerable plugin.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What DNS queries preceded this SQL injection attempt?
  context: Shows how the attacker discovered or resolved the WordPress server address.
  range: -5m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip: '{source.ip}'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: What other HTTP requests occurred from this source to the WordPress server?
  context: Identifies reconnaissance activity or additional exploitation attempts against the WordPress site.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Are other hosts attempting SQL injection against this WordPress server?
  context: Determines if this is part of a coordinated attack against the WordPress installation.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.uri|contains:
        - tune-library
        - UPDATE
        - SET
        - letter=
    fields:
    - src_ip
    - http.method
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What other external connections occurred from this host?
  context: Identifies additional external communications that may indicate broader malicious activity.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other WordPress sites being targeted with similar SQL injection patterns?
  context: Reveals whether this is part of a broader campaign against WordPress installations.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - UPDATE
        - SET
        http.uri|contains|all:
        - .php
        - '='
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.virtual_host
    - http.uri
    - http.method
    logsource:
      category: network
      service: http
- question: Did any lateral movement occur from this host after the SQL injection attempt?
  context: Assesses whether successful exploitation led to internal network compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: What files were created on the WordPress server after this request?
  context: Identifies potential web shells or malicious files uploaded through SQL injection.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.path|contains:
        - .php
        - wp-content
        - uploads
        - plugins
        host.ip: '{destination.ip}'
    fields:
    - file.path
    - file.name
    - Image
    - User
    logsource:
      category: file_event
- question: Are there related alerts involving the same source IP across the organization?
  context: Identifies other security events that may be part of the same attack campaign.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What user-agent patterns are associated with these SQL injection attempts?
  context: Reveals tool signatures or automation patterns used in the attack.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - UPDATE
        - SET
        - SELECT
        - UNION
        - DROP
        src_ip: '{source.ip}'
    fields:
    - http.user_agent
    - http.uri
    - dst_ip
    - http.virtual_host
    logsource:
      category: network
      service: http