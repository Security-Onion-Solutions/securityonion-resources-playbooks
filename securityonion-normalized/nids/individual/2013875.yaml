name: ET WEB_SPECIFIC_APPS Joomla techfolio component UNION SELECT SQL Injection Attempt
id: 1222838
description: |
  Detects GET requests to Joomla techfolio component containing UNION SELECT statements, indicating SQL injection attempts.
  May trigger on legitimate security testing or penetration testing activities against web applications.
type: detection
detection_id: 2013875
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete URI containing the UNION SELECT SQL injection attempt?
    context: Reveals the exact SQL injection payload and parameters used in the attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access Joomla applications on this server?
    context: Determines if HTTP requests to this web server are typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool was used to send the SQL injection request?
    context: Identifies the user agent which may indicate automated tools or manual testing.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.method: GET
          http.uri|contains: "option=com_techfolio"
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - src_ip
        - dst_ip
  - question: What other SQL injection attempts occurred from this source IP?
    context: Identifies additional SQL injection patterns indicating systematic database exploitation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "EXEC"
            - "'"
            - "--"
        condition: selection
      fields:
        - http.uri
        - http.method
        - dst_ip
        - http.virtual_host
  - question: Did the web server respond with database errors or unusual content to these requests?
    context: Determines if the SQL injection attempts were successful or revealed database information.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        error_responses:
          http.status_code: [500, 502, 503]
        condition: selection and error_responses
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: What other Joomla components were targeted from this source IP?
    context: Reveals the scope of Joomla-specific attack attempts against the web server.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "option=com_"
        condition: selection
      fields:
        - http.uri
        - http.method
        - dst_ip
        - http.virtual_host
  - question: Are other hosts targeting the same Joomla component with SQL injection?
    context: Determines if this is part of a coordinated campaign against the techfolio component.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "option=com_techfolio"
          http.uri|contains: "UNION"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: What web application vulnerabilities were scanned from this source?
    context: Identifies broader web application reconnaissance and vulnerability scanning patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        scanner_patterns:
          http.uri|contains:
            - "../"
            - "%2e%2e"
            - "<script"
            - "javascript:"
            - "eval("
            - "system("
            - "cmd="
            - "exec="
        condition: selection and scanner_patterns
      fields:
        - http.uri
        - http.user_agent
        - dst_ip
        - http.virtual_host
  - question: Are there related alerts indicating successful web application compromise?
    context: Correlates with other security alerts that may indicate successful exploitation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the geographic origin and timing pattern of these requests?
    context: Analyzes the source characteristics and request frequency for threat attribution.
    range: +/-6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.method: GET
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.virtual_host