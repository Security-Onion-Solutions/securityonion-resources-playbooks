name: ET WEB_SERVER Weevely PHP backdoor detected (shell_exec() function used)
id: 1209944
description: |
  Detects HTTP requests containing base64-encoded shell_exec() function calls associated with Weevely PHP backdoors.
  May trigger on legitimate applications using base64 encoding or security testing tools.
type: detection
detection_id: 2013939
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the base64-encoded shell_exec() function?
  context: Reveals the full backdoor command and any parameters being executed.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this web server normally receive requests with base64-encoded content?
  context: Determines if base64 encoding in HTTP requests is typical for this application.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled the request with the suspected backdoor code?
  context: Identifies the specific web application that may be compromised.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other HTTP requests were made to this web server around the same time?
  context: Identifies potential reconnaissance or additional backdoor activity.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        dst_port: '{destination.port}'
    logsource:
      category: network
      service: http
  fields:
  - src_ip
  - http.method
  - http.uri
  - http.user_agent
  - http.status_code
- question: Were any files created or modified on the web server after this request?
  context: Identifies potential file uploads, modifications, or script deployment.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did the web server establish any new external connections after receiving this request?
  context: Assesses whether the backdoor resulted in reverse shell connections or data exfiltration.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other web servers receiving similar requests with base64-encoded content?
  context: Determines if this is part of a broader campaign targeting multiple servers.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What is the pattern of requests from this source IP to web servers?
  context: Analyzes the attack methodology and identifies other potential targets.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_port:
        - 80
        - 443
        - 8080
        - 8443
        src_ip: '{source.ip}'
    logsource:
      category: network
      service: http
  fields:
  - dst_ip
  - dst_port
  - http.method
  - http.uri
  - http.user_agent
  - http.status_code
- question: Were any PHP processes executed with suspicious command-line arguments?
  context: Identifies potential shell command execution through the backdoor.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection and suspicious
      selection:
        Image|contains:
        - php
        - apache
        - nginx
        - httpd
        host.ip: '{destination.ip}'
      suspicious:
        CommandLine|contains:
        - shell_exec
        - system
        - exec
        - passthru
        - eval
    logsource:
      category: process_creation
  fields:
  - Image
  - CommandLine
  - ParentImage
  - ParentCommandLine
  - User
- question: Did any lateral movement occur from this web server to internal systems?
  context: Determines if the backdoor was used to pivot to other systems.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport