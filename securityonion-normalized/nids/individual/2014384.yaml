name: ET DOS Microsoft Remote Desktop (RDP) Syn then Reset 30 Second DoS Attempt
id: 1245739
description: |
  Detects RDP reset packets following SYN/ACK exchanges that may indicate DoS attempts against RDP services.
  May trigger on legitimate network issues, connection timeouts, or security scanners testing RDP availability.
type: detection
detection_id: 2014384
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete TCP connection sequence that triggered this RDP DoS alert?
    context: Understanding the full connection pattern reveals exploitation details.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this source IP normally attempt RDP connections to this host?
    context: Determines if RDP connection attempts from this source are typical.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What is the pattern of RDP connection attempts from this source?
    context: Analyzes the timing and frequency of connection attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What other external connections occurred from the source IP during this timeframe?
    context: Identifies additional network activity that may indicate broader scanning.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: [3389, 22, 23, 80, 443, 445, 135, 139]
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - connection.history
  - question: Are other hosts receiving similar RDP connection patterns from this source?
    context: Determines scope of potential DoS or scanning activity.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What is the connection state history for RDP attempts from this source?
    context: Reveals the specific TCP handshake patterns indicating DoS behavior.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: 3389
        condition: selection
      fields:
        - connection.history
        - connection.state
        - connection.state_description
        - network.bytes
  - question: Did any successful RDP connections occur from this source IP?
    context: Determines if DoS attempts were mixed with successful authentication.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: 3389
          connection.state: "established"
        condition: selection
      fields:
        - connection.history
        - connection.state_description
        - network.bytes_toserver
        - network.bytes_toclient
  - question: Are there related DoS or scanning alerts involving the same source IP?
    context: Identifies coordinated attack patterns or scanning campaigns.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the geographic origin and reputation of the source IP?
    context: Provides context for the source of the DoS attempts.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - source.geo.country_name
        - source.geo.city_name
        - source.as.organization.name
  - question: Did the target host experience any service disruptions during this timeframe?
    context: Assesses the impact of the DoS attempts on RDP service availability.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: 3389
        condition: selection
      fields:
        - src_ip
        - connection.state
        - connection.history
        - network.bytes
  - question: Are there any authentication logs corresponding to these RDP connection attempts?
    context: Correlates network-level DoS attempts with authentication events.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: authentication
      detection:
        selection:
          source.ip: '{source.ip}'
          destination.ip: '{destination.ip}'
        condition: selection
      fields:
        - event.outcome
        - user.name
        - event.action
        - source.ip
