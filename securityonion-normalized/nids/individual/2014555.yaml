name: ET WEB_SPECIFIC_APPS WordPress flash-album-gallery plugin i Parameter Cross Site Scripting Attempt
id: 1222697
description: |
  Detects cross-site scripting attempts targeting the WordPress Flash Album Gallery plugin's i parameter.
  May trigger on legitimate usage of JavaScript events or CSS styling in plugin parameters.
type: detection
detection_id: 2014555
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete XSS payload in the flash-album-gallery plugin request?
    context: Reveals the specific JavaScript or HTML injection attempt targeting the plugin.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress flash-album-gallery plugin endpoints?
    context: Determines if this represents unusual interaction with the vulnerable plugin.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What browser or application made the request to the vulnerable plugin?
    context: Identifies the user-agent and source of the XSS attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "/wp-content/plugins/flash-album-gallery/"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
        - src_ip
  - question: Are other WordPress plugins being targeted from the same source?
    context: Identifies broader WordPress vulnerability scanning or exploitation campaigns.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "/wp-content/plugins/"
        condition: selection
      fields:
        - http.uri
        - http.method
        - dst_ip
  - question: Did the same source attempt XSS on other web applications?
    context: Reveals systematic cross-site scripting attempts across multiple targets.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        xss_patterns:
          http.uri|contains:
            - "script"
            - "onmouse"
            - "onclick"
            - "onload"
            - "style="
        condition: selection and xss_patterns
      fields:
        - http.uri
        - http.method
        - dst_ip
        - http.virtual_host
  - question: What other external connections occurred from the targeted WordPress server?
    context: Identifies potential data exfiltration or callback connections if XSS was successful.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any suspicious files created on the WordPress server after this request?
    context: Detects potential file uploads or shell creation through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts receiving similar flash-album-gallery XSS attempts?
    context: Determines scope of campaign targeting this specific WordPress plugin vulnerability.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What WordPress administrative activity occurred around this time?
    context: Identifies potential account compromise or administrative access attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "/wp-admin/"
            - "/wp-login.php"
            - "wp-admin"
        condition: selection
      fields:
        - http.uri
        - http.method
        - src_ip
        - http.user_agent
  - question: Did this source IP attempt to access other sensitive WordPress files?
    context: Reveals broader reconnaissance or exploitation attempts against WordPress installation.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        wordpress_files:
          http.uri|contains:
            - "wp-config.php"
            - "wp-includes/"
            - "xmlrpc.php"
            - "readme.html"
            - "/wp-json/"
        condition: selection and wordpress_files
      fields:
        - http.uri
        - http.method
        - http.response.status_code