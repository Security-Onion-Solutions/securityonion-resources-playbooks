name: ET WEB_SPECIFIC_APPS WordPress Skysa Official submit parameter Cross-Site Scripting Attempt
id: 1222701
description: |
  Detects XSS attempts against WordPress Skysa Official plugin through the submit parameter.
  May trigger on legitimate form submissions with script content or security testing.
type: detection
detection_id: 2014656
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the XSS payload to the Skysa plugin?
    context: Reveals the full XSS payload and attack vector through the submit parameter.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress administration areas?
    context: Determines if HTTP requests to WordPress plugins are typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool submitted the request with the XSS payload?
    context: Identifies whether this originated from a legitimate browser or automated tool.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "/wp-content/plugins/skysa-official/"
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other WordPress plugin vulnerabilities were attempted from this source?
    context: Reveals broader WordPress exploitation patterns or vulnerability scanning.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "/wp-content/plugins/"
        xss_patterns:
          http.uri|contains:
            - "script"
            - "onerror"
            - "onload"
            - "onclick"
            - "javascript:"
        condition: selection and xss_patterns
      fields:
        - http.uri
        - http.method
        - dst_ip
  - question: Did the web server return successful responses to the XSS attempts?
    context: Determines if the vulnerability exploitation was successful.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "skysa.php"
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: What other external connections occurred from this host after the XSS attempt?
    context: Identifies potential data exfiltration or additional attack infrastructure.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts targeting the same WordPress installation with similar attacks?
    context: Determines scope of coordinated attacks against this WordPress site.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were accessed on the web server during this attack timeframe?
    context: Reveals whether the XSS led to additional file system access.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did this source attempt authentication against WordPress login pages?
    context: Identifies if XSS is part of broader WordPress compromise attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "wp-login.php"
            - "wp-admin"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - dst_ip
  - question: Are there related alerts involving XSS attempts across the organization?
    context: Determines if this is part of a broader web application attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of requests to WordPress plugins from this source?
    context: Reveals systematic vulnerability scanning or targeted plugin exploitation.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "/wp-content/plugins/"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.user_agent
        - dst_ip