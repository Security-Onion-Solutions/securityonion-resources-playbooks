name: ET WEB_SPECIFIC_APPS Wordpress WPsc-MijnPress plugin rwflush parameter Cross-Site Scripting Attempt
id: 1221381
description: |
  Detects XSS attempts targeting the rwflush parameter in WordPress WPsc-MijnPress plugin.
  May trigger on legitimate requests containing similar patterns or security testing tools.
type: detection
detection_id: 2014712
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the rwflush parameter?
    context: Reveals the specific XSS payload and request structure targeting the vulnerable plugin.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress admin areas or plugins?
    context: Determines if WordPress plugin access represents normal administrative activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What user-agent and source IP initiated this XSS attempt?
    context: Identifies the client attempting to exploit the WordPress plugin vulnerability.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "mijnpress_plugin_framework.php"
        condition: selection
      fields:
        - src_ip
        - http.user_agent
        - http.method
        - http.virtual_host
  - question: Were there other attempts to access WordPress plugin files from this source?
    context: Determines if this is part of broader WordPress enumeration or exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/wp-content/plugins/"
            - "/wp-admin/"
            - "/wp-login"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: What other external connections occurred from the WordPress server?
    context: Identifies potential data exfiltration or reverse shell connections following XSS.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any files created on the WordPress server after this request?
    context: Identifies web shells or malicious files that may have been uploaded via XSS.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other WordPress sites receiving similar plugin exploitation attempts?
    context: Determines if this is part of a coordinated campaign targeting WordPress installations.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did the source IP attempt to access other vulnerable WordPress plugins?
    context: Reveals broader WordPress vulnerability scanning or exploitation patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "/wp-content/plugins/"
        xss_indicators:
          http.uri|contains:
            - "script"
            - "alert"
            - "onerror"
            - "onload"
            - "javascript"
        condition: selection and xss_indicators
      fields:
        - http.uri
        - http.virtual_host
        - dst_ip
  - question: What was the server response to the XSS attempt?
    context: Determines if the vulnerability was successfully exploited or blocked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - src_ip
        - dst_ip
  - question: Are there signs of WordPress administrative access from the attacking IP?
    context: Identifies successful compromise or credential theft following XSS exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/wp-admin/"
            - "/wp-login.php"
        success_indicators:
          http.status_code: [200, 302]
        condition: selection and success_indicators
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.virtual_host