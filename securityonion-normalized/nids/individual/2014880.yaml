name: ET WEB_SPECIFIC_APPS Wordpress wp-livephp plugin wp-live.php Cross-Site Scripting Attempt
id: 1209708
description: |
  Detects attempts to exploit cross-site scripting vulnerabilities in the WordPress LivePHP plugin through malicious script injection in the s parameter.
  May trigger on legitimate web development activities or security testing of WordPress installations.
type: detection
detection_id: 2014880
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the wp-live.php XSS attempt?
    context: Reveals the exact payload and injection method used in the cross-site scripting attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress administration interfaces?
    context: Determines if HTTP access to WordPress plugins represents normal administrative activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What user-agent and referrer headers accompanied this XSS attempt?
    context: Identifies the source application or browser making the malicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "wp-live.php"
        condition: selection
      fields:
        - http.user_agent
        - http.referrer
        - http.uri
        - http.method
  - question: Were there other attempts to access WordPress plugin files from this source?
    context: Reveals broader WordPress reconnaissance or exploitation attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "/wp-content/plugins/"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: What other external connections occurred from this WordPress server?
    context: Identifies potential data exfiltration or command and control activity following exploitation.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did this source IP attempt to access other web applications or admin interfaces?
    context: Determines if this is part of broader web application scanning or targeted attack.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/admin"
            - "/wp-admin"
            - "/administrator"
            - "/login"
            - "/phpmyadmin"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - dst_ip
  - question: Were any PHP processes executed on the WordPress server following this request?
    context: Identifies potential code execution resulting from the XSS vulnerability exploitation.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|endswith: "php.exe"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User
  - question: What files were created or modified on the WordPress server after this XSS attempt?
    context: Detects potential webshell uploads or configuration changes from successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts receiving similar wp-livephp plugin exploitation attempts?
    context: Determines if this represents a targeted campaign against WordPress installations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did the WordPress server establish any unexpected external connections after this request?
    context: Identifies potential command and control communication or data exfiltration.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        private_filter:
          dst_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
        condition: selection and not private_filter
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: Were there any authentication attempts or privilege escalation activities on the WordPress server?
    context: Reveals attempts to gain administrative access following initial exploitation.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "wp-login.php"
            - "xmlrpc.php"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent