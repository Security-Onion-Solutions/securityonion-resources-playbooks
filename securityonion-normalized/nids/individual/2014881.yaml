name: ET WEB_SPECIFIC_APPS WordPress Mingle Forum groupid parameter Cross-Site Scripting Attempt
id: 1209660
description: |
  Detects Cross-Site Scripting attempts targeting the groupid parameter in WordPress Mingle Forum plugin.
  May trigger on legitimate administrative actions or security testing of WordPress installations.
type: detection
detection_id: 2014881
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the XSS payload in the groupid parameter?
    context: Reveals the specific Cross-Site Scripting payload targeting the Mingle Forum plugin.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WordPress administrative functions?
    context: Determines if administrative access to WordPress is typical for this source.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool was used to submit the XSS payload?
    context: Identifies the user agent that may indicate manual testing or automated scanning.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "groupid="
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: What other WordPress vulnerabilities were tested from this source?
    context: Reveals whether this is part of broader WordPress reconnaissance or exploitation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/wp-admin/"
            - "/wp-content/"
            - "/wp-includes/"
        xss_patterns:
          http.uri|contains:
            - "script"
            - "javascript"
            - "onerror"
            - "onload"
            - "onclick"
        condition: selection and xss_patterns
      fields:
        - http.uri
        - http.method
        - dst_ip
  - question: Were any other Mingle Forum administrative functions accessed?
    context: Determines scope of interaction with the vulnerable WordPress plugin.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "page=mfstructure"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: What other external connections occurred from this host after the XSS attempt?
    context: Identifies potential data exfiltration or additional attack infrastructure.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other WordPress installations being targeted with similar XSS payloads?
    context: Determines if this represents a campaign against multiple WordPress sites.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "groupid="
        xss_patterns:
          http.uri|re|i: ".*(script|on(mouse|key|load|click)).*"
        condition: selection and xss_patterns
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.virtual_host
  - question: What authentication attempts occurred against WordPress during this timeframe?
    context: Reveals whether XSS attempts are combined with credential attacks.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "wp-login.php"
            - "wp-admin"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - http.user_agent
  - question: Did the targeted WordPress server execute any suspicious scripts after the XSS attempt?
    context: Identifies whether the Cross-Site Scripting payload resulted in server-side execution.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - php.exe
          - w3wp.exe
          - httpd
          - apache2
          - nginx
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Are there related alerts indicating successful WordPress compromise?
    context: Correlates with other security events that may indicate successful exploitation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip