name: ET MALWARE W32/Armageddon CnC Checkin
id: 1241878
description: |
  Detects HTTP POST requests with "ArmageddoN" user agent and "GetList=" body content indicating W32/Armageddon malware command and control communication.
  This specific pattern is distinctive to the Armageddon malware family's check-in mechanism.
type: detection
detection_id: 2014963
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP POST request with the ArmageddoN user agent?
    context: Reveals the full C2 communication structure and payload details.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: What process initiated this HTTP POST request to the external server?
    context: Identifies the malware executable responsible for the C2 communication.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Does this host normally make HTTP POST requests to external servers?
    context: Establishes baseline to determine if this C2 traffic represents unusual behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other external connections occurred from this host around the same time?
    context: Identifies additional C2 channels or data exfiltration attempts by the malware.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts making connections with the same ArmageddoN user agent pattern?
    context: Determines the scope of the Armageddon malware campaign across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created by the process making these C2 requests?
    context: Identifies malware artifacts, downloaded payloads, or data harvesting files.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: What is the timing pattern of connections to this C2 server?
    context: Reveals the malware's beacon interval and communication schedule.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What persistence mechanisms were established on this host?
    context: Identifies registry modifications used by Armageddon for maintaining access.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: Were any scheduled tasks created around the time of this C2 communication?
    context: Detects persistence mechanisms commonly used by the Armageddon malware family.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|endswith:
          - schtasks.exe
          - taskeng.exe
          - taskhostw.exe
        condition: selection
      fields:
        - CommandLine
        - Image
        - ProcessGuid
        - User
        - ParentImage
  - question: Did any lateral movement occur from this compromised host?
    context: Assesses whether the malware attempted to spread to other systems.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there other alerts related to this C2 infrastructure?
    context: Correlates with additional detection rules targeting the same campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did the host attempt connections to other known malware hosting domains?
    context: Identifies broader malware infrastructure usage patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
          dns.query.name|contains:
            - ".tk"
            - ".ml"
            - "dyndns"
            - "no-ip"
            - "ddns"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: What other HTTP requests used suspicious user agent patterns from this host?
    context: Reveals additional malware families or tools operating on the same system.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        suspicious_ua:
          http.user_agent|contains:
            - "bot"
            - "crawler"
            - "wget"
            - "curl"
            - "scanner"
        condition: selection and suspicious_ua
      fields:
        - http.user_agent
        - http.method
        - dst_ip
        - http.uri