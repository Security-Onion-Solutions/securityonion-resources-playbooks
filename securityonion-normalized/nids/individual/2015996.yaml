name: ET EXPLOIT MySQL Server for Windows Remote SYSTEM Level Exploit (Stuxnet Technique)
id: 1204366
description: |
  Detects MySQL exploitation attempts using WMI event consumers to achieve remote code execution.
  Uses techniques similar to Stuxnet for persistence and system-level access through MySQL injection.
type: detection
detection_id: 2015996
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete MySQL query containing the WMI exploitation payload?
    context: Reveals the full INSERT statement with embedded WMI event consumer code.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this source typically connect to MySQL servers in this environment?
    context: Determines if this connection represents unusual database access patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other database connections occurred from this source IP?
    context: Identifies potential database enumeration or multi-target exploitation attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: [3306, 1433, 5432, 1521, 27017]
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state_description
  - question: Are other MySQL servers being targeted with similar exploitation attempts?
    context: Determines scope of database server compromise campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What processes were created on the MySQL server after this connection?
    context: Identifies successful code execution through WMI event consumer exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
  - question: Were any WMI event consumers or filters created on the target system?
    context: Detects successful WMI persistence mechanism installation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          TargetObject|contains:
            - "__EventFilter"
            - "__EventConsumer"
            - "__FilterToConsumerBinding"
            - "ActiveScriptEventConsumer"
        condition: selection
      fields:
        - TargetObject
        - Details
        - Image
  - question: What executable files were created on the MySQL server following this connection?
    context: Identifies malware deployment through successful database exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.name|endswith: ['.exe', '.dll', '.scr', '.bat', '.cmd']
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
  - question: Did the MySQL server establish new outbound connections after this exploitation attempt?
    context: Identifies command and control communications from compromised database server.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        filter:
          dst_ip: '{network.private_ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - dst_port
        - connection.state_description
  - question: Are there signs of lateral movement from the compromised MySQL server?
    context: Assesses spread of compromise through the network infrastructure.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What scheduled tasks or services were created on the target system?
    context: Identifies additional persistence mechanisms beyond WMI event consumers.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|endswith:
          - schtasks.exe
          - taskeng.exe
          - taskhostw.exe
        condition: selection
      fields:
        - CommandLine
        - Image
        - ProcessGuid
        - User
        - ParentImage
  - question: Did other database servers receive connections from the same exploitation source?
    context: Maps the scope of database infrastructure targeting.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: [3306, 1433, 5432, 1521, 27017]
        filter:
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - dst_port
        - connection.state_description
  - question: Are there other alerts related to this MySQL exploitation campaign?
    context: Correlates with additional security events from this attack pattern.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip