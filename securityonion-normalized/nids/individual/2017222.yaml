name: ET HUNTING Obfuscated Split String (Single Q) 3
id: 1225878
description: |
  Detects JavaScript obfuscation techniques using split string patterns in HTTP response content.
  May indicate attempts to evade detection or could be legitimate code minification/obfuscation.
type: detection
detection_id: 2017222
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP response containing the obfuscated JavaScript?
  context: Reveals the full context of the obfuscated code and delivery method.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally download JavaScript content from this source?
  context: Determines if receiving JavaScript from this location represents normal behavior.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What process or browser downloaded the obfuscated JavaScript content?
  context: Identifies the application that received the potentially malicious content.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other JavaScript files were downloaded from the same source?
  context: Identifies additional script files that may be part of the same campaign.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        src_ip: '{source.ip}'
        dst_ip: '{destination.ip}'
        http.method: "GET"
      js_filter:
        http.uri|contains:
          - ".js"
          - "javascript"
          - "script"
      condition: selection and js_filter
    fields:
      - http.uri
      - http.user_agent
      - http.status_code
- question: Were any script files created on disk after downloading this content?
  context: Determines if the obfuscated JavaScript was saved locally for execution.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: What other hosts are downloading similar obfuscated JavaScript patterns?
  context: Identifies the scope of potential malware distribution or exploit kit activity.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: Did any PowerShell or script execution occur after downloading this content?
  context: Identifies potential payload execution following JavaScript obfuscation.
  range: +30m
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|contains:
        - powershell.exe
        - wscript.exe
        - cscript.exe
        - mshta.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: What other external connections occurred from this host after receiving the obfuscated content?
  context: Identifies additional command and control or malware download activity.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are there related alerts involving the same IP addresses or domains?
  context: Correlates with other security events from the same infrastructure.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What is the pattern of HTTP requests to this suspicious source?
  context: Analyzes communication timing and frequency patterns.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{related.ip}'
        dst_ip: '{related.ip}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: Did this host access any other suspicious web resources with obfuscation indicators?
  context: Identifies broader web-based threat exposure beyond this specific alert.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        src_ip: '{source.ip}'
        http.method: "GET"
      obfuscation_patterns:
        http.uri|contains:
          - "eval"
          - "unescape"
          - "fromCharCode"
          - "split"
          - "join"
          - "replace"
      condition: selection and obfuscation_patterns
    fields:
      - http.virtual_host
      - http.uri
      - dst_ip
      - http.user_agent