name: ET EXPLOIT_KIT Styx Landing Page Oct 25 2013
id: 1212812
description: |
  Detects HTTP responses containing specific JavaScript patterns associated with Styx exploit kit landing pages.
  May trigger on legitimate websites using similar JavaScript obfuscation techniques or encoding patterns.
type: detection
detection_id: 2017635
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the Styx exploit kit JavaScript patterns?
    context: Reveals the full payload and delivery mechanism used by the exploit kit.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this web server?
    context: Determines if this represents typical browsing behavior or suspicious activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser process received the exploit kit landing page?
    context: Identifies the application that processed the potentially malicious JavaScript.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host after receiving the exploit kit page?
    context: Identifies potential payload downloads or C2 communications following exploitation.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created after the exploit kit delivery?
    context: Detects malware dropped through successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts receiving similar exploit kit patterns from the same infrastructure?
    context: Determines scope of the exploit kit campaign across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What DNS queries occurred before accessing the exploit kit landing page?
    context: Reveals the infection vector or redirect chain leading to exploitation.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Did any lateral movement occur from this host after the exploit kit exposure?
    context: Assesses whether successful exploitation led to network propagation.
    range: +24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What persistence mechanisms were established after the exploit kit contact?
    context: Identifies methods used to maintain access following successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: Are there related exploit kit alerts across the organization?
    context: Reveals the broader scope of the campaign targeting multiple hosts.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did the browser process spawn any suspicious child processes after receiving the exploit kit page?
    context: Detects successful exploitation through abnormal process execution chains.
    range: +1h
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip: '{source.ip}'\n    ParentImage|contains:\n      - \"chrome.exe\"\n      - \"firefox.exe\" \n      - \"iexplore.exe\"\n      - \"msedge.exe\"\n  suspicious:\n    Image|contains:\n      - \"powershell.exe\"\n      - \"cmd.exe\"\n      - \"wscript.exe\"\n      - \"cscript.exe\"\n      - \"rundll32.exe\"\n  condition: selection and suspicious\nfields:\n  - ParentImage\n  - Image\n  - CommandLine\n  - ProcessGuid\n"
  - question: What other domains are hosted on the same IP infrastructure as the exploit kit server?
    context: Reveals related malicious infrastructure and potential campaign attribution.
    range: +/-7d
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        resolution:
          dns.resolved_ip: '{destination.ip}'
        condition: selection and resolution
      fields:
        - dns.query.name
        - dns.resolved_ip