name: ET WEB_SERVER Possible WebLogic Monitor Login With Default Creds
id: 1206754
description: |
  Detects POST requests to WebLogic console attempting to authenticate with default monitor credentials.
  May trigger on legitimate administrative access using default credentials or security testing.
type: detection
detection_id: 2017805
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP POST request to the WebLogic console?
    context: Reveals the exact authentication attempt and any additional parameters sent.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access WebLogic administrative interfaces?
    context: Determines if console access represents typical administrative activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What application or process initiated the connection to the WebLogic console?
    context: Identifies whether the request came from administrative tools or other applications.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were there successful authentication responses from the WebLogic server?
    context: Determines if the default credentials were accepted by the server.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
          http.status_code:
            - 200
            - 302
            - 303
        condition: selection
      fields:
        - http.status_code
        - http.uri
        - http.user_agent
  - question: What other WebLogic administrative endpoints were accessed from this source?
    context: Identifies additional console activity that may indicate administrative session establishment.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/console/"
            - "/wls-exporter/"
            - "/em/"
            - "/dms/"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
        - dst_ip
  - question: Are other hosts attempting authentication to the same WebLogic server?
    context: Determines if this is part of broader credential testing against the WebLogic instance.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any files created on the WebLogic server host after the authentication attempt?
    context: Identifies potential file uploads or deployment activities following console access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the source IP attempt other default credential combinations?
    context: Reveals broader credential testing patterns against WebLogic or other services.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.request_body|contains:
            - "j_username=weblogic"
            - "j_username=admin"
            - "j_username=system"
            - "j_username=operator"
            - "j_password=weblogic"
            - "j_password=admin"
            - "j_password=welcome1"
        condition: selection
      fields:
        - http.uri
        - dst_ip
        - http.request_body
  - question: What is the pattern of authentication attempts from this source IP?
    context: Analyzes timing and frequency to distinguish between manual access and automated attacks.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Are there related alerts involving WebLogic exploitation from this source?
    context: Identifies coordinated attack patterns targeting WebLogic infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip