name: ET WEB_CLIENT DRIVEBY FakeUpdate - URI - /styles/javaupdate.css
id: 1209940
description: |
  Detects HTTP requests to the specific URI path "/styles/javaupdate.css" associated with fake Java update campaigns.
  May trigger on legitimate CSS requests if applications use this exact path, though this is uncommon.
type: detection
detection_id: 2017845
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request to /styles/javaupdate.css?
  context: Reveals the full request details including headers and user-agent for the fake update campaign.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access CSS files from this external domain?
  context: Determines if requests to this domain represent typical web browsing behavior.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What process initiated the connection to retrieve the fake Java update CSS?
  context: Identifies the browser or application that accessed the malicious resource.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What DNS queries preceded the connection to the fake update domain?
  context: Shows how the host resolved the domain hosting the fake Java update.
  range: -5m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip: '{source.ip}'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: What other external connections occurred from this host after the CSS request?
  context: Identifies potential payload downloads or C2 communications following the fake update.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts accessing the same fake Java update infrastructure?
  context: Determines the scope of the driveby campaign across the organization.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What executable files were created after the fake update CSS was accessed?
  context: Identifies potential malware dropped as part of the fake Java update campaign.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Were any Java-related processes executed following this activity?
  context: Detects execution of fake Java updaters or malicious Java applications.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|contains:
        - java.exe
        - javaw.exe
        - javaws.exe
        - jucheck.exe
        - jusched.exe
      condition: selection
    fields:
      - User
      - Image
      - CommandLine
      - ParentImage
      - ProcessGuid
- question: Did any lateral movement occur from this host?
  context: Assesses whether the fake update led to network propagation or credential harvesting.
  range: +4h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Are there related alerts indicating a broader fake update campaign?
  context: Identifies coordinated fake update activities across multiple hosts or domains.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What other hosts accessed URLs containing 'javaupdate' or similar fake update patterns?
  context: Reveals the broader scope of fake Java update campaign activity.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        http.uri|contains:
          - "javaupdate"
          - "java_update"
          - "java-update"
          - "fakeupdate"
          - "fake_update"
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - http.virtual_host
      - http.uri
      - http.user_agent
- question: What is the timing pattern of connections to this fake update infrastructure?
  context: Analyzes whether connections follow automated patterns typical of malware campaigns.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{related.ip}'
        dst_ip: '{related.ip}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description