name: ET EXPLOIT_KIT Fake CDN Sweet Orange Gate July 17 2014
id: 1243053
description: |
  Detects HTTP requests to fake CDN domains with specific URI patterns characteristic of Sweet Orange exploit kit.
  May trigger on legitimate CDN services with similar naming or benign applications using similar parameter structures.
type: detection
detection_id: 2018737
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request to the fake CDN domain?
    context: Reveals the exact URI pattern and host details matching exploit kit behavior.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access CDN services or content delivery networks?
    context: Determines if CDN access represents normal browsing patterns for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection to the fake CDN domain?
    context: Identifies the browser or application that made the suspicious request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded the connection to this fake CDN domain?
    context: Shows the domain resolution process and potential redirect chains.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other external connections occurred from this host after the exploit kit contact?
    context: Identifies potential payload downloads or additional malicious communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts accessing domains with similar fake CDN patterns?
    context: Determines if this is part of a broader exploit kit campaign.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    http.host|contains: \"cdn\"\n    http.uri|re: \"^/[a-z]\\\\?[a-z]=[0-9]{5,}$\"\n  filter:\n    src_ip: '{source.ip}'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - dst_ip\n  - http.host\n  - http.uri\n  \n"
  - question: What executable files were created after contact with the exploit kit?
    context: Identifies potential malware payloads delivered through the exploit kit.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any browser processes spawning suspicious child processes after this activity?
    context: Detects exploitation leading to code execution within browser processes.
    range: +1h
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  browser_selection:\n    host.ip: '{source.ip}'\n    ParentImage|contains:\n      - \"iexplore.exe\"\n      - \"chrome.exe\"\n      - \"firefox.exe\"\n      - \"edge.exe\"\n  suspicious_children:\n    Image|contains:\n      - \"powershell.exe\"\n      - \"cmd.exe\"\n      - \"wscript.exe\"\n      - \"cscript.exe\"\n      - \"rundll32.exe\"\n  condition: browser_selection and suspicious_children\nfields:\n  - Image\n  - CommandLine\n  - ParentImage\n  - ParentCommandLine\n  \n"
  - question: Did any lateral movement occur from this host after the exploit kit contact?
    context: Assesses whether initial compromise led to internal network reconnaissance.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there other alerts involving the same exploit kit infrastructure?
    context: Correlates related alerts to understand campaign scope and infrastructure.
    range: +/-7d
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
