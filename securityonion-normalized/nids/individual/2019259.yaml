name: ET WEB_SERVER Possible CVE-2014-6271 Attempt in HTTP URLENCODE Generic 16
id: 1245802
description: |
  Detects URL-encoded Bash commands in HTTP requests that may exploit the Shellshock vulnerability (CVE-2014-6271).
  May trigger on legitimate applications that process URL-encoded special characters or security testing tools.
type: detection
detection_id: 2019259
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the URL-encoded Bash command pattern?
    context: Reveals the full payload and request structure that triggered the Shellshock detection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive requests with URL-encoded special characters?
    context: Determines if URL-encoded command patterns are typical for this application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application or CGI script processed this request?
    context: Identifies the specific server component that may be vulnerable to Shellshock.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this web server after the request?
    context: Identifies potential command execution results or data exfiltration attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any shell scripts or executables created on the web server?
    context: Detects files that may have been created through successful Shellshock exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other web servers receiving similar URL-encoded Bash command patterns?
    context: Determines if this is part of a broader Shellshock exploitation campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of HTTP requests from this source IP?
    context: Analyzes the broader attack methodology and identifies scanning behavior.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did any system commands execute on the web server during this timeframe?
    context: Identifies potential successful command execution through Shellshock vulnerability.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - bash
          - sh
          - dash
          - zsh
          - ksh
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Were any CGI or web application configuration files modified?
    context: Detects potential persistence mechanisms or configuration changes.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
        cgi_files:
          file.path|contains:
            - "/cgi-bin/"
            - ".cgi"
            - ".pl"
            - ".py"
            - ".sh"
        condition: selection and cgi_files
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
  - question: Did the web server attempt to connect to any command and control infrastructure?
    context: Identifies potential reverse shell or callback connections from successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        suspicious_ports:
          dst_port:
            - 4444
            - 4445
            - 4446
            - 1234
            - 31337
            - 8080
            - 9999
        condition: selection and suspicious_ports
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - network.transport
  - question: Are there related alerts indicating successful web server compromise?
    context: Correlates with other detection rules that may indicate successful exploitation.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
