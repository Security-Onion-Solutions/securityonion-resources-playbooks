name: ET EXPLOIT Possible CVE-2014-3704 Drupal SQLi attempt URLENCODE 19
id: 1212074
description: |
  Detects HTTP requests containing URL-encoded form data that matches Drupal SQL injection patterns for CVE-2014-3704.
  May trigger on legitimate form submissions or security testing tools scanning for Drupal vulnerabilities.
type: detection
detection_id: 2019440
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the URL-encoded name parameter?
    context: Reveals the full SQL injection payload targeting the Drupal vulnerability.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive form submissions with complex parameter structures?
    context: Determines if this POST request pattern is typical for this web application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process handled this request?
    context: Identifies the specific web server or application that processed the potential SQL injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any database-related processes active during this request?
    context: Assesses whether the SQL injection attempt reached database components.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - mysql.exe
          - mysqld.exe
          - postgres.exe
          - sqlservr.exe
          - php.exe
          - apache2.exe
          - httpd.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: What files were created or modified after this request was processed?
    context: Identifies potential web shells, configuration changes, or malicious uploads.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the web server establish any new external connections after this request?
    context: Detects potential data exfiltration or reverse shell connections.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts receiving similar Drupal exploitation attempts?
    context: Determines if this is part of a broader campaign targeting Drupal installations.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were there other SQL injection attempts against this web server?
    context: Reveals additional exploitation attempts that may indicate persistent targeting.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
          http.request.body|contains:
            - "union select"
            - "' or 1=1"
            - "' or '1'='1"
            - "sleep("
            - "benchmark("
            - "waitfor delay"
            - "%27 or"
            - "union all select"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.request.body
  - question: What is the pattern of requests from this source IP address?
    context: Analyzes the broader attack methodology and identifies automated scanning behavior.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
        - http.request.body
  - question: Did this attack attempt target specific Drupal administrative paths?
    context: Determines if the attacker has knowledge of the Drupal installation structure.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "/admin"
            - "/user"
            - "/node"
            - "/?q=admin"
            - "/?q=user"
            - "/?q=node"
            - "/index.php"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code