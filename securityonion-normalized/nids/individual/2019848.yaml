name: ET MALWARE Sony Breach Wiper Callout
id: 1255760
description: |
  Detects connections to known command-and-control infrastructure associated with the Sony breach wiper malware.
  These IPs are specifically linked to destructive malware campaigns and represent high-confidence threat indicators.
type: detection
detection_id: 2019848
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete connection established to the wiper C2 infrastructure?
    context: Documents the full network communication pattern to known malicious infrastructure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally establish connections to these geographic regions?
    context: Determines if connections to these international IPs represent unusual behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection to the wiper C2 server?
    context: Identifies the application or malware component responsible for the C2 communication.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host?
    context: Reveals additional C2 channels or data exfiltration attempts associated with the wiper campaign.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same wiper infrastructure?
    context: Determines the scope of the Sony breach wiper infection across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created on this host?
    context: Identifies wiper malware components or additional payloads deployed during the attack.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What is the timing pattern of connections to the wiper C2 servers?
    context: Analyzes the beacon pattern and communication frequency of the wiper malware.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did any lateral movement occur from this host?
    context: Assesses whether the wiper malware is spreading to other systems in the network.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What files were created by the process making C2 connections?
    context: Identifies destructive payloads or additional malware components downloaded from C2.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Were any persistence mechanisms established on this host?
    context: Determines if the wiper malware installed registry keys for persistence.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: What scheduled tasks or services were created during this timeframe?
    context: Identifies persistence or execution mechanisms used by the wiper malware.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|endswith:
          - schtasks.exe
          - taskeng.exe
          - taskhostw.exe
        condition: selection
      fields:
        - CommandLine
        - Image
        - ProcessGuid
        - User
        - ParentImage
  - question: Are there other alerts indicating destructive activity on this host?
    context: Correlates with file deletion, system modification, or other destructive behaviors.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did this host attempt to connect to other known APT infrastructure?
    context: Identifies connections to additional threat actor infrastructure beyond the wiper C2.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip|cidr:
            - "1.0.0.0/8"
            - "2.0.0.0/8"
            - "14.0.0.0/8"
            - "27.0.0.0/8"
            - "36.0.0.0/8"
            - "39.0.0.0/8"
            - "41.0.0.0/8"
            - "42.0.0.0/8"
            - "43.0.0.0/8"
            - "45.0.0.0/8"
            - "46.0.0.0/8"
            - "58.0.0.0/8"
            - "59.0.0.0/8"
            - "60.0.0.0/8"
            - "61.0.0.0/8"
            - "101.0.0.0/8"
            - "103.0.0.0/8"
            - "106.0.0.0/8"
            - "110.0.0.0/8"
            - "111.0.0.0/8"
            - "112.0.0.0/8"
            - "113.0.0.0/8"
            - "114.0.0.0/8"
            - "115.0.0.0/8"
            - "116.0.0.0/8"
            - "117.0.0.0/8"
            - "118.0.0.0/8"
            - "119.0.0.0/8"
            - "120.0.0.0/8"
            - "121.0.0.0/8"
            - "122.0.0.0/8"
            - "123.0.0.0/8"
            - "124.0.0.0/8"
            - "125.0.0.0/8"
        known_c2:
          dst_ip: '{destination.ip}'
        condition: selection and not known_c2
      fields:
        - dst_ip
        - dst_port
        - network.bytes_toserver
        - network.bytes_toclient
