name: ET MALWARE TorrentLocker DNS Lookup (royalgourp.org)
id: 1255936
description: |
  Detects DNS queries to royalgourp.org associated with TorrentLocker ransomware.
  This domain is part of the TorrentLocker C2 infrastructure used for ransom payment coordination.
type: detection
detection_id: 2020056
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete DNS query to royalgourp.org?
    context: Reveals the specific query details and resolution information for the TorrentLocker domain.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Does this host normally query domains associated with payment or file services?
    context: Determines if DNS queries to payment-related domains are typical for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name: '{dns.query_name}'
        condition: selection
      fields:
        - dns.query.name
  - question: What process initiated the DNS query to royalgourp.org?
    context: Identifies the application responsible for contacting TorrentLocker infrastructure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host?
    context: Identifies additional C2 communications or data exfiltration channels.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts querying the same TorrentLocker infrastructure?
    context: Determines the scope of potential TorrentLocker infections in the environment.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created on this host?
    context: Identifies potential TorrentLocker binaries or related malware components.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What document files were encrypted or modified?
    context: Assesses the impact of potential TorrentLocker encryption activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did lateral movement occur from this host to other systems?
    context: Determines if TorrentLocker spread to additional systems in the network.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Were any persistence mechanisms established on this host?
    context: Identifies registry modifications used by TorrentLocker for system persistence.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: Are there related TorrentLocker alerts across the organization?
    context: Reveals the broader scope of TorrentLocker campaign activity.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the timing pattern of DNS queries to TorrentLocker domains?
    context: Analyzes communication patterns to understand C2 behavior and potential automated processes.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did this host query other domains in the TorrentLocker infrastructure?
    context: Identifies additional TorrentLocker C2 domains or payment portals accessed by this host.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
          dns.query.name|contains:
            - "torrentlocker"
            - "royalgourp"
            - "cryptolocker"
            - "locky"
        filter:
          dns.query.name: "royalgourp.org"
        condition: selection and not filter
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: What ransom or payment-related domains were accessed from this network?
    context: Reveals broader ransomware payment portal access that may indicate multiple infections.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name|contains:
            - "ransom"
            - "decrypt"
            - "payment"
            - "bitcoin"
            - "btc"
            - "crypto"
            - "unlock"
            - "recover"
        condition: selection
      fields:
        - src_ip
        - dns.query.name
        - dns.resolved_ip
