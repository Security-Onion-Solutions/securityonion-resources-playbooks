name: ET ATTACK_RESPONSE MySQL error in HTTP response, possible SQL injection point
id: 1242590
description: |
  Detects MySQL error messages in HTTP responses that may indicate SQL injection attempts.
  Can trigger on legitimate database error conditions or debugging scenarios.
type: detection
detection_id: 2020507
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP response containing the MySQL error message?
  context: Reveals the full database error that exposed internal application details.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this web application normally generate MySQL errors?
  context: Determines if database errors are typical for this application.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What HTTP request preceded this MySQL error response?
  context: Identifies the request that may have triggered the SQL injection attempt.
  range: -5m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        dst_port: '{destination.port}'
        http.method:
        - GET
        - POST
        - PUT
        - DELETE
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.request.body
    logsource:
      category: network
      service: http
- question: What other external hosts accessed this web application recently?
  context: Identifies potential coordinated SQL injection attempts.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        dst_ip: '{destination.ip}'
        dst_port: '{destination.port}'
    fields:
    - src_ip
    - http.method
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Did this source IP attempt SQL injection patterns against other web applications?
  context: Reveals broader SQL injection campaign targeting multiple applications.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        dst_ip: '{destination.ip}'
      selection:
        http.uri|contains:
        - ''''
        - union
        - select
        - drop
        - insert
        - update
        - delete
        - exec
        - script
        - alert
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - dst_port
    - http.method
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Are there database process anomalies on the web server following this error?
  context: Identifies potential database compromise or data extraction attempts.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        Image|contains:
        - mysql
        - mysqldump
        - sqlcmd
        - powershell
        - cmd
        host.ip: '{destination.ip}'
    fields:
    - Image
    - CommandLine
    - User
    - ParentImage
    logsource:
      category: process_creation
- question: What files were created on the web server after this MySQL error occurred?
  context: Detects potential web shells or malicious files uploaded via SQL injection.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Are other web servers experiencing similar MySQL error patterns?
  context: Determines scope of SQL injection campaign across the organization.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: Did this source IP perform reconnaissance activities before the SQL injection attempt?
  context: Reveals attack preparation and methodology.
  range: -2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - admin
        - login
        - wp-
        - .php
        - .asp
        - config
        - backup
        - test
        - debug
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.method
    - http.uri
    - http.status_code
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What was the timing pattern of requests from this source IP?
  context: Identifies automated scanning tools versus manual exploitation attempts.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{related.ip}'
        dst_ip: '{related.ip}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: Are there related security alerts involving this source IP or destination?
  context: Correlates with other security events for comprehensive threat assessment.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
