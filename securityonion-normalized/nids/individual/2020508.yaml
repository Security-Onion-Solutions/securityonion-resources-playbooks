name: ET ATTACK_RESPONSE MySQL error in HTTP response, possible SQL injection point
id: 1242591
description: |
  Detects MySQL error messages in HTTP responses that may indicate SQL injection attempts.
  Can occur during legitimate database troubleshooting or application debugging.
type: detection
detection_id: 2020508
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the MySQL error message?
    context: Reveals the full database error and potential SQL injection payload details.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web application normally generate database errors in responses?
    context: Determines if MySQL errors are typical for this application or indicate new issues.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What HTTP request preceded this MySQL error response?
    context: Identifies the original request that may have triggered the SQL injection attempt.
    range: -5m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{source.ip}'\n    src_ip: '{destination.ip}'\n    dst_port: '{source.port}'\n    src_port: '{destination.port}'\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.request.body\n  \n"
  - question: What other HTTP requests from this source contained potential SQL injection patterns?
    context: Identifies systematic SQL injection testing or exploitation attempts.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{destination.ip}'\n    dst_ip: '{source.ip}'\n  sql_patterns:\n    http.uri|contains:\n      - \"union\"\n      - \"select\"\n      - \"insert\"\n      - \"update\"\n      - \"delete\"\n      - \"drop\"\n      - \"exec\"\n      - \"sp_\"\n      - \"xp_\"\n      - \"'\"\n      - \"--\"\n      - \"/*\"\n  condition: selection and sql_patterns\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  \n"
  - question: Are other web applications receiving similar requests from this source?
    context: Determines if this represents broader SQL injection scanning or targeting.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{destination.ip}'\n  filter:\n    dst_ip: '{source.ip}'\n  condition: selection and not filter\nfields:\n  - dst_ip\n  - dst_port\n  - http.method\n  - http.uri\n  - http.user_agent\n  \n"
  - question: What files were accessed by the web application process during this timeframe?
    context: Identifies potential data access resulting from successful SQL injection.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the web server establish any new external connections after the MySQL error?
    context: Assesses whether SQL injection led to additional compromise or data exfiltration.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there other MySQL error responses across different applications?
    context: Determines scope of potential SQL injection campaign targeting database applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of requests from this source over the past hour?
    context: Analyzes request frequency and timing to identify automated SQL injection tools.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did any processes execute database-related commands after the MySQL error?
    context: Identifies potential system command execution through SQL injection.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{source.ip}'
        db_commands:
          CommandLine|contains:
            - "mysql"
            - "mysqldump"
            - "sqlcmd"
            - "osql"
            - "bcp"
            - "psql"
        condition: selection and db_commands
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User
