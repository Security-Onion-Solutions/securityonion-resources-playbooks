name: ET ATTACK_RESPONSE MySQL error in HTTP response, possible SQL injection point
id: 1242594
description: |
  Detects MySQL error messages in HTTP responses that may indicate SQL injection vulnerability exploitation.
  May trigger on legitimate database error handling or debugging activities in development environments.
type: detection
detection_id: 2020511
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the MySQL error message?
    context: Reveals the full database error details and response context.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally generate MySQL error responses?
    context: Determines if database errors in HTTP responses are typical for this application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What HTTP requests preceded this MySQL error response?
    context: Identifies the specific request parameters that may have triggered the database error.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{source.ip}'
          src_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.request.body
        - src_ip
  - question: Are there patterns in the requests that suggest SQL injection attempts?
    context: Analyzes request patterns for common SQL injection indicators.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{source.ip}'
        sql_patterns:
          http.uri|contains:
            - "'"
            - "union"
            - "select"
            - "insert"
            - "drop"
            - "delete"
            - "exec"
            - "script"
        condition: selection and sql_patterns
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - src_ip
  - question: What other external connections occurred from this web server?
    context: Identifies potential data exfiltration or reverse shell connections following exploitation.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other web servers generating similar MySQL error responses?
    context: Determines if this represents a broader scanning or exploitation campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What files were created by the web server process after the MySQL error?
    context: Identifies potential web shells or malicious files uploaded through SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any database-related processes or commands executed on this host?
    context: Assesses whether SQL injection led to command execution or system compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{source.ip}'
        db_processes:
          Image|contains:
            - mysql
            - mysqld
            - sqlcmd
            - osql
        suspicious_commands:
          CommandLine|contains:
            - "xp_cmdshell"
            - "sp_configure"
            - "exec master"
            - "openrowset"
        condition: selection and (db_processes or suspicious_commands)
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: What is the pattern of database connection attempts from this source IP?
    context: Analyzes the frequency and timing of requests that may indicate automated exploitation.
    range: +/-6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: Are there related alerts indicating successful compromise of this web server?
    context: Correlates with other security events that may confirm exploitation success.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did any lateral movement occur from this web server to internal hosts?
    context: Identifies potential pivot attempts following successful SQL injection exploitation.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
