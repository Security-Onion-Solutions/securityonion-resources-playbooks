name: ET ATTACK_RESPONSE PostgreSQL error in HTTP response, possible SQL injection point
id: 1242596
description: |
  Detects PostgreSQL error messages in HTTP responses that may indicate SQL injection attempts.
  Can trigger on legitimate application errors or during security testing activities.
type: detection
detection_id: 2020513
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the PostgreSQL error message?
    context: Reveals the specific error details and potential injection point.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web application normally generate PostgreSQL errors?
    context: Determines if database errors are typical for this application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What HTTP requests preceded the PostgreSQL error response?
    context: Identifies the request patterns that may have triggered the database error.
    range: -5m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{source.ip}'\n    src_ip: '{destination.ip}'\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.request.body.length\n  - src_ip\n  \n"
  - question: What other database errors occurred from this web application?
    context: Reveals patterns of database interaction issues or potential enumeration.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_ip: '{destination.ip}'\n  keywords:\n    - \"Warning\"\n    - \"Error\"\n    - \"Exception\"\n    - \"SQL\"\n    - \"database\"\n  condition: selection\nfields:\n  - http.status_code\n  - http.uri\n  - http.method\n  - dst_port\n  \n"
  - question: Are other web applications generating similar database errors?
    context: Determines if this represents broader SQL injection scanning activity.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What other external connections occurred to this web server?
    context: Identifies additional reconnaissance or exploitation attempts.
    range: +/-1h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: connection\ndetection:\n  selection:\n    dst_ip: '{source.ip}'\n    dst_port: [80, 443, 8080, 8443]\n  filter:\n    src_ip: '{destination.ip}'\n  condition: selection and not filter\nfields:\n  - src_ip\n  - dst_port\n  - network.transport\n  - connection.state\n  \n"
  - question: Did the web server process attempt to access any database files after the error?
    context: Assesses whether database access patterns changed following the error.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Were any SQL-related commands executed on the database server?
    context: Identifies potential successful SQL injection or database compromise.
    range: +1h
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip: '{source.ip}'\n  sql_tools:\n    Image|endswith:\n      - \"\\\\psql.exe\"\n      - \"\\\\pg_dump.exe\"\n      - \"\\\\createdb.exe\"\n      - \"\\\\dropdb.exe\"\n  sql_commands:\n    CommandLine|contains:\n      - \"SELECT\"\n      - \"INSERT\"\n      - \"UPDATE\"\n      - \"DELETE\"\n      - \"DROP\"\n      - \"CREATE\"\n  condition: selection and (sql_tools or sql_commands)\nfields:\n  - Image\n  - CommandLine\n  - User\n  - ProcessGuid\n  \n"
  - question: Are other hosts connecting to the same web application showing similar errors?
    context: Determines scope of potential SQL injection campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What is the geographic distribution of sources generating these database errors?
    context: Reveals whether this represents targeted or opportunistic scanning.
    range: +/-6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{source.ip}'
        condition: selection
      fields:
        - src_ip
        - http.user_agent
        - http.uri
