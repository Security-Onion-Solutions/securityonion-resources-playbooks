name: ET ATTACK_RESPONSE Microsoft SQL error in HTTP response, possible SQL injection point
id: 1242643
description: |
  Detects Microsoft SQL Server error messages in HTTP 500 responses that may indicate SQL injection attempts.
  Could represent legitimate application errors or active exploitation of database vulnerabilities.
type: detection
detection_id: 2020522
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the SQL Server error message?
    context: Reveals the exact error details and potential database schema information leaked.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web application normally generate SQL Server errors?
    context: Determines if database errors are typical for this application or represent unusual activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What HTTP requests preceded this SQL Server error response?
    context: Identifies the specific request parameters that may have triggered the database error.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.request.body.content
  - question: Are there patterns in the HTTP requests that suggest SQL injection attempts?
    context: Identifies common SQL injection patterns in requests targeting this application.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
        sql_patterns:
          http.uri|contains:
            - "' OR "
            - "UNION SELECT"
            - "DROP TABLE"
            - "INSERT INTO"
            - "UPDATE SET"
            - "DELETE FROM"
            - "EXEC("
            - "xp_cmdshell"
        condition: selection and sql_patterns
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: What web application process is generating these database connections?
    context: Identifies the specific application component responsible for the database queries.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are other web applications on this server experiencing similar SQL errors?
    context: Determines if this represents targeted attacks against multiple database-driven applications.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.status_code: "500"
        sql_errors:
          http.response.body|contains:
            - "OLE DB Provider for SQL Server"
            - "Microsoft SQL Server"
            - "SQLException"
            - "SQL syntax error"
        condition: selection and sql_errors
      fields:
        - src_ip
        - dst_port
        - http.virtual_host
        - http.uri
  - question: What files were accessed by the web application process after the SQL error?
    context: Identifies potential file system access following database exploitation attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the web server establish any unusual external connections after the SQL error?
    context: Assesses whether SQL injection led to secondary payload delivery or data exfiltration.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts experiencing similar SQL injection attempts from the same source?
    context: Determines scope of potential automated SQL injection campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.status_code: "500"
        sql_errors:
          http.response.body|contains:
            - "OLE DB Provider"
            - "SQL Server"
            - "SQLException"
        condition: selection and sql_errors
      fields:
        - dst_ip
        - dst_port
        - http.virtual_host
        - http.uri
  - question: What is the pattern of requests from this source IP over the past day?
    context: Reveals broader attack methodology and targeting patterns.
    range: -24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were any database administration tools or commands executed on this server?
    context: Identifies potential privilege escalation or administrative access following SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - sqlcmd.exe
          - osql.exe
          - isql.exe
          - bcp.exe
          - sqlservr.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Are there related alerts indicating successful database compromise?
    context: Correlates with other security events that may indicate successful exploitation.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
