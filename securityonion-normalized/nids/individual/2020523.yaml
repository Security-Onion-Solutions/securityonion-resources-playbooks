name: ET ATTACK_RESPONSE Microsoft SQL error in HTTP response, possible SQL injection point
id: 1242605
description: |
  Detects Microsoft SQL Server error messages in HTTP responses, indicating potential SQL injection vulnerabilities.
  May trigger on legitimate application errors or debugging output during normal development activities.
type: detection
detection_id: 2020523
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP response containing the SQL error message?
  context: Reveals the exact error details and potential database schema information exposed.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this web application normally generate SQL error responses?
  context: Determines if SQL errors in HTTP responses are typical for this application.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What HTTP requests preceded this SQL error response?
  context: Identifies the specific requests that may have triggered the SQL injection vulnerability.
  range: -30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{source.ip}'
        src_ip: '{destination.ip}'
      timeframe:
        before_alert: true
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.request.body.content
    - src_ip
    logsource:
      category: network
      service: http
- question: What process is running the web application that generated this SQL error?
  context: Identifies the specific web server or application service experiencing SQL injection attempts.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Are there multiple SQL injection attempts against this application?
  context: Determines if this represents ongoing SQL injection scanning or exploitation.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection and sql_patterns
      selection:
        dst_ip: '{destination.ip}'
        dst_port: '{destination.port}'
      sql_patterns:
        http.uri|contains:
        - ''''
        - union
        - select
        - insert
        - drop
        - delete
        - --
        - /*
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - src_ip
    logsource:
      category: network
      service: http
- question: What other database-related error messages appeared in HTTP responses?
  context: Identifies additional database information disclosure from the same application.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection and database_errors
      database_errors:
        http.response.body|contains:
        - SQLException
        - ORA-
        - MySQL
        - PostgreSQL
        - database
        - syntax error
      selection:
        dst_ip: '{destination.ip}'
        dst_port: '{destination.port}'
    fields:
    - http.response.body
    - http.status_code
    - src_ip
    logsource:
      category: network
      service: http
- question: Are other web applications on this server experiencing similar SQL errors?
  context: Assesses whether multiple applications are being targeted for SQL injection.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What files were accessed by the web application process after the SQL error?
  context: Determines if successful SQL injection led to file system access.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .doc
        - .docx
        - .xls
        - .xlsx
        - .pdf
        - .rtf
        - .ppt
        - .pptx
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Did any database-related processes show unusual activity during this time?
  context: Identifies potential impact on database services from SQL injection attempts.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection and database_processes
      database_processes:
        Image|contains:
        - sqlservr.exe
        - mysqld.exe
        - postgres.exe
        - oracle.exe
      selection:
        host.ip: '{destination.ip}'
    fields:
    - Image
    - CommandLine
    - User
    - ParentImage
    logsource:
      category: process_creation
- question: What authentication attempts occurred against database services during this timeframe?
  context: Identifies potential credential attacks following SQL injection reconnaissance.
  range: +/-1h
  query: |-
    aggregation: false
    detection:
      condition: selection and database_ports
      database_ports:
        dst_port:
        - 1433
        - 3306
        - 5432
        - 1521
      selection:
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - dst_port
    - connection.state
    - network.transport
    logsource:
      category: network
      service: connection
- question: Are there signs of data exfiltration following the SQL error response?
  context: Determines if SQL injection progressed to data extraction attempts.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
