name: ET ATTACK_RESPONSE Firebird error in HTTP response, possible SQL injection point
id: 1242620
description: |
  Detects Firebird database error messages in HTTP responses that may indicate SQL injection attempts.
  Could indicate legitimate database errors during normal operations or active exploitation of SQL injection vulnerabilities.
type: detection
detection_id: 2020538
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the Firebird error message?
    context: Understanding the full response reveals the nature of the SQL error and potential injection point.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally serve HTTP traffic to external clients?
    context: Determines if HTTP responses to external networks are typical for this server.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What was the HTTP request that triggered the Firebird database error?
    context: Identifies the specific request parameters that may contain SQL injection attempts.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{source.ip}'
          src_ip: '{destination.ip}'
          dst_port: '{source.port}'
          src_port: '{destination.port}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.request.body.content
  - question: What database connections were established around the time of this error?
    context: Identifies backend database communication that may be related to the SQL error.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: [1433, 3306, 5432, 3050, 1521, 1433]
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - network.bytes_sent
        - network.bytes_received
  - question: Are there other SQL-related error responses from this server?
    context: Determines if multiple database errors indicate systematic SQL injection attempts.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.response.body.content|contains:
            - "SQL"
            - "database"
            - "syntax error"
            - "mysql"
            - "postgresql"
            - "oracle"
            - "firebird"
        condition: selection
      fields:
        - dst_ip
        - http.status_code
        - http.uri
        - http.user_agent
  - question: What process is handling the HTTP requests that generate database errors?
    context: Identifies the web application or service responsible for the database interactions.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are similar database error patterns occurring across other web servers?
    context: Assesses whether this represents a broader SQL injection campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What files were accessed by the web application process during this timeframe?
    context: Identifies configuration files, logs, or data files that may be relevant to the database error.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did the same external client attempt requests to other database-driven applications?
    context: Determines if the external client is systematically targeting database applications.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - ".php"
            - ".asp"
            - ".jsp"
            - "login"
            - "admin"
            - "search"
            - "id="
            - "user="
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Were any authentication attempts made before the database error occurred?
    context: Identifies if the SQL injection attempt was preceded by authentication bypass attempts.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{source.ip}'
          src_ip: '{destination.ip}'
          http.uri|contains:
            - "login"
            - "auth"
            - "signin"
            - "admin"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent
  - question: Are there related alerts involving the same source and destination?
    context: Identifies other security events that may be part of the same attack sequence.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
