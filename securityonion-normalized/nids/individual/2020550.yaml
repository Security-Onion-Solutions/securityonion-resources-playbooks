name: ET ATTACK_RESPONSE Ingres error in HTTP response, possible SQL injection point
id: 1242632
description: |
  Detects Ingres database warning messages in HTTP responses that may indicate SQL injection vulnerability exploitation.
  May trigger on legitimate database error conditions or diagnostic tools revealing database information.
type: detection
detection_id: 2020550
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the Ingres warning message?
    context: Reveals the full database error response and potential injection context.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web application normally generate database error responses?
    context: Determines if Ingres database errors are typical for this application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What HTTP request preceded this Ingres error response?
    context: Identifies the specific request that may have triggered the SQL injection attempt.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{source.ip}'
          src_ip: '{destination.ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.request.body.content
  - question: Are there additional SQL injection attempts from the same source?
    context: Identifies broader SQL injection attack patterns targeting the application.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
        sql_patterns:
          http.uri|contains:
            - "'"
            - "union"
            - "select"
            - "insert"
            - "delete"
            - "drop"
            - "exec"
            - "script"
        condition: selection and sql_patterns
      fields:
        - http.method
        - http.uri
        - http.user_agent
  - question: What web application process is generating these database responses?
    context: Identifies the specific application component interacting with the Ingres database.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are other hosts receiving similar Ingres database errors from this server?
    context: Determines the scope of potential database information disclosure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did any lateral movement occur from the web server after this error response?
    context: Assesses whether successful SQL injection led to further system compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What files were accessed by the web application process during this timeframe?
    context: Identifies potential file system access through SQL injection exploitation.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Are other web applications showing similar database error patterns?
    context: Determines if this represents a broader SQL injection campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What user-agent patterns are associated with requests generating these errors?
    context: Identifies automated tools or specific attack frameworks targeting SQL injection.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - http.uri
  - question: Did any persistence mechanisms get established on the web server?
    context: Assesses whether SQL injection led to system-level compromise and persistence.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: What is the pattern of database connection attempts from this web application?
    context: Analyzes database connectivity patterns that may indicate injection success.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port:
            - 1433
            - 3306
            - 5432
            - 1521
            - 1526
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - network.bytes_toserver
        - network.bytes_toclient
