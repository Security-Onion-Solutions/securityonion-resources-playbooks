name: ET ATTACK_RESPONSE Ingres error in HTTP response, possible SQL injection point
id: 1242633
description: |
  Detects Ingres database error messages in HTTP responses that may indicate SQL injection attempts.
  Could trigger on legitimate database errors or application debugging scenarios.
type: detection
detection_id: 2020551
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the Ingres error message?
    context: Reveals the full database error that indicates potential SQL injection vulnerability.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web application normally generate database errors?
    context: Determines if Ingres error responses are typical for this application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What HTTP request preceded this Ingres error response?
    context: Identifies the input that caused the database error and potential injection payload.
    range: -5m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    dst_ip: '{source.ip}'\n    src_ip: '{destination.ip}'\n    dst_port: '{source.port}'\n    src_port: '{destination.port}'\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.request.body.content\n  \n"
  - question: What other database-related errors occurred from this web application?
    context: Reveals patterns of database errors that may indicate systematic SQL injection testing.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.response.body.content|contains:\n      - \"SQL\"\n      - \"database\"\n      - \"error\"\n      - \"exception\"\n      - \"SQLSTATE\"\n      - \"ORA-\"\n      - \"MySQL\"\n      - \"PostgreSQL\"\n  condition: selection\nfields:\n  - http.status_code\n  - http.uri\n  - http.response.body.content\n  \n"
  - question: Are other web servers experiencing similar database error responses?
    context: Determines if this represents a broader SQL injection campaign across multiple targets.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of requests from the client that triggered this error?
    context: Analyzes the sequence of requests to identify SQL injection methodology.
    range: -1h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{destination.ip}'\n    dst_ip: '{source.ip}'\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: Did the client attempt to access sensitive database-related URIs after the error?
    context: Identifies follow-up exploitation attempts targeting database functionality.
    range: +2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{destination.ip}'\n    dst_ip: '{source.ip}'\n    http.uri|contains:\n      - \"admin\"\n      - \"database\"\n      - \"db\"\n      - \"sql\"\n      - \"backup\"\n      - \"dump\"\n      - \"export\"\n  condition: selection\nfields:\n  - http.method\n  - http.uri\n  - http.status_code\n  \n"
  - question: What web application process is handling these database connections?
    context: Identifies the specific application component vulnerable to SQL injection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Were any files accessed or created by the web application after the database error?
    context: Assesses potential data access or system compromise following SQL injection.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are there alerts for SQL injection attempts from the same source IP?
    context: Correlates with other security events indicating coordinated SQL injection activity.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
