name: ET INFO FREAK Weak Export Suite From Client (CVE-2015-0204)
id: 1257463
description: |
  Detects TLS handshakes containing weak export cipher suites vulnerable to FREAK attacks.
  May indicate legitimate clients with outdated TLS libraries or active downgrade attacks.
type: detection
detection_id: 2020676
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete TLS handshake containing the weak export cipher?
    context: Reveals the full handshake details including supported cipher suites.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - ssl.server_name
        - ssl.version
        - ssl.cipher
        - hash.ja3
  - question: Does this client normally establish TLS connections to these services?
    context: Determines if TLS connections from this client are typical for the environment.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          src_ip: '{source.ip}'
          ssl.server_name: '{ssl.server_name}'
        condition: selection
      fields:
        - src_ip
        - ssl.server_name
  - question: What application initiated the TLS handshake with weak export ciphers?
    context: Identifies the specific client software that may have outdated TLS libraries.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other TLS connections occurred from this host during this timeframe?
    context: Assesses the broader pattern of TLS usage and cipher suite preferences.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts also using weak export cipher suites?
    context: Determines if this indicates a systematic TLS library vulnerability.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What is the timing pattern of weak cipher suite usage from this client?
    context: Identifies whether this represents persistent client behavior or a targeted attack.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did the TLS connection successfully establish despite the weak cipher advertisement?
    context: Determines if the server accepted the weak cipher or if negotiation failed.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
          ssl.established: true
        condition: selection
      fields:
        - ssl.cipher
        - ssl.version
        - ssl.established
  - question: Are there related alerts involving the same client or server?
    context: Identifies other security events that may be related to TLS vulnerabilities.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What certificate was presented by the server during this weak cipher negotiation?
    context: Identifies the target service and certificate details for vulnerability assessment.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
        condition: selection
      fields:
        - ssl.server_name
        - ssl.certificate.serial
        - ssl.certificate.issuer
        - ssl.cipher
