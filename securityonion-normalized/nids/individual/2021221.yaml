name: ET MALWARE ABUSE.CH SSL Blacklist Malicious SSL certificate detected (Geodo MITM)
id: 1254588
description: |
  Detects SSL connections using certificates with CN=polasde.us, identified as malicious by ABUSE.CH SSL Blacklist.
  This certificate pattern is associated with Geodo malware MITM activities. May rarely trigger on certificate reuse or typosquatting.
type: detection
detection_id: 2021221
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What are the complete SSL certificate details for the polasde.us connection?
    context: Reveals full certificate information including issuer, validity period, and other identifying characteristics.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - ssl.server_name
        - ssl.version
        - ssl.cipher
        - hash.ja3
  - question: Does this host normally establish SSL connections to unfamiliar domains?
    context: Determines if SSL connections to unknown domains represent typical behavior for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          src_ip: '{source.ip}'
          ssl.server_name|contains: polasde
        condition: selection
      fields:
        - src_ip
        - ssl.server_name
  - question: What process initiated the SSL connection to polasde.us?
    context: Identifies the application or process responsible for establishing the connection to the malicious certificate.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this SSL connection?
    context: Shows how the host resolved the domain name before establishing the SSL connection.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other external connections occurred from this host?
    context: Identifies additional C2 channels or malicious communications beyond the SSL connection.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same malicious SSL infrastructure?
    context: Determines scope of potential Geodo malware infections across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What is the communication pattern of connections to this SSL server?
    context: Analyzes timing, frequency, and data transfer patterns indicative of C2 communication.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What executable files were created by the process making this connection?
    context: Identifies malware payloads or components that may have been downloaded via the SSL channel.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: Did any lateral movement occur from this host?
    context: Assesses whether the Geodo infection led to propagation across internal systems.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What persistence mechanisms were established after this connection?
    context: Identifies registry modifications used by Geodo malware to maintain persistence.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: What IP addresses did polasde.us resolve to during this investigation period?
    context: Maps the infrastructure behind the malicious domain for threat intelligence purposes.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name|contains: "polasde.us"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - src_ip
  - question: Are there other SSL certificates with similar suspicious characteristics?
    context: Identifies related malicious certificates that may be part of the same Geodo campaign infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          ssl.server_name|contains:
            - "polasde"
            - ".us"
        geodo_patterns:
          ssl.server_name|re: ".*[a-z]{6,8}\.us$"
        condition: selection or geodo_patterns
      fields:
        - ssl.server_name
        - ssl.issuer
        - src_ip
        - dst_ip
  - question: What other domains resolved to the same IP infrastructure as polasde.us?
    context: Reveals additional domains in the Geodo malware infrastructure for comprehensive blocking.
    range: +/-7d
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        polasde_resolution:
          dns.query.name|contains: "polasde.us"
        related_domains:
          dns.resolved_ip: '{dns.resolved_ip}'
        condition: related_domains and not polasde_resolution
      fields:
        - dns.query.name
        - dns.resolved_ip
        - src_ip
