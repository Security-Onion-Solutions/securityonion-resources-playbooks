name: ET WEB_SPECIFIC_APPS Possible Joomla SQLi Attempt (CVE-2015-7297 CVE-2015-7857 CVE-2015-7858)
id: 1220325
description: |
  Detects HTTP GET requests to Joomla applications containing SQL injection patterns targeting list[select] parameters.
  May trigger on legitimate database administration tools or security testing activities.
type: detection
detection_id: 2021992
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the SQL injection pattern?
    context: Reveals the exact payload and URI structure used in the Joomla exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access this Joomla application?
    context: Determines if this represents unusual access to the targeted web application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browser or tool generated this request?
    context: Identifies whether this originated from automated tools or manual browser activity.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "list[select]="
        condition: selection
      fields:
        - http.user_agent
        - http.method
        - src_ip
        - dst_ip
  - question: Did the source IP attempt other SQL injection patterns against this server?
    context: Assesses whether this is part of a broader SQL injection campaign.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        sql_patterns:
          http.uri|contains:
            - "UNION SELECT"
            - "SELECT FROM"
            - "DELETE FROM"
            - "INSERT INTO"
            - "SHOW TABLES"
            - "UPDATE SET"
        condition: selection and sql_patterns
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: What other Joomla-specific URLs did this source access?
    context: Identifies reconnaissance or additional exploitation attempts against Joomla components.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        joomla_patterns:
          http.uri|contains:
            - "option="
            - "view="
            - "administrator/"
            - "components/"
            - "modules/"
        condition: selection and joomla_patterns
      fields:
        - http.uri
        - http.status_code
        - dst_ip
  - question: What HTTP response codes were returned to these requests?
    context: Determines if the SQL injection attempts were successful or blocked.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains: "list[select]="
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
        - http.uri
  - question: Are other hosts being targeted with similar Joomla SQL injection attempts?
    context: Determines scope of the attack campaign across the organization.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What other external connections occurred from the attacking IP?
    context: Identifies additional malicious activity or infrastructure used by the attacker.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{source.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: Did any processes on the web server execute suspicious commands after these requests?
    context: Assesses whether the SQL injection led to command execution or further compromise.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        suspicious_commands:
          CommandLine|contains:
            - "mysql"
            - "mysqldump"
            - "wget"
            - "curl"
            - "nc "
            - "netcat"
            - "/bin/sh"
            - "cmd.exe"
        condition: selection and suspicious_commands
      fields:
        - Image
        - CommandLine
        - User
        - ParentImage
  - question: Were any files created or modified on the web server after the SQL injection attempt?
    context: Identifies potential web shells or malicious files uploaded through successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did the web server establish any new outbound connections after receiving these requests?
    context: Detects potential data exfiltration or command and control communications.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        private_filter:
          dst_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
        condition: selection and not private_filter
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state