name: ET WEB_SERVER ImageMagick CVE-2016-3718 SSRF Inbound (mvg + fill + url)
id: 1206249
description: |
  Detects HTTP requests containing ImageMagick MVG commands with fill and URL parameters that may exploit CVE-2016-3718 SSRF vulnerability.
  May trigger on legitimate ImageMagick usage or image processing applications using MVG format with external resources.
type: detection
detection_id: 2022791
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request body containing the ImageMagick MVG commands?
  context: Reveals the exact payload structure and parameters used in the potential CVE-2016-3718 exploitation attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally process image uploads or ImageMagick operations?
  context: Determines if HTTP requests to this service are typical for image processing workflows.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What process handled this HTTP request with ImageMagick commands?
  context: Identifies the web application or service that received the potentially malicious MVG content.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Did the host make external HTTP requests after receiving the MVG payload?
  context: Assesses whether the SSRF vulnerability was successfully exploited to make outbound requests.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What external URLs were referenced in the ImageMagick fill commands?
  context: Identifies the target URLs that ImageMagick may have been instructed to fetch via SSRF.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.request.body|contains:
        - fill
        - url(
        src_ip: '{source.ip}'
    fields:
    - http.request.body
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Were any image or temporary files created after the MVG request was processed?
  context: Identifies files that may have been created through ImageMagick processing or SSRF exploitation.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.name|endswith:
        - .jpg
        - .png
        - .gif
        - .bmp
        - .svg
        - .mvg
        - .tmp
        host.ip: '{source.ip}'
    fields:
    - file.path
    - file.name
    - Image
    - ProcessGuid
    logsource:
      category: file_event
- question: Are other hosts receiving similar ImageMagick exploitation attempts?
  context: Determines if this is part of a broader campaign targeting ImageMagick vulnerabilities.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: Did any persistence mechanisms get established after the ImageMagick request?
  context: Checks for registry modifications that could indicate successful exploitation and persistence.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: registry_event
    detection:
      selection:
        host.ip: '{related.ip}'
        TargetObject|contains:
        - Run
        - RunOnce
        - Services
        - Startup
        - Winlogon
        - Explorer
        - Shell
        - AppInit_DLLs
        - Image File Execution Options
        - Class
        - ContextMenuHandlers
        - ShellExecuteHooks
      condition: selection
    fields:
      - User
      - Image
      - ProcessGuid
      - TargetObject
      - Details
- question: What DNS queries occurred after the MVG payload was received?
  context: Reveals external domains that may have been resolved as part of SSRF exploitation.
  range: -5m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip: '{source.ip}'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: Are there other alerts involving the same source IP address?
  context: Identifies related security events that may indicate broader attack activity.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What was the pattern of HTTP requests from the source IP before and after this alert?
  context: Analyzes the broader context of HTTP activity to understand attack methodology.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    - dst_ip
    logsource:
      category: network
      service: http