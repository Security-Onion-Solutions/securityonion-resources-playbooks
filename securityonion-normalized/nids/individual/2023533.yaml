name: ET MALWARE CryptoLuck / YafunnLocker Ransomware CnC Checkin
id: 1233793
description: |
  Detects HTTP POST requests with specific URI patterns and user-agent strings associated with CryptoLuck/YafunnLocker ransomware command and control communications.
  May trigger on legitimate applications using similar HTTP patterns or security testing tools.
type: detection
detection_id: 2023533
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP POST request that triggered this ransomware detection?
    context: Reveals the full C2 communication pattern including URI parameters and payload structure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally make HTTP requests to external PHP endpoints?
    context: Determines if this C2 communication represents abnormal behavior for this system.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection with the ransomware user-agent pattern?
    context: Identifies the application or malware executable responsible for the C2 communication.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host around the same time?
    context: Identifies additional C2 channels or data exfiltration activities.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same ransomware C2 infrastructure?
    context: Determines the scope of potential ransomware infections across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created by the process making these C2 connections?
    context: Identifies ransomware payloads or additional malware components deployed on the system.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: What is the communication pattern and timing of connections to this C2 server?
    context: Analyzes the frequency and behavior of ransomware check-ins for attribution and blocking.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Were any persistence mechanisms established on this host?
    context: Identifies registry modifications that ensure ransomware survival across reboots.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: Did lateral movement occur from this potentially infected host?
    context: Assesses whether the ransomware spread to other systems in the network.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there other alerts indicating ransomware activity from this host?
    context: Correlates with file encryption alerts, process creation events, or other malware signatures.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          src_ip: '{source.ip}'
        ransomware_indicators:
          rule.name|contains:
            - "ransomware"
            - "encrypt"
            - "crypto"
            - "locker"
            - "ransom"
        condition: selection and ransomware_indicators
      fields:
        - rule.name
        - rule.category
        - dst_ip
        - alert.severity_label
  - question: Did this host attempt connections to other hosts with the same suspicious user-agent?
    context: Identifies potential lateral movement attempts using the same ransomware infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.user_agent|contains: "Mozilla/5.0 (Windows NT 6.1)"
        internal_targets:
          dst_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
        condition: selection and internal_targets
      fields:
        - dst_ip
        - dst_port
        - http.uri
        - http.method
  - question: Are there other hosts making similar POST requests with form-data to PHP endpoints?
    context: Identifies additional systems potentially infected with the same ransomware family.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.method: "POST"
          http.uri|contains: ".php"
        form_data_pattern:
          http.request.body|contains: "form-data"
        external_dest:
          dst_ip: '{network.public_ip}'
        exclude_source:
          src_ip: '{source.ip}'
        condition: selection and form_data_pattern and external_dest and not exclude_source
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent