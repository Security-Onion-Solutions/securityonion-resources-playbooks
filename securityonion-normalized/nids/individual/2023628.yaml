name: ET EXPLOIT Netgear R7000 Command Injection Exploit
id: 1211628
description: |
  Detects HTTP requests attempting command injection against Netgear R7000 routers via CGI parameters.
  May trigger on legitimate network administration tools or security scanning activities.
type: detection
detection_id: 2023628
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the command injection attempt?
    context: Reveals the full exploit payload and injection technique used against the Netgear device.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Is this Netgear device normally accessed via HTTP from this source?
    context: Determines if this represents unauthorized access attempts to network infrastructure.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other CGI endpoints were accessed on this Netgear router?
    context: Identifies additional exploitation attempts or reconnaissance activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "/cgi-bin/"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: What commands were attempted through the IFS injection technique?
    context: Analyzes the specific system commands being executed on the router.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "$IFS"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.request.body
  - question: Are other Netgear devices receiving similar command injection attempts?
    context: Determines scope of router exploitation campaign across network infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains:
            - "/cgi-bin/"
            - "$IFS"
        filter:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.uri
        - http.user_agent
  - question: What is the pattern of requests from this source IP to network devices?
    context: Identifies systematic targeting of network infrastructure or scanning behavior.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains: "/cgi-bin/"
        condition: selection
      fields:
        - dst_ip
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did the router establish any outbound connections after the injection attempt?
    context: Assesses whether command injection resulted in backdoor installation or data exfiltration.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        filter:
          dst_ip|cidr:
            - "10.0.0.0/8"
            - "172.16.0.0/12"
            - "192.168.0.0/16"
        condition: selection and not filter
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: Are there related alerts indicating successful compromise of this router?
    context: Correlates with other detection rules that may indicate successful exploitation.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What user-agent patterns are associated with these router exploitation attempts?
    context: Identifies tools and frameworks used for router exploitation campaigns.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains:
            - "/cgi-bin/"
            - "$IFS"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.user_agent
        - http.uri
  - question: Is this source IP attempting lateral movement to other network devices?
    context: Determines if successful router compromise is being used for network traversal.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport