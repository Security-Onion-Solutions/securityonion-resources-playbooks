name: ET WEB_CLIENT Fake AV Phone Scam Landing Jan 24
id: 1245856
description: |
  Detects HTTP responses containing fake antivirus phone scam content with "Windows Official Support" titles.
  May trigger on legitimate security software or actual Microsoft support pages with similar warning language.
type: detection
detection_id: 2023757
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the fake support warning?
    context: Reveals the full scam page content and structure delivered to the client.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access technical support or security-related websites?
    context: Determines if accessing warning pages represents typical user behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web browsing activity led to this fake support page?
    context: Identifies the referring sites or search terms that directed users to the scam.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What browser process received this fake antivirus warning page?
    context: Identifies the specific browser and user account that accessed the scam content.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Did the user contact any phone numbers after viewing this warning page?
    context: Assesses whether the scam successfully prompted contact attempts.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          host.ip: '{related.ip}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.transport
        - Image
        - ProcessGuid
        - User
        - CommandLine
  - question: Were any files downloaded after accessing the fake support warning?
    context: Identifies potential malware downloads disguised as security tools.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other users accessing the same fake support infrastructure?
    context: Determines the scope of users exposed to this phone scam campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other domains are hosting similar fake antivirus warnings?
    context: Reveals the broader scam infrastructure targeting users with fake support pages.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.status_code: 200
          http.content_type|contains: "text/html"
        scam_content:
          - http.response.body|contains: "Windows Official Support"
          - http.response.body|contains: "Critical Warning"
          - http.response.body|contains: "call immediately"
          - http.response.body|contains: "support number"
        condition: selection and any of scam_content
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
  - question: Did users attempt to download any "security tools" from related domains?
    context: Identifies potential malware distribution through fake security software.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.method: "GET"
        download_indicators:
          - http.uri|contains: "download"
          - http.uri|contains: "security"
          - http.uri|contains: "antivirus"
          - http.uri|contains: "cleaner"
          - http.uri|contains: "scanner"
        condition: selection and any of download_indicators
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.user_agent
  - question: Are there related social engineering alerts affecting other users?
    context: Determines if this is part of a broader social engineering campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
