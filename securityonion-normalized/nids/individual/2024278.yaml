name: ET WEB_SPECIFIC_APPS Wordpress Host Header Injection (CVE-2016-10033) M2
id: 1221819
description: |
  Detects WordPress password reset requests with malicious Host header injection patterns.
  May trigger on legitimate password reset attempts with unusual host configurations or security testing.
type: detection
detection_id: 2024278
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the malicious Host header?
  context: Reveals the specific injection payload and request structure for CVE-2016-10033.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally receive WordPress password reset requests?
  context: Determines if password reset activity is typical for this WordPress installation.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What other WordPress administrative actions occurred from this source IP?
  context: Identifies additional WordPress interaction patterns that may indicate reconnaissance.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - wp-admin
        - wp-login
        - wp-content
        - action=
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.user_agent
    - http.status_code
    logsource:
      category: network
      service: http
- question: Were there DNS queries for email-related domains before this request?
  context: Host header injection often targets email delivery, so DNS lookups may reveal intended targets.
  range: -5m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip: '{source.ip}'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: What other external connections occurred from this WordPress server?
  context: Identifies potential data exfiltration or additional compromise indicators.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other WordPress installations receiving similar Host header injection attempts?
  context: Determines if this is part of a broader campaign targeting WordPress sites.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What WordPress-related files were accessed after this injection attempt?
  context: Identifies file access patterns that may indicate successful exploitation.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.path|contains:
        - wp-config
        - wp-content
        - wp-includes
        - .php
        host.ip: '{destination.ip}'
    fields:
    - file.path
    - file.name
    - Image
    logsource:
      category: file_event
- question: Did any processes execute PHP scripts after the malicious request?
  context: PHP execution may indicate successful code injection through the Host header vulnerability.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection or selection2
      selection:
        Image|endswith: php.exe
        host.ip: '{destination.ip}'
      selection2:
        CommandLine|contains: .php
        host.ip: '{destination.ip}'
    fields:
    - Image
    - CommandLine
    - ParentImage
    logsource:
      category: process_creation
- question: What email-related network activity occurred after the Host header injection?
  context: CVE-2016-10033 exploits WordPress email functionality, so SMTP connections may indicate impact.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_port:
        - 25
        - 465
        - 587
        - 993
        - 995
        src_ip: '{destination.ip}'
    fields:
    - dst_ip
    - dst_port
    - network.transport
    logsource:
      category: network
      service: connection
- question: Were there other HTTP requests with suspicious Host header patterns from this IP?
  context: Reveals broader Host header injection testing or exploitation patterns.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.host|re: .*[()'"{}].*
        src_ip: '{source.ip}'
    fields:
    - http.host
    - http.uri
    - http.method
    - dst_ip
    logsource:
      category: network
      service: http
- question: Are there related alerts involving the same source IP across the organization?
  context: Identifies coordinated attacks or reconnaissance activity from the same source.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip