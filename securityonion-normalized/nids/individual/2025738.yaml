name: ET WEB_SPECIFIC_APPS WordPress Plugin iThemes Security SQL Injection
id: 1221003
description: |
  Detects SQL injection attempts targeting WordPress iThemes Security plugin through orderby parameter.
  May trigger on legitimate admin queries with complex sorting parameters or security testing tools.
type: detection
detection_id: 2025738
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the SQL injection attempt?
  context: Reveals the specific orderby parameter and injection payload targeting iThemes Security.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access WordPress admin interfaces?
  context: Determines if admin access to wp-admin represents typical usage patterns.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What web server process handled this WordPress admin request?
  context: Identifies the web application processing the potentially malicious orderby parameter.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other external connections occurred from this WordPress server?
  context: Identifies potential data exfiltration or additional attack infrastructure communication.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other WordPress sites receiving similar SQL injection attempts?
  context: Determines if this is part of a broader campaign targeting iThemes Security plugin.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What files were modified on the WordPress server after this request?
  context: Identifies potential web shells, configuration changes, or database dumps.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .py
        - .pl
        - .sh
        - .php
        - .asp
        - .aspx
        - .js
        - .vbs
        - .ps1
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Were there successful HTTP responses to other admin-ajax or admin.php requests?
  context: Assesses whether the SQL injection attempts achieved successful execution.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.status_code:
        - 200
        - 302
        http.uri|contains:
        - /wp-admin/admin.php
        - /wp-admin/admin-ajax.php
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.status_code
    - http.method
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Did this source IP attempt other WordPress vulnerability exploits?
  context: Reveals broader attack patterns against WordPress installations.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and payload_indicators
      payload_indicators:
        http.uri|contains:
        - union+select
        - order+by
        - ../
        - eval(
        - base64_decode
      selection:
        http.uri|contains:
        - /wp-content/
        - /wp-includes/
        - /wp-admin/
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.method
    - http.user_agent
    - dst_ip
    logsource:
      category: network
      service: http
- question: What is the pattern of requests to this WordPress installation?
  context: Analyzes whether this represents automated scanning or targeted exploitation.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{related.ip}'
        dst_ip: '{related.ip}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: Did any lateral movement occur from this web server?
  context: Determines if WordPress compromise led to internal network access.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport