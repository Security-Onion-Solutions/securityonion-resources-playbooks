name: ET EXPLOIT php script base64 encoded Remote Code Execution 2
id: 1205039
description: |
  Detects base64 encoded content in HTTP traffic that may indicate PHP remote code execution attempts.
  May trigger on legitimate applications using base64 encoding or file upload functionality.
type: detection
detection_id: 2025808
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the base64 encoded payload?
    context: Reveals the full request structure and base64 content matching the exploitation pattern.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive HTTP traffic with base64 encoded content?
    context: Determines if base64 encoding in HTTP requests is typical for this web server.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process handled the request with base64 content?
    context: Identifies the specific web service that received the potentially malicious payload.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this web server after the request?
    context: Identifies potential command and control channels established through code execution.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What PHP or script files were created after the base64 request was received?
    context: Identifies webshells or backdoors that may have been uploaded through the exploit.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other web servers receiving similar requests with the same base64 pattern?
    context: Determines if this is part of a coordinated attack against multiple web applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the decoded content of the base64 string "8qPD9waHAg"?
    context: Understanding the decoded payload reveals the specific code execution attempt.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    community_id: '{network.community_id}'\n    http.request.body|contains: \"8qPD9waHAg\"\n  condition: selection\nfields:\n  - http.request.body\n  - http.uri\n  - http.method\n  - http.user_agent\n  \n"
  - question: Did any processes execute suspicious commands after the web request?
    context: Identifies command execution that may result from successful PHP code injection.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip: '{destination.ip}'\n    CommandLine|contains:\n      - \"php\"\n      - \"eval\"\n      - \"system\"\n      - \"exec\"\n      - \"shell_exec\"\n      - \"passthru\"\n  condition: selection\nfields:\n  - CommandLine\n  - Image\n  - User\n  - ParentImage\n  \n"
  - question: Were any files modified in web directories after this request?
    context: Identifies file system changes that may indicate successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.path|contains:
            - "/var/www/"
            - "/htdocs/"
            - "/wwwroot/"
            - ".php"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid