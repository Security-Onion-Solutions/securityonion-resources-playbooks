name: ET EXPLOIT Possible Netgear DGN2200 RCE (CVE-2017-6077)
id: 1204372
description: |
  Detects POST requests to /ping.cgi containing command injection patterns targeting Netgear DGN2200 routers.
  May trigger on legitimate network diagnostic tools or authorized penetration testing activities.
type: detection
detection_id: 2027093
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete POST request to /ping.cgi including all parameters?
    context: Reveals the exact command injection payload and exploitation technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive POST requests to administrative interfaces?
    context: Determines if administrative access to network devices is typical for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other POST requests to CGI endpoints occurred from the same source?
    context: Identifies additional exploitation attempts against web-based device interfaces.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.method: \"POST\"\n    http.uri|contains: \".cgi\"\n  condition: selection\nfields:\n  - src_ip\n  - dst_ip\n  - http.uri\n  - http.request.body.length\n  - http.status_code\n  \n"
  - question: What other external connections occurred from this host after the POST request?
    context: Identifies potential callback connections if the command injection was successful.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts on the network receiving similar POST requests to CGI endpoints?
    context: Determines scope of network device exploitation attempts.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What responses were returned by the target host to these POST requests?
    context: Assesses whether the exploitation attempts were successful based on HTTP response codes.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    community_id: '{network.community_id}'\n  condition: selection\nfields:\n  - http.status_code\n  - http.response.body.length\n  - src_ip\n  - dst_ip\n  \n"
  - question: Did any processes execute shell commands or network utilities after this request?
    context: Identifies potential command execution resulting from successful exploitation.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  selection:\n    host.ip: '{destination.ip}'\n    Image|contains:\n      - \"ping\"\n      - \"sh\"\n      - \"bash\"\n      - \"cmd\"\n      - \"wget\"\n      - \"curl\"\n      - \"nc\"\n      - \"netcat\"\n  condition: selection\nfields:\n  - Image\n  - CommandLine\n  - User\n  - ParentImage\n  \n"
  - question: Are there other alerts related to CVE-2017-6077 or Netgear device exploitation?
    context: Correlates with other indicators of IoT device compromise campaigns.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the pattern of requests from this source IP over time?
    context: Determines if this is part of automated scanning or targeted exploitation.
    range: +/-24h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.method: \"POST\"\n  condition: selection\nfields:\n  - dst_ip\n  - http.uri\n  - http.user_agent\n  - http.status_code\n  \n"
  - question: Did lateral movement occur from the targeted host to other network devices?
    context: Assesses whether successful compromise led to further network penetration.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport