name: ET SCAN Tomato Router Default Credentials (root:admin)
id: 1200271
description: |
  Detects HTTP authentication attempts using default credentials (root:admin) on Tomato router admin interfaces.
  May indicate legitimate administrator access or unauthorized credential brute-forcing against network equipment.
type: detection
detection_id: 2029318
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request attempting authentication to the Tomato router?
    context: Reveals the full authentication attempt including headers and target URI.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Is this router normally accessed from this source IP address?
    context: Determines if this represents legitimate administrative access or external scanning.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other authentication attempts occurred against this router?
    context: Identifies patterns of credential brute-forcing or scanning activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "admin"
          http.request_header|contains: "authorization"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.status_code
  - question: What other network equipment received similar default credential attempts?
    context: Assesses whether this is part of broader IoT device scanning.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.request_header|contains: "Basic cm9vdDphZG1pbg=="
        filter:
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - src_ip
        - http.uri
        - http.virtual_host
  - question: Did the authentication attempt succeed based on HTTP response codes?
    context: Determines if default credentials provided unauthorized access to the router.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
          http.status_code:
            - 200
            - 302
            - 301
        condition: selection
      fields:
        - http.status_code
        - http.uri
        - http.method
  - question: What other external connections occurred from this source IP?
    context: Identifies additional scanning or exploitation activity from the same source.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same source IP infrastructure?
    context: Determines scope of potential botnet or scanning campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What administrative URIs were accessed after the authentication attempt?
    context: Reveals what router functions may have been accessed if authentication succeeded.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - "admin"
            - "config"
            - "setup"
            - "management"
        condition: selection
      fields:
        - http.uri
        - http.method
        - http.status_code
  - question: Did this source IP attempt authentication against other common router interfaces?
    context: Identifies systematic scanning of network infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "login"
            - "admin"
            - "cgi-bin"
            - "management"
        filter:
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - http.uri
        - http.virtual_host
        - http.user_agent
  - question: Are there related alerts involving this source IP across the organization?
    context: Correlates with other security events from the same threat source.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip