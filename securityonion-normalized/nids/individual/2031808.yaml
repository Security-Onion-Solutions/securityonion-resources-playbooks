name: ET EXPLOIT ARG-W4 ASDL Router DNS Changer Exploit Attempt M2
id: 1213228
description: |
  Detects attempts to exploit ASDL routers by modifying DNS settings through form2wan.cgi.
  May indicate DNS hijacking attacks targeting home routers or legitimate router configuration.
type: detection
detection_id: 2031808
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request containing the DNS changer exploit attempt?
  context: Reveals the exact parameters and DNS server values being set in the router configuration.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access router configuration pages?
  context: Determines if router management activity is typical for this user or system.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What DNS queries preceded this router configuration attempt?
  context: Shows if the user was looking up router IPs or domains before attempting configuration.
  range: -5m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip: '{source.ip}'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: What process initiated the connection to the router configuration interface?
  context: Identifies the browser or application used to access the router management page.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other network devices received similar DNS configuration requests?
  context: Identifies if this is part of a broader DNS hijacking campaign targeting multiple routers.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What DNS servers were specified in the router configuration attempt?
  context: Reveals the malicious DNS servers that would be configured on the compromised router.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.request.body|contains: wan_dns
        http.uri|contains: /form2wan.cgi
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.request.body
    - http.method
    logsource:
      category: network
      service: http
- question: Did the host query the newly configured DNS servers after the router modification?
  context: Determines if the DNS hijacking attempt was successful and the malicious DNS servers are being used.
  range: +2h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        dst_ip|cidr:
        - 8.8.8.8/32
        - 1.1.1.1/32
        - 208.67.222.222/32
        - 208.67.220.220/32
      selection:
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - dns.query.name
    - dns.resolved_ip
    logsource:
      category: network
      service: dns
- question: Are there other attempts to access router configuration pages from this host?
  context: Shows if this is part of systematic router scanning or configuration attempts.
  range: +/-4h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        http.uri|contains:
        - .cgi
        - admin
        - config
        - setup
        - router
        - wan
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.uri
    - http.method
    logsource:
      category: network
      service: http
- question: What other hosts are attempting to access router configuration interfaces?
  context: Identifies if multiple systems are involved in router exploitation attempts.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        http.uri|contains: /form2wan.cgi
    fields:
    - src_ip
    - dst_ip
    - http.uri
    logsource:
      category: network
      service: http
- question: Did any lateral movement occur from this host after the router configuration attempt?
  context: Determines if the host was used as a pivot point for additional network access.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Are there related alerts involving DNS hijacking or router exploitation?
  context: Identifies coordinated attacks targeting network infrastructure.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip