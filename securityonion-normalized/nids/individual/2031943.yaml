name: ET EXPLOIT Possible NSDP (Netgear) Write Command Buffer Overflow Attempt - 0x0003 (CVE-2020-35225)
id: 1211632
description: |
  Detects UDP traffic matching NSDP protocol patterns with specific byte sequences that may indicate buffer overflow exploitation attempts against Netgear switches.
  May trigger on legitimate network discovery protocols or NSDP management traffic.
type: detection
detection_id: 2031943
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete UDP packet content that triggered this alert?
    context: Reveals the exact byte sequence and payload structure of the potential NSDP exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
          dst_port: 60000
          network.transport: udp
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.bytes
        - connection.history
  - question: Is UDP traffic to port 60000 normal for this network segment?
    context: Determines if NSDP protocol usage represents typical network management activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other network discovery or management protocols were active from this source?
    context: Identifies whether this is part of broader network reconnaissance or management activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port:
            - 161   # SNMP
            - 162   # SNMP trap
            - 60000 # NSDP
            - 1900  # UPnP
            - 5353  # mDNS
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: Are there Netgear switches or network devices on the targeted subnet?
    context: Identifies potential vulnerable Netgear equipment that could be targeted by CVE-2020-35225.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port:
            - 23    # Telnet
            - 80    # HTTP
            - 443   # HTTPS
            - 60000 # NSDP
        condition: selection
      fields:
        - src_ip
        - dst_port
        - connection.state
        - connection.history
  - question: What other hosts are receiving similar NSDP traffic patterns?
    context: Determines if this represents scanning activity targeting multiple network devices.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: 60000
          network.transport: udp
        condition: selection
      fields:
        - dst_ip
        - network.bytes
        - connection.history
  - question: Did the source IP attempt connections to other device management ports?
    context: Identifies whether this is part of broader network device exploitation attempts.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: connection\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dst_port:\n      - 22    # SSH\n      - 23    # Telnet  \n      - 80    # HTTP\n      - 443   # HTTPS\n      - 8080  # Alt HTTP\n      - 8443  # Alt HTTPS\n  condition: selection\nfields:\n  - dst_ip\n  - dst_port\n  - connection.state\n  - connection.history\n"
  - question: Are there related alerts involving the same source or destination?
    context: Correlates this activity with other security events for broader threat assessment.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the timing pattern of NSDP traffic from this source?
    context: Analyzes whether the traffic represents automated scanning or targeted exploitation.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did any network devices reboot or become unresponsive after this traffic?
    context: Assesses potential impact of buffer overflow exploitation on network infrastructure.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - connection.state
        - connection.history
  - question: Are there other hosts generating similar network discovery traffic patterns?
    context: Identifies coordinated network reconnaissance or multiple sources of exploitation attempts.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_port: 60000
          network.transport: udp
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - network.bytes
        - connection.history