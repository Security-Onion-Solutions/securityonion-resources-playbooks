name: ET MOBILE_MALWARE Possible Phenakite User-Agent
id: 1217132
description: |
  Detects HTTP requests using a specific iPhone user-agent pattern associated with Phenakite mobile malware.
  May trigger on legitimate iOS applications with similar version strings or testing tools mimicking this pattern.
type: detection
detection_id: 2032808
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request containing the Phenakite user-agent string?
    context: Reveals the full request details including URI, headers, and payload associated with this mobile malware pattern.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this mobile device normally connect to external services from this network?
    context: Determines if HTTP connections from this source represent typical mobile device usage patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other external connections occurred from this mobile device?
    context: Identifies additional network activity that may indicate C2 communications or data exfiltration.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other mobile devices using the same suspicious user-agent pattern?
    context: Determines the scope of potential Phenakite malware deployment across mobile devices.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What domains did this device query before establishing the suspicious connection?
    context: Reveals DNS resolution patterns that may indicate malware infrastructure discovery.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Did this device attempt connections to other domains with the same user-agent?
    context: Identifies the complete C2 infrastructure being contacted by the Phenakite malware.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.user_agent|contains: "app/4.7 (iPhone; iOS 12.4.5; Scale/2.00)"
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.method
  - question: What is the timing pattern of connections using this user-agent?
    context: Analyzes communication intervals that may reveal C2 beacon patterns or scheduled malware activity.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Are there related alerts involving the same mobile device or infrastructure?
    context: Identifies other security events that may be part of the same Phenakite campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did this device connect to any known mobile malware or APT infrastructure?
    context: Correlates with known threat intelligence related to Arid Viper or Phenakite campaigns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: [80, 443, 8080, 8443]
        suspicious_domains:
          dst_ip: '{destination.ip}'
        condition: selection and suspicious_domains
      fields:
        - dst_ip
        - dst_port
        - network.bytes_toserver
        - network.bytes_toclient
  - question: What other mobile devices have connected to the same destination infrastructure?
    context: Identifies additional devices that may be compromised by the same Phenakite malware campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.user_agent|contains:
            - "iPhone"
            - "iOS"
            - "app/"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - http.user_agent
        - http.virtual_host
        - http.uri