name: ET EXPLOIT UDP Technology Firmware (IP Cam) - testcmd.cgi RCE via Command Injection Attempt Inbound (CVE-2021-33544)
id: 1212433
description: |
  Detects GET requests to testcmd.cgi containing command injection patterns targeting UDP Technology IP cameras.
  May trigger on legitimate administrative access or vulnerability scanning of camera management interfaces.
type: detection
detection_id: 2033305
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete GET request to testcmd.cgi with the command injection attempt?
    context: Reveals the exact command injection payload targeting the IP camera interface.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive requests to camera management interfaces?
    context: Determines if HTTP access to camera CGI endpoints is typical for this device.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What source IP addresses are attempting to access the testcmd.cgi interface?
    context: Identifies the origin of command injection attempts against the camera.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.uri|contains: "testcmd.cgi"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.user_agent
  - question: Were there successful command executions following the injection attempt?
    context: Assesses whether the CVE-2021-33544 exploitation was successful.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other camera management endpoints were accessed from the same source?
    context: Reveals broader reconnaissance or exploitation attempts against the IP camera.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - ".cgi"
            - "admin"
            - "config"
            - "camera"
            - "stream"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
  - question: Did any files get created on the target system after the command injection?
    context: Identifies potential backdoors or malware installed through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other IP cameras on the network receiving similar command injection attempts?
    context: Determines scope of CVE-2021-33544 exploitation campaign against camera infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri|contains: "testcmd.cgi"
          http.uri|contains: "command="
        filter:
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.uri
  - question: What is the pattern of requests from the source IP targeting camera devices?
    context: Analyzes reconnaissance and exploitation patterns against IoT camera infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "cgi"
            - "cmd"
            - "shell"
            - "exec"
        condition: selection
      fields:
        - dst_ip
        - http.uri
        - http.user_agent
  - question: Did the target camera establish any outbound connections after the injection attempt?
    context: Identifies potential reverse shells or data exfiltration from compromised cameras.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there other alerts involving the same source IP attempting device exploitation?
    context: Correlates with other IoT exploitation attempts from the same attacker.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip