name: ET DOS Possible Microsoft Windows HTTP2 Reset Flood Denial of Service Inbound (CVE-2019-9514)
id: 1200251
description: |
  Detects potential HTTP/2 Reset Flood denial of service attacks against Microsoft Windows servers.
  May trigger on legitimate HTTP/2 implementations with aggressive reset patterns or network congestion.
type: detection
detection_id: 2034093
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP/2 frame sequence that triggered this alert?
    context: Reveals the specific reset flood pattern matching CVE-2019-9514 exploitation attempts.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this source normally establish HTTP/2 connections to this server?
    context: Determines if this represents a change from normal client connection patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What is the timing pattern of HTTP/2 reset frames from this source?
    context: Analyzes the frequency and timing of reset frames to confirm flood characteristics.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What other external connections occurred to this server during the attack?
    context: Identifies other potential participants in the denial of service attack.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts targeting the same server with similar HTTP/2 patterns?
    context: Determines if this is part of a coordinated denial of service campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What application processes were handling HTTP/2 connections during this timeframe?
    context: Identifies the specific web server or application affected by the reset flood.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are there similar HTTP/2 reset flood attempts across other servers?
    context: Assesses the scope of the denial of service attack across the organization.
    range: +/-6h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the total volume of HTTP/2 traffic from this source?
    context: Quantifies the scale of the potential denial of service attack.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.version: "2"
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - http.method
        - http.status_code
        - http.request.body.length
  - question: Did the targeted server experience connection state changes during the attack?
    context: Identifies connection establishment and termination patterns during the flood.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
        condition: selection
      fields:
        - connection.state
        - connection.state_description
        - connection.history
        - network.bytes
        - network.packets
  - question: Are there other sources attempting HTTP/2 reset attacks against any servers?
    context: Identifies additional sources participating in HTTP/2 denial of service attacks.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          rule.name|contains: "HTTP2"
          rule.name|contains: "Reset"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - rule.name
        - alert.severity_label