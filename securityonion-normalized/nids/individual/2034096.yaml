name: ET DOS Possible Apache Traffic Server HTTP2 Settings Flood Error Response (CVE-2019-9515)
id: 1245746
description: |
  Detects repeated HTTP/2 SETTINGS frames that may indicate a settings flood attack against Apache Traffic Server.
  May trigger during legitimate HTTP/2 protocol negotiations or high-traffic scenarios with rapid setting changes.
type: detection
detection_id: 2034096
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP/2 traffic pattern that triggered this alert?
    context: Reveals the specific SETTINGS frame sequence indicating potential CVE-2019-9515 exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this client normally generate high-volume HTTP/2 traffic to this server?
    context: Determines if this traffic pattern represents normal client behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What application or service is handling these HTTP/2 connections?
    context: Identifies the specific server process that may be vulnerable to settings flood attacks.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What is the timing pattern of HTTP/2 SETTINGS frames from this client?
    context: Analyzes the frequency and timing of potential flood attack traffic.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Are other clients sending similar HTTP/2 SETTINGS flood patterns?
    context: Determines if this is part of a coordinated denial-of-service campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other network connections occurred from the attacking client?
    context: Identifies additional attack vectors or reconnaissance activity.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did the server process show signs of resource exhaustion after this activity?
    context: Assesses the impact of the potential settings flood on server performance.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|contains:
            - "trafficserver"
            - "traffic_server"
            - "httpd"
            - "nginx"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
  - question: Are there related HTTP/2 protocol alerts from the same source?
    context: Identifies other HTTP/2 protocol violations that may be part of the same attack.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did this client attempt connections to other HTTP/2 enabled services?
    context: Reveals if the attacker is targeting multiple HTTP/2 implementations.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port:
            - 80
            - 443
            - 8080
            - 8443
        filter:
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - network.bytes_toserver
  - question: Was this attack successful in causing service disruption?
    context: Determines if the settings flood resulted in denial of service conditions.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
          http.status_code:
            - 503
            - 502
            - 500
            - 429
        condition: selection
      fields:
        - src_ip
        - http.status_code
        - http.user_agent
