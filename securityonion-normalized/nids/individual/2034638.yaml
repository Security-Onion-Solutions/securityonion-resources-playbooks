name: ET MALWARE ELF/MooBot Mirai DDoS Variant CnC Checkin M3
id: 1235356
description: |
  Detects specific network communication patterns associated with ELF/MooBot Mirai variant command and control checkins.
  May occur during malware communications or potentially from legitimate applications using similar binary protocols.
type: detection
detection_id: 2034638
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete network communication that triggered this MooBot detection?
    context: Reveals the full binary protocol exchange and connection metadata.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally establish connections to non-standard ports on external networks?
    context: Determines if connections to non-web ports represent a deviation from baseline.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection matching the MooBot communication pattern?
    context: Identifies the application or service responsible for this network activity.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this connection to the potential C2 server?
    context: Reveals domain resolution activity that may indicate how the C2 infrastructure was discovered.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other external connections occurred from this host during this timeframe?
    context: Identifies additional C2 channels or data exfiltration attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same MooBot C2 infrastructure?
    context: Determines the scope of potential botnet participation across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created or modified on this host?
    context: Identifies malware binaries or dropped payloads associated with MooBot infection.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any persistence mechanisms established through registry modifications?
    context: Reveals attempts to maintain persistent access through Windows registry changes.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: Did any lateral movement occur from this potentially compromised host?
    context: Determines if the infection spread to other systems in the network.
    range: +24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: What is the timing pattern of connections to this C2 server?
    context: Analyzes communication intervals that may reveal botnet command structure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Are there other MooBot-related alerts across the organization?
    context: Identifies the broader campaign scope and other affected systems.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of network activity from the suspicious process?
    context: Reveals the full network footprint of the potentially malicious application.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          host.ip: '{related.ip}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.transport
        - Image
        - ProcessGuid
        - User
        - CommandLine
  - question: Did this host attempt connections to other known botnet or malware C2 ports?
    context: Identifies additional malware families or C2 channels beyond MooBot.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port:
            - 1337
            - 7547
            - 23
            - 2323
            - 8080
            - 8888
            - 9999
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state