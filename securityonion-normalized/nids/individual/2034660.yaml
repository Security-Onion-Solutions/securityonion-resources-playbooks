name: ET EXPLOIT Apache log4j RCE Attempt - lower/upper UDP Bypass M1 (CVE-2021-44228)
id: 1212192
description: |
  Detects UDP traffic containing JNDI strings with case obfuscation patterns targeting Log4j vulnerabilities.
  May trigger on legitimate Java applications using JNDI lookups or security testing tools.
type: detection
detection_id: 2034660
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact obfuscated JNDI payload in the UDP traffic?
    context: Reveals the specific case obfuscation technique used in this Log4j exploitation attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally receive UDP traffic from external sources?
    context: Determines if this UDP communication pattern represents unusual activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What Java processes were running when this UDP traffic was received?
    context: Identifies Java applications that may be vulnerable to this Log4j attack vector.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          CommandLine|contains: "java"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - ParentImage
  - question: Did the target host make outbound connections after receiving this UDP traffic?
    context: Assesses whether the Log4j vulnerability resulted in callback connections.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts receiving similar obfuscated JNDI patterns via UDP?
    context: Determines scope of this Log4j campaign targeting UDP services.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other UDP services are running on the target host?
    context: Identifies additional UDP services that may be vulnerable to Log4j attacks.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
          network.transport: "udp"
        condition: selection
      fields:
        - dst_port
        - src_ip
        - network.bytes_toserver
        - network.bytes_toclient
  - question: Were any Java-related files created after this UDP traffic was received?
    context: Identifies potential file artifacts from successful Log4j exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any lateral movement occur from the target host after this activity?
    context: Determines if successful exploitation led to network propagation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related Log4j alerts involving the same source IP?
    context: Reveals broader attack patterns from this source across multiple targets.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What DNS queries occurred before this UDP connection was established?
    context: Identifies reconnaissance or infrastructure setup preceding the attack.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Did the source IP target other UDP services with similar payloads?
    context: Maps the scope of UDP-based Log4j exploitation attempts from this attacker.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          network.transport: "udp"
        filter:
          community_id: '{network.community_id}'
        condition: selection and not filter
      fields:
        - dst_ip
        - dst_port
        - network.bytes_toserver
        - connection.state