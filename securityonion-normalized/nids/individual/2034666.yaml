name: ET HUNTING Possible Apache log4j RCE Attempt - Any Protocol (lower UDP Bypass) (CVE-2021-44228)
id: 1229304
description: |
  Detects UDP traffic containing JNDI strings with lowercase bypass patterns that match Log4j exploitation attempts.
  May trigger on legitimate Java applications using JNDI lookups or security scanning tools testing UDP protocols.
type: detection
detection_id: 2034666
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete UDP payload containing the JNDI bypass pattern?
    context: Reveals the specific exploitation payload attempting to bypass Log4j filters.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
          network.transport: udp
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - src_port
        - dst_port
        - network.bytes
  - question: Does this host normally receive UDP traffic on this port?
    context: Determines if UDP connections to this service are typical for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process on the target host is listening on this UDP port?
    context: Identifies the specific service that may be vulnerable to Log4j exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
          network.transport: udp
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - connection.state
  - question: What other external connections occurred from the target host after this UDP traffic?
    context: Assesses whether the Log4j vulnerability resulted in outbound connections.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts receiving similar UDP traffic with JNDI bypass patterns?
    context: Determines if this is part of a broader scanning or exploitation campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What Java-related processes were executed on the target host after receiving this traffic?
    context: Identifies process execution that may indicate successful Log4j exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - java.exe
          - javaw.exe
          - tomcat
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Were any executable files created on the target host following this UDP activity?
    context: Identifies potential malware or tools dropped through Log4j exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any lateral movement occur from the target host after this activity?
    context: Determines if successful exploitation led to network propagation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving the same source IP across the organization?
    context: Reveals broader attack patterns and campaign scope.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the pattern of UDP traffic from this source IP to other internal hosts?
    context: Identifies systematic scanning for Log4j vulnerabilities across the network.
    range: +/-6h
    query: "aggregation: true\nlogsource:\n  category: network\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    network.transport: udp\n  private_dst:\n    dst_ip|cidr:\n      - \"10.0.0.0/8\"\n      - \"172.16.0.0/12\" \n      - \"192.168.0.0/16\"\n  condition: selection and private_dst\nfields:\n  - dst_ip\n  - dst_port\n"
  - question: What DNS queries were made by the target host after receiving this UDP traffic?
    context: Reveals potential command and control domain resolution following exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{destination.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - dns.query.type_name