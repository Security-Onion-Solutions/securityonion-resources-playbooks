name: ET EXPLOIT Apache log4j RCE Attempt - Nested lower (tcp) (CVE-2021-44228)
id: 1208553
description: |
  Detects TCP traffic containing nested JNDI strings with lowercase transformations targeting Log4j vulnerabilities.
  May trigger on legitimate Java applications using complex JNDI lookups or security testing tools.
type: detection
detection_id: 2034706
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete request containing the nested JNDI string with lowercase transformation?
    context: Reveals the full exploitation payload and delivery method for CVE-2021-44228.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access the targeted Java application?
    context: Determines if this represents unusual access patterns to the vulnerable service.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process was listening on the targeted port when the nested JNDI request arrived?
    context: Identifies the specific Java application vulnerable to Log4j exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS lookups occurred after the nested JNDI request was processed?
    context: Identifies potential LDAP or other protocol connections initiated by Log4j.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What external connections were established following the Log4j exploitation attempt?
    context: Detects successful exploitation leading to reverse shells or data exfiltration.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts receiving similar nested lowercase JNDI exploitation attempts?
    context: Determines the scope of Log4j scanning or exploitation campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created after the nested JNDI request?
    context: Identifies malware or tools deployed through successful Log4j exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any lateral movement occur from this host after the Log4j attempt?
    context: Assesses post-exploitation activity following successful Log4j compromise.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related Log4j alerts across the organization?
    context: Identifies coordinated exploitation attempts targeting multiple Java applications.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the pattern of communication attempts to external infrastructure?
    context: Analyzes callback patterns and C2 communication timing for successful exploitation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did the attacking host attempt other Log4j exploitation techniques against this target?
    context: Reveals the breadth of exploitation attempts and attacker persistence.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.request.body|contains:
            - "jndi:"
            - "${jndi"
            - "ldap://"
            - "rmi://"
            - "dns://"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.request.body
  - question: What other Java applications on this network received JNDI-based attacks?
    context: Maps the attack surface and identifies other potentially vulnerable Log4j instances.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{network.private_ip}'
          http.request.body|contains:
            - "jndi:"
            - "${jndi"
            - "lower:"
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - http.virtual_host
        - http.uri