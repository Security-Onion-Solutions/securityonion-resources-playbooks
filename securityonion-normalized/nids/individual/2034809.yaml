name: ET HUNTING Possible Apache log4j RCE Attempt - Any Protocol (lower UDP Bypass)
id: 1227334
description: |
  Detects UDP traffic containing obfuscated JNDI strings using the "lower" transformation to bypass detection.
  May trigger on legitimate Java applications or security testing that uses JNDI lookups with case obfuscation.
type: detection
detection_id: 2034809
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete UDP payload containing the obfuscated JNDI string?
    context: Reveals the specific payload pattern with "lower" obfuscation technique.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
          network.transport: udp
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - src_port
        - dst_port
        - network.bytes
        - connection.history
  - question: Does this host normally receive UDP traffic on this port?
    context: Determines if UDP communications to this service are typical for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process was listening on the destination port that received this traffic?
    context: Identifies the application that processed the obfuscated JNDI payload.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
        condition: selection
      fields:
        - Image
        - CommandLine
        - ProcessGuid
        - ParentImage
  - question: Did the target host establish new external connections after receiving this UDP traffic?
    context: Assesses whether the Log4j vulnerability resulted in outbound connections.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts receiving similar UDP traffic with JNDI obfuscation patterns?
    context: Determines scope of potential Log4j exploitation campaign using UDP bypass techniques.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created on the target host after this UDP communication?
    context: Identifies potential malware or tools deployed through Log4j exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any Java processes exhibit unusual network activity following this event?
    context: Correlates Java application behavior with potential exploitation attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        java_process:
          Image|contains: java
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.bytes
        - connection.state
  - question: Were any LDAP or RMI connections initiated from the target host?
    context: Identifies potential JNDI lookup callbacks characteristic of Log4j exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_port: [389, 636, 1099, 1389]
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - network.bytes
  - question: Did any processes attempt to download files after this UDP communication?
    context: Reveals potential payload retrieval following successful Log4j exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{destination.ip}'
          http.method: GET
        condition: selection
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.user_agent
  - question: Are there related alerts involving the same source IP across the organization?
    context: Identifies broader Log4j exploitation attempts from the same threat actor.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did any lateral movement occur from the target host?
    context: Assesses whether successful exploitation led to network propagation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport