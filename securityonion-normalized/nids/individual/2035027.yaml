name: ET HUNTING Double Extension ZIP File Downloaded from Discord (Request)
id: 1229315
description: |
  Detects HTTP requests for ZIP files with double extensions downloaded from Discord CDN.
  May trigger on legitimate file sharing or document distribution through Discord channels.
type: detection
detection_id: 2035027
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP request for the double extension ZIP file from Discord?
    context: Reveals the exact filename and request details for the suspicious download.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally download files from Discord?
    context: Determines if Discord file downloads are typical for this system.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the connection to download this file?
    context: Identifies the application or browser that requested the double extension ZIP file.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host?
    context: Identifies additional downloads or communications that may be related.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts downloading files from the same Discord server?
    context: Determines if this is part of a coordinated file distribution campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created after this download?
    context: Identifies extracted or executed content from the double extension ZIP file.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What document files were created after this download?
    context: Reveals document files that may have been extracted from the ZIP archive.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts downloading similar double extension files from Discord?
    context: Identifies broader patterns of suspicious file distribution through Discord.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.host|contains: "discordapp.com"
          http.uri|contains: "/attachments/"
          http.uri|re: "\.(?:pdf|doc|docx|xls|xlsx|ppt|pptx|jpg|jpeg|png|gif|rtf)\.zip$"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.host
        - http.uri
        - http.user_agent
  - question: What is the pattern of Discord file downloads across the organization?
    context: Analyzes the broader use of Discord for file sharing within the environment.
    range: +/-7d
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.host|contains: "discordapp.com"
          http.uri|contains: "/attachments/"
          http.method: "GET"
        condition: selection
      fields:
        - src_ip
        - http.host
        - http.uri
        - http.user_agent
  - question: Did any lateral movement occur from this host after the download?
    context: Assesses whether the downloaded file facilitated network propagation.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport