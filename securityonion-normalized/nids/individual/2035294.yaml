name: ET PHISHING Generic Credential Phish Landing Page 2022-02-25
id: 1210462
description: |
  Detects HTTP responses containing JavaScript patterns commonly used in credential phishing pages that decode email addresses from URL fragments and manipulate browser location. May trigger on legitimate applications that use similar URL fragment processing or base64 encoding techniques.
type: detection
detection_id: 2035294
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete HTTP response containing the JavaScript phishing patterns?
    context: Reveals the full page content and structure used in the credential harvesting attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access web pages with JavaScript URL manipulation?
    context: Determines if this represents unusual web browsing behavior for this user or system.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What browser process made the request to the phishing page?
    context: Identifies the application and user context for the credential phishing attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded access to this phishing site?
    context: Reveals how the user reached the malicious site and potential redirect chains.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other web requests did this host make after visiting the phishing page?
    context: Identifies potential credential submission attempts or additional malicious activity.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts in the organization accessing the same phishing infrastructure?
    context: Determines scope of the phishing campaign across the environment.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did this host access other sites with similar phishing JavaScript patterns?
    context: Identifies additional credential harvesting attempts using the same techniques.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.status_code: 200
        javascript_patterns:
          - http.response_body|contains: "window.location.hash"
          - http.response_body|contains: "window.atob"
          - http.response_body|contains: ".substring"
        condition: selection and any of javascript_patterns
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.user_agent
  - question: What credential-related domains did this host query around the time of the phishing attempt?
    context: Reveals potential legitimate sites being impersonated or additional phishing infrastructure.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        credential_patterns:
          dns.query.name|contains:
            - login
            - signin
            - auth
            - account
            - secure
            - verify
            - update
        condition: selection and credential_patterns
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: Are there related phishing alerts across the organization?
    context: Identifies coordinated phishing campaigns targeting multiple users.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did the user submit credentials by making POST requests after visiting the phishing page?
    context: Determines if the phishing attempt was successful and credentials were harvested.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.method: POST
        credential_fields:
          http.request.body|contains:
            - password
            - passwd
            - email
            - username
            - login
        condition: selection and credential_fields
      fields:
        - dst_ip
        - http.virtual_host
        - http.uri
        - http.request.body.length
  - question: What files were downloaded or created after the phishing page interaction?
    context: Identifies potential secondary payloads or malware delivered through the phishing campaign.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User