name: ET EXPLOIT SEOWON INTECH SLC-130/SLR-120S RCE Inbound M1 (CVE-2020-17456)
id: 1208613
description: |
  Detects POST requests to /system_log.cgi containing URL-encoded command injection patterns targeting SEOWON INTECH devices.
  May trigger on legitimate network administration or security testing activities.
type: detection
detection_id: 2035950
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact POST payload sent to the system_log.cgi endpoint?
    context: Reveals the specific command injection attempt and targeted parameters.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally receive POST requests to administrative CGI endpoints?
    context: Determines if administrative access to this device is typical.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other CGI or administrative endpoints were accessed on this device?
    context: Identifies additional exploitation attempts or reconnaissance activity.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          http.method: "POST"
          http.uri|contains:
            - ".cgi"
            - "/admin"
            - "/system"
            - "/config"
        condition: selection
      fields:
        - src_ip
        - http.uri
        - http.method
        - http.user_agent
  - question: Did the same source IP target other network devices with similar requests?
    context: Assesses whether this is part of a broader campaign targeting network infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.method: "POST"
          http.uri|contains: ".cgi"
        filter:
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - http.uri
        - http.user_agent
  - question: What other hosts are connecting to this network device?
    context: Identifies legitimate administrators and potential lateral movement.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are there other alerts involving this source IP across the organization?
    context: Correlates this activity with other security events.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the pattern of HTTP requests from this source IP?
    context: Analyzes the broader attack methodology and reconnaissance patterns.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dst_ip
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did this device establish any outbound connections after the exploitation attempt?
    context: Determines if the RCE was successful and resulted in command execution.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
        filter:
          dst_ip: '{network.private_ip}'
        condition: selection and not filter
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: What user-agent patterns are associated with this exploitation attempt?
    context: Identifies automated tools or scripts used in the attack.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - http.user_agent
        - http.uri
        - dst_ip
  - question: Are there similar CVE-2020-17456 exploitation attempts against other devices?
    context: Determines the scope of this vulnerability exploitation campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What DNS queries preceded this HTTP exploitation attempt?
    context: Reveals reconnaissance or infrastructure mapping that led to this attack.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip