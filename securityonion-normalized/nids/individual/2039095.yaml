name: ET MALWARE Malicious Browser Installer Domain in DNS Lookup (tor-browser .io)
id: 1253463
description: |
  Detects DNS queries for tor-browser.io domain associated with OnionPoison malware campaign.
  Could indicate legitimate users seeking Tor browser or systems infected with malicious installers.
type: detection
detection_id: 2039095
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete DNS query for the tor-browser.io domain?
    context: Shows the exact DNS request details and resolution information.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Does this host normally query browser download or Tor-related domains?
    context: Determines if DNS queries for browser installers are typical for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name: '{dns.query_name}'
        condition: selection
      fields:
        - dns.query.name
  - question: What DNS queries occurred before and after the tor-browser.io lookup?
    context: Reveals the sequence of DNS activity surrounding the malicious domain query.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What IP addresses did tor-browser.io resolve to?
    context: Identifies the infrastructure hosting the malicious browser installer.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name|contains: "tor-browser.io"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - src_ip
  - question: Did the host download files from the tor-browser.io infrastructure?
    context: Determines if DNS resolution led to actual file downloads.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{dns.resolved_ip}'
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - dst_ip
  - question: What files were downloaded or created after the DNS query?
    context: Identifies potential malware files obtained from the malicious installer site.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts querying tor-browser.io or related malicious domains?
    context: Assesses the scope of OnionPoison campaign activity across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What browser or download processes were active during this timeframe?
    context: Identifies applications that may have initiated the malicious domain query.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - chrome.exe
          - firefox.exe
          - msedge.exe
          - iexplore.exe
          - wget.exe
          - curl.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Did any processes execute from recent downloads after the DNS query?
    context: Detects execution of potentially malicious Tor browser installers.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{source.ip}'
          Image|contains:
            - "tor"
            - "browser"
            - "install"
            - "setup"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User
  - question: Are there related alerts involving the same hosts or infrastructure?
    context: Correlates with other malware detections that may be part of the OnionPoison campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the timing pattern of DNS queries to tor-browser.io?
    context: Analyzes whether queries follow automated patterns typical of malware beaconing.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did the host attempt to access other suspicious browser installer domains?
    context: Reveals broader patterns of malicious installer domain access.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
          dns.query.name|contains:
            - "browser-download"
            - "tor-install"
            - "browser-setup"
            - "secure-browser"
            - "private-browser"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
