name: ET DYN_DNS DYNAMIC_DNS Query to a *.limetropy.com Domain
id: 1230115
description: |
  Detects DNS queries to limetropy.com subdomains, a dynamic DNS service.
  May indicate legitimate use of dynamic DNS services or command and control communications.
type: detection
detection_id: 2041414
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the specific limetropy.com subdomain that was queried?
    context: Reveals the exact dynamic DNS hostname being resolved.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Does this host normally query dynamic DNS services?
    context: Determines if dynamic DNS usage is typical for this system.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name: '{dns.query_name}'
        condition: selection
      fields:
        - dns.query.name
  - question: What process initiated the DNS query for the limetropy.com domain?
    context: Identifies the application responsible for the dynamic DNS lookup.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What IP address did the limetropy.com subdomain resolve to?
    context: Identifies the actual destination that the dynamic DNS service is pointing to.
    range: +/-15m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: dns\ndetection:\n  selection:\n    community_id: '{network.community_id}'\n    dns.query.name|contains: \"limetropy.com\"\n  condition: selection\nfields:\n  - dns.query.name\n  - dns.resolved_ip\n  - dns.query.type_name\n  \n"
  - question: Did the host establish connections to the resolved IP address?
    context: Determines if the DNS resolution was followed by actual network communication.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts querying the same limetropy.com subdomain?
    context: Identifies scope of dynamic DNS usage across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What other dynamic DNS services has this host queried recently?
    context: Reveals patterns of dynamic DNS service usage that may indicate C2 activity.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: dns\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    dns.query.name|contains:\n      - \"duckdns\"\n      - \"noip\"\n      - \"ddns\"\n      - \"dyn.com\"\n      - \"dynalias\"\n      - \"changeip\"\n      - \"3utilities\"\n      - \"bounceme\"\n      - \"chickenkiller\"\n      - \"crabdance\"\n      - \"redirectme\"\n      - \"serveblog\"\n      - \"serveminecraft\"\n      - \"zapto\"\n  condition: selection\nfields:\n  - dns.query.name\n  - dns.resolved_ip\n  \n"
  - question: What is the timing pattern of queries to limetropy.com domains?
    context: Analyzes communication frequency that may indicate automated C2 beaconing.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did any lateral movement occur from this host after the DNS query?
    context: Assesses whether the dynamic DNS resolution led to internal network reconnaissance.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving the same limetropy.com infrastructure?
    context: Identifies coordinated activity across multiple hosts or time periods.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip