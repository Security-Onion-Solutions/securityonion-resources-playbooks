name: ET DYN_DNS DYNAMIC_DNS Query to a *.ubernerden.com Domain
id: 1230286
description: |
  Detects DNS queries to domains under ubernerden.com, a free dynamic DNS service.
  May indicate legitimate use of free DNS services or potential command and control communications.
type: detection
detection_id: 2041844
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete DNS query to the ubernerden.com domain?
  context: Reveals the exact subdomain being queried and any patterns in the domain structure.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: Does this host normally query dynamic DNS domains?
  context: Determines if dynamic DNS usage is typical behavior for this system.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: dns
    detection:
      selection:
        dns.query.name: '{dns.query_name}'
      condition: selection
    fields:
      - dns.query.name
- question: What IP addresses did the ubernerden.com subdomain resolve to?
  context: Identifies the infrastructure hosting the dynamic DNS domain.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{related.ip}'
        dst_ip: '{related.ip}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: What process initiated the DNS query to ubernerden.com?
  context: Identifies the application responsible for the dynamic DNS lookup.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Did this host establish connections to the resolved IP addresses?
  context: Determines if the DNS resolution led to actual communication.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: dns_query and connection
      connection:
        dst_ip|exists: true
        src_ip: '{source.ip}'
      dns_query:
        dns.query.name|contains: .ubernerden.com
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - dst_port
    - network.protocol
    - connection.state
    logsource:
      category: network
      service: connection
- question: What other external connections occurred from this host?
  context: Identifies additional external communications that may be related.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts querying domains under ubernerden.com?
  context: Determines scope of dynamic DNS usage across the organization.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What is the timing pattern of DNS queries to this domain?
  context: Reveals whether queries follow a regular pattern indicative of automated communication.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip: '{source.ip}'
        dns.query.name|contains: ".ubernerden.com"
      condition: selection
    fields:
      - dns.query.name
      - dns.resolved_ip
- question: Did any processes create scheduled tasks or services around this time?
  context: Identifies potential persistence mechanisms associated with dynamic DNS usage.
  range: +/-1h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|endswith:
        - schtasks.exe
        - taskeng.exe
        - taskhostw.exe
      condition: selection
    fields:
      - CommandLine
      - Image
      - ProcessGuid
      - User
      - ParentImage
- question: Are there other alerts involving the same resolved IP addresses?
  context: Correlates dynamic DNS infrastructure with other security events.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: Did this host query other free dynamic DNS services?
  context: Reveals broader patterns of dynamic DNS usage that may indicate command and control activity.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        src_ip: '{source.ip}'
        dns.query.name|contains:
          - ".duckdns.org"
          - ".ddns.net"
          - ".no-ip."
          - ".afraid.org"
          - ".dyndns."
          - ".freedns."
      condition: selection
    fields:
      - dns.query.name
      - dns.resolved_ip