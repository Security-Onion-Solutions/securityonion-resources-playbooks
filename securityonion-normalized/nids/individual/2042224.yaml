name: ET DYN_DNS DYNAMIC_DNS Query to a *.is-a-bruinsfan.org Domain
id: 1217640
description: |
  Detects DNS queries to Dynamic DNS domains using the is-a-bruinsfan.org service.
  May indicate command and control infrastructure or legitimate use of Dynamic DNS services.
type: detection
detection_id: 2042224
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the exact domain queried within the is-a-bruinsfan.org subdomain?
  context: Reveals the specific Dynamic DNS hostname being accessed.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: Does this host normally query Dynamic DNS domains?
  context: Determines if Dynamic DNS usage is typical for this system.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: dns
    detection:
      selection:
        dns.query.name: '{dns.query_name}'
      condition: selection
    fields:
      - dns.query.name
- question: What IP addresses did the is-a-bruinsfan.org subdomain resolve to?
  context: Identifies the actual infrastructure behind the Dynamic DNS service.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dns.query.name|endswith: .is-a-bruinsfan.org
        src_ip: '{source.ip}'
    fields:
    - dns.query.name
    - dns.resolved_ip
    logsource:
      category: network
      service: dns
- question: What process initiated the DNS query to the Dynamic DNS domain?
  context: Identifies the application responsible for the DNS resolution.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: Did the host establish connections to the resolved IP addresses?
  context: Determines if DNS resolution was followed by actual network communication.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - dst_port
    - network.protocol
    - connection.state_description
    logsource:
      category: network
      service: connection
- question: What other external connections occurred from this host around the same time?
  context: Identifies additional network activity that may be related to command and control.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts querying the same Dynamic DNS domain?
  context: Determines the scope of systems accessing this infrastructure.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What is the timing pattern of queries to this Dynamic DNS domain?
  context: Reveals whether queries follow a regular beaconing pattern typical of C2 communications.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{related.ip}'
        dst_ip: '{related.ip}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: Are other hosts querying different subdomains of is-a-bruinsfan.org?
  context: Identifies broader usage of this Dynamic DNS service across the organization.
  range: +/-24h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        dns.query.name|endswith: .is-a-bruinsfan.org
    fields:
    - src_ip
    - dns.query.name
    - dns.resolved_ip
    logsource:
      category: network
      service: dns
- question: Did any lateral movement occur from this host after the Dynamic DNS query?
  context: Assesses whether the system was used as a pivot point for internal network access.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Are there related alerts involving the same Dynamic DNS infrastructure?
  context: Identifies other security events associated with this command and control channel.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip