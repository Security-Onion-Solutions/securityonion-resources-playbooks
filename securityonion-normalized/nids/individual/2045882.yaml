name: ET WEB_SPECIFIC_APPS WordPress - Attempted Check for Malicious posts-layout Plugin
id: 1221490
description: |
  Detects GET requests to WordPress sites checking for the presence of malicious posts-layout plugin files.
  May trigger on legitimate security scanning, vulnerability assessments, or automated reconnaissance tools.
type: detection
detection_id: 2045882
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete HTTP request attempting to check for the posts-layout plugin?
  context: Reveals the exact URI and headers used in the reconnaissance attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally access this WordPress site?
  context: Determines if this represents unusual access patterns to the web server.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What other WordPress-related URIs were accessed from this source IP?
  context: Identifies additional reconnaissance or exploitation attempts against WordPress.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        src_ip: '{source.ip}'
        http.uri|contains:
          - "wp-admin"
          - "wp-content"
          - "wp-includes"
          - "xmlrpc.php"
          - "wp-login"
          - "wp-json"
      condition: selection
    fields:
      - http.uri
      - http.method
      - http.user_agent
      - http.status_code
- question: Are other hosts receiving similar posts-layout plugin checks?
  context: Determines if this is part of a broader WordPress reconnaissance campaign.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What other suspicious WordPress plugin paths were accessed from this IP?
  context: Reveals additional plugin reconnaissance that may indicate broader exploitation attempts.
  range: +/-6h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        src_ip: '{source.ip}'
        http.uri|contains:
          - "/wp-content/plugins/"
          - "/?343"
          - "post-layout"
          - "essential-addons"
      condition: selection
    fields:
      - http.uri
      - http.method
      - http.status_code
      - dst_ip
- question: What was the response from the WordPress server to this plugin check?
  context: Determines if the server revealed information about plugin presence or vulnerabilities.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        community_id: '{network.community_id}'
    fields:
    - http.status_code
    - http.response.body.length
    - http.uri
    logsource:
      category: network
      service: http
- question: Did any POST requests follow this GET reconnaissance attempt?
  context: Identifies potential exploitation attempts after successful reconnaissance.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        src_ip: '{source.ip}'
        dst_ip: '{destination.ip}'
        http.method: "POST"
      condition: selection
    fields:
      - http.uri
      - http.user_agent
      - http.request.body.length
- question: What other external connections occurred from the WordPress server after this request?
  context: Identifies potential compromise indicators if the server was successfully exploited.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are there related alerts involving this source IP across the organization?
  context: Provides context about broader malicious activity from this source.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What is the geographic origin and reputation of the source IP?
  context: Provides threat intelligence context about the reconnaissance source.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        src_ip: '{source.ip}'
    fields:
    - src_ip
    - http.user_agent
    - source.geo.country_name
    - source.as.organization
    logsource:
      category: network
      service: http
- question: Did the WordPress server execute any new processes after receiving this request?
  context: Identifies potential code execution if the plugin vulnerability was successfully exploited.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        Image|endswith:
        - \apache.exe
        - \httpd.exe
        - \nginx.exe
        - \php.exe
        - \php-cgi.exe
      selection:
        host.ip: '{destination.ip}'
    fields:
    - Image
    - CommandLine
    - User
    - ParentImage
    logsource:
      category: process_creation