name: ET EXPLOIT_KIT Fake Browser Update Domain in TLS SNI (christopherchabannes .com)
id: 1242887
description: |
  Detects TLS connections to christopherchabannes.com, which hosts fake browser update pages used by exploit kits.
  May trigger on legitimate access if the domain is repurposed or accessed for research purposes.
type: detection
detection_id: 2048457
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete TLS connection to christopherchabannes.com?
    context: Reveals the full SSL handshake details and connection metadata.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - ssl.server_name
        - ssl.version
        - ssl.cipher
        - hash.ja3
  - question: Does this host normally access christopherchabannes.com?
    context: Determines if connections to this domain represent a change from normal browsing patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          src_ip: '{source.ip}'
          ssl.server_name|contains: christopherchabannes
        condition: selection
      fields:
        - src_ip
        - ssl.server_name
  - question: What process initiated the connection to christopherchabannes.com?
    context: Identifies the browser or application responsible for accessing the fake update domain.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded the connection to christopherchabannes.com?
    context: Shows how the user was directed to this domain and any related infrastructure.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other external connections occurred from this host?
    context: Identifies additional domains or IPs that may be part of the exploit kit infrastructure.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to christopherchabannes.com?
    context: Determines the scope of potential fake browser update exposure across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created after the connection to the fake update domain?
    context: Identifies potential malware downloads from the fake browser update page.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any lateral movement occur from this host after accessing the fake update domain?
    context: Assesses whether successful exploitation led to internal network traversal.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving similar fake browser update campaigns?
    context: Identifies patterns of exploit kit activity across the organization.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What domains resolved to the same IP addresses as christopherchabannes.com?
    context: Reveals additional fake update domains in the same exploit kit infrastructure.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        known_bad_resolution:
          dns.query.name: '{dns.query_name}'
        same_ip_domains:
          dns.resolved_ip: '{dns.resolved_ip}'
        filter:
          dns.query.name: '{dns.query_name}'
        condition: same_ip_domains and not filter
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: What user-agent patterns were observed in connections to exploit kit infrastructure?
    context: Identifies browser characteristics and potential fingerprinting by the exploit kit.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - http.user_agent
        - http.virtual_host
        - http.uri
