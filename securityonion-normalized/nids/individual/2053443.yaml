name: ET WEB_SERVER Possible SQL Injection CHAR() in HTTP Request Body M1
id: 1201992
description: |
  Detects HTTP requests containing CHAR() functions with numeric parameters that may indicate SQL injection attempts.
  May trigger on legitimate database queries or web applications using CHAR() functions in POST data.
type: detection
detection_id: 2053443
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-06-11
questions:
  - question: What was the complete HTTP request containing the CHAR() function?
    context: Reveals the full SQL injection payload and request structure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive POST requests with database functions?
    context: Determines if CHAR() usage represents normal application behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process handled this request?
    context: Identifies the specific web server or application that processed the CHAR() request.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other SQL injection patterns were attempted against this web server?
    context: Identifies additional SQL injection techniques used in coordination.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: '{destination.port}'
          http.request.body|contains:
            - "UNION SELECT"
            - "' OR 1=1"
            - "' OR '1'='1"
            - "EXEC("
            - "xp_cmdshell"
            - "sp_executesql"
            - "INFORMATION_SCHEMA"
            - "@@version"
            - "waitfor delay"
        condition: selection
      fields:
        - src_ip
        - http.method
        - http.uri
        - http.user_agent
  - question: Did any database-related files get created after this request?
    context: Assesses whether SQL injection led to file creation or system access.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .py
          - .pl
          - .sh
          - .php
          - .asp
          - .aspx
          - .js
          - .vbs
          - .ps1
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: What other external connections occurred from this web server?
    context: Identifies potential data exfiltration or reverse shell connections.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other web servers receiving similar CHAR() injection attempts?
    context: Determines scope of SQL injection campaign across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What database queries or errors were logged during this timeframe?
    context: Reveals database-level evidence of SQL injection attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: application
      detection:
        selection:
          host.ip: '{destination.ip}'
        keywords:
          - "SQL syntax"
          - "database error"
          - "ORA-"
          - "MySQL"
          - "PostgreSQL"
          - "MSSQL"
          - "syntax error"
          - "invalid query"
        condition: selection and keywords
      fields:
        - message
        - application.name
        - log.level
  - question: Did any administrative or privileged accounts get accessed after this request?
    context: Determines if SQL injection led to privilege escalation or account compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: authentication
      detection:
        selection:
          src_ip: '{destination.ip}'
        condition: selection
      fields:
        - user.name
        - event.action
        - event.outcome
        - source.ip
  - question: What is the pattern of requests from the source IP attempting SQL injection?
    context: Analyzes the attack methodology and automation patterns.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.method: "POST"
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Are there related SQL injection alerts across the organization?
    context: Identifies coordinated SQL injection attempts against multiple targets.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category