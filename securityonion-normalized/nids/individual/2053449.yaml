name: ET WEB_SERVER Possible SQL Injection CHR() in HTTP Request Body M1
id: 1220798
description: |
  Detects HTTP requests containing CHR() function calls with numeric parameters in request bodies.
  May indicate SQL injection attempts targeting database applications or legitimate application functionality using CHR() functions.
type: detection
detection_id: 2053449
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-06-11
questions:
  - question: What was the complete HTTP request body containing the CHR() function?
    context: Reveals the full payload structure and potential SQL injection syntax.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this web server normally receive POST requests with database function calls?
    context: Determines if CHR() usage represents normal application behavior or anomalous activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What web application process handled this request containing CHR() functions?
    context: Identifies the specific web service that processed the potential SQL injection attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other HTTP requests with SQL-related patterns occurred from the same source?
    context: Identifies potential SQL injection attack campaigns or reconnaissance activities.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          src_ip: '{source.ip}'
          http.request.body|contains:
            - "UNION"
            - "SELECT"
            - "INSERT"
            - "UPDATE"
            - "DELETE"
            - "DROP"
            - "CHR("
            - "CHAR("
            - "ASCII("
            - "CONCAT("
            - "OR 1=1"
            - "' OR '"
            - "admin'--"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.request.body
  - question: Were any database errors or unusual HTTP response codes returned after the CHR() request?
    context: Indicates whether the potential SQL injection attempt triggered database errors.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
          src_ip: '{source.ip}'
        error_codes:
          http.status_code:
            - 500
            - 502
            - 503
            - 504
        condition: selection and error_codes
      fields:
        - http.status_code
        - http.method
        - http.uri
        - http.response.body
  - question: What files were accessed by the web application after processing the CHR() request?
    context: Reveals potential data access or file manipulation following SQL injection attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any scripts or executables get created after the CHR() request was processed?
    context: Identifies potential web shell deployment or malicious file creation through SQL injection.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other web servers receiving similar requests with CHR() or SQL injection patterns?
    context: Determines scope of potential SQL injection campaign across the organization.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the geographic and infrastructure profile of the source IP making CHR() requests?
    context: Provides threat intelligence context for attribution and blocking decisions.
    range: +/-12h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state
        - source.geo.country_name
        - source.as.organization.name
  - question: Did this source IP attempt to access administrative or sensitive application paths?
    context: Reveals broader reconnaissance or privilege escalation attempts beyond SQL injection.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "/admin"
            - "/administrator"
            - "/wp-admin"
            - "/login"
            - "/config"
            - "/database"
            - "/phpmyadmin"
            - "/management"
            - "/console"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.status_code
        - http.user_agent