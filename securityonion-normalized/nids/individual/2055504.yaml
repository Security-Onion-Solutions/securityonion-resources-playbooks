name: ET EXPLOIT_KIT Credit Card Skimmer Domain in DNS Lookup (happyllfe .online)
id: 1243494
description: |
  Detects DNS queries for happyllfe.online domain associated with credit card skimming operations.
  May trigger on legitimate DNS queries or security research activities targeting this domain.
type: detection
detection_id: 2055504
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete DNS query for the happyllfe.online domain?
    context: Reveals the exact domain query pattern and resolution details.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Does this host normally query domains with similar patterns?
    context: Determines if DNS queries to suspicious domains are typical for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name: '{dns.query_name}'
        condition: selection
      fields:
        - dns.query.name
  - question: What process initiated the DNS query for happyllfe.online?
    context: Identifies the application or browser responsible for the domain lookup.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host?
    context: Identifies additional suspicious communications or data exfiltration attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts querying the same skimmer domain infrastructure?
    context: Determines scope of potential compromise across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What web browsing activity preceded this DNS query?
    context: Identifies the website or application that triggered the skimmer domain lookup.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - http.virtual_host
        - http.uri
        - http.user_agent
        - http.method
  - question: Did any JavaScript files get downloaded after the DNS query?
    context: Reveals potential skimmer script downloads following domain resolution.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|endswith:
            - ".js"
            - ".min.js"
        condition: selection
      fields:
        - http.virtual_host
        - http.uri
        - http.request.body.length
        - http.status_code
  - question: What IP addresses did the happyllfe.online domain resolve to?
    context: Provides infrastructure details for threat intelligence and blocking.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name|contains: "happyllfe"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - dns.query.type_name
  - question: Are there related alerts involving the same IP infrastructure?
    context: Identifies other security events connected to the skimmer campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did any other hosts query domains with the "happyllfe" pattern?
    context: Reveals broader campaign scope and additional compromised endpoints.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name|contains: "happyllfe"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: Were any payment or checkout pages accessed before this DNS query?
    context: Identifies potential e-commerce sites where the skimmer may be active.
    range: -1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "checkout"
            - "payment"
            - "cart"
            - "billing"
            - "purchase"
        condition: selection
      fields:
        - http.virtual_host
        - http.uri
        - http.method
