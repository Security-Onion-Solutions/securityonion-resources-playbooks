name: ET EXPLOIT_KIT Credit Card Skimmer Domain in DNS Lookup (cssmagic .shop)
id: 1243508
description: |
  Detects DNS queries for cssmagic.shop domain associated with credit card skimming campaigns.
  This domain has been used to host malicious JavaScript that steals payment information from compromised e-commerce sites.
type: detection
detection_id: 2055550
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete DNS query for the cssmagic.shop domain?
  context: Reveals the full domain being resolved and any subdomains used by the skimmer.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: dns
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - dns.query.name
      - dns.query.type_name
      - dns.resolved_ip
- question: Does this host normally query domains related to CSS or web development services?
  context: Determines if DNS queries to development-related domains are typical for this host.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: dns
    detection:
      selection:
        dns.query.name: '{dns.query_name}'
      condition: selection
    fields:
      - dns.query.name
- question: What IP addresses did the cssmagic.shop domain resolve to?
  context: Identifies the infrastructure hosting the credit card skimmer code.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dns.query.name|contains: cssmagic.shop
        src_ip: '{source.ip}'
    fields:
    - dns.query.name
    - dns.resolved_ip
    logsource:
      category: network
      service: dns
- question: What web browser or application initiated the DNS query for the skimmer domain?
  context: Identifies the application that triggered the malicious domain resolution.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other external connections occurred from this host after the DNS query?
  context: Identifies additional communications that may indicate data exfiltration or further compromise.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts in the network querying the same skimmer domain?
  context: Determines the scope of potential compromise across the organization.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Did this host access any e-commerce or payment-related websites before the DNS query?
  context: Identifies potential victim websites that may contain the credit card skimmer.
  range: -1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dns.query.name|contains:
        - shop
        - store
        - cart
        - checkout
        - payment
        - paypal
        - stripe
        src_ip: '{source.ip}'
    fields:
    - dns.query.name
    - dns.resolved_ip
    logsource:
      category: network
      service: dns
- question: Are there related alerts involving credit card skimmers or malicious JavaScript?
  context: Links this activity to broader skimming campaigns or web-based threats.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What other domains with similar naming patterns were queried by this host?
  context: Identifies related skimmer infrastructure using similar domain conventions.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dns.query.name|contains:
        - cssmagic
        - css-magic
        - magicjs
        - jsmagic
        src_ip: '{source.ip}'
    fields:
    - dns.query.name
    - dns.resolved_ip
    logsource:
      category: network
      service: dns
- question: What is the timing pattern of DNS queries to the skimmer domain?
  context: Reveals whether this represents automated polling or user-initiated browsing.
  range: +/-2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{related.ip}'
        dst_ip: '{related.ip}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
      - network.protocol
      - event.duration
      - client.ip_bytes
      - server.ip_bytes
      - connection.state_description
- question: Did any JavaScript or web-related files get created after the DNS query?
  context: Identifies downloaded skimmer code or related malicious scripts.
  range: +1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        file.name|endswith:
        - .js
        - .html
        - .css
        host.ip: '{source.ip}'
    fields:
    - file.path
    - file.name
    - Image
    - ProcessGuid
    logsource:
      category: file_event
