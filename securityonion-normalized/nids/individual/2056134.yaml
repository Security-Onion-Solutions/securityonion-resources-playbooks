name: ET MALWARE Observed SnipBot CnC Domain (dns-msn.com in TLS SNI)
id: 1251134
description: |
  Detects TLS connections to dns-msn.com domains associated with SnipBot malware command and control infrastructure.
  May trigger on legitimate DNS services or applications using similar domain patterns.
type: detection
detection_id: 2056134
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-09-24
questions:
  - question: What was the complete TLS connection to the dns-msn.com domain?
    context: Reveals the specific SNI and certificate details for the SnipBot C2 connection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - ssl.server_name
        - ssl.version
        - ssl.cipher
        - hash.ja3
  - question: Does this host normally access dns-msn.com domains?
    context: Determines if TLS connections to this C2 infrastructure represent new behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          src_ip: '{source.ip}'
          ssl.server_name|contains: dns-msn
        condition: selection
      fields:
        - src_ip
        - ssl.server_name
  - question: What process initiated the connection to the SnipBot C2 domain?
    context: Identifies the application or malware component establishing C2 communications.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host?
    context: Identifies additional C2 channels or data exfiltration attempts by SnipBot.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same SnipBot infrastructure?
    context: Determines scope of SnipBot malware deployment across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created by the process making C2 connections?
    context: Identifies payloads or additional components downloaded from SnipBot C2.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          ProcessGuid: '{event_data.process.entity_id}'
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: What is the timing pattern of connections to the SnipBot C2 server?
    context: Analyzes communication frequency and beaconing behavior.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What DNS queries preceded the TLS connection to dns-msn.com?
    context: Reveals how the SnipBot malware resolved the C2 domain.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What persistence mechanisms were established around the time of C2 communication?
    context: Identifies registry modifications for SnipBot persistence.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: Did any lateral movement occur from this host after C2 contact?
    context: Assesses whether SnipBot attempted to spread to other systems.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related SnipBot alerts across the organization?
    context: Identifies coordinated SnipBot campaign activity.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: Did this host access any other known malware C2 domains?
    context: Reveals broader compromise or multi-stage malware deployment.
    range: +/-6h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: ssl\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    ssl.server_name|contains:\n      - \".tk\"\n      - \".ml\" \n      - \".ga\"\n      - \".cf\"\n      - \"bit.ly\"\n      - \"tinyurl\"\n      - \"pastebin\"\n      - \"discord\"\n  filter:\n    ssl.server_name: '{ssl.server_name}'\n  condition: selection and not filter\nfields:\n  - ssl.server_name\n  - dst_ip\n  - dst_port"
