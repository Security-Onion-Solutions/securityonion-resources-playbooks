name: ET EXPLOIT_KIT ZPHP Domain in TLS SNI (hamptoninnbelton.com)
id: 1211578
description: |
  Detects TLS connections to hamptoninnbelton.com domain associated with ZPHP exploit kit.
  May indicate drive-by compromise attempts through fake browser update campaigns or legitimate access to compromised websites.
type: detection
detection_id: 2058446
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-12-20
questions:
  - question: What was the complete TLS connection attempt to hamptoninnbelton.com?
    context: Reveals the full SSL handshake details and connection metadata for this exploit kit domain.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - ssl.server_name
        - ssl.version
        - ssl.cipher
        - hash.ja3
  - question: Does this host normally access hamptoninnbelton.com or similar domains?
    context: Determines if SSL connections to this domain represent a change from baseline behavior.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          src_ip: '{source.ip}'
          ssl.server_name|contains: hamptoninn
        condition: selection
      fields:
        - src_ip
        - ssl.server_name
  - question: What process initiated the connection to hamptoninnbelton.com?
    context: Identifies the browser or application responsible for contacting the exploit kit domain.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded the connection to hamptoninnbelton.com?
    context: Shows how the host resolved this domain and any related DNS activity.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other external connections occurred from this host?
    context: Identifies additional exploit kit infrastructure or payload delivery attempts.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to hamptoninnbelton.com or related infrastructure?
    context: Determines the scope of potential drive-by compromise campaign across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created after the connection attempt?
    context: Identifies potential exploit kit payloads or malware dropped through drive-by compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any browser processes launched with suspicious command line parameters?
    context: Detects potential browser exploitation or fake update installation attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{source.ip}'
          Image|contains:
            - "chrome.exe"
            - "firefox.exe"
            - "msedge.exe"
            - "iexplore.exe"
        suspicious_args:
          CommandLine|contains:
            - "update"
            - "install"
            - "download"
            - "plugin"
        condition: selection and suspicious_args
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User
  - question: Did any lateral movement occur from this host after the exploit kit contact?
    context: Assesses whether successful exploitation led to internal network reconnaissance or compromise.
    range: +6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving ZPHP exploit kit or fake browser update campaigns?
    context: Identifies broader organizational exposure to this exploit kit campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the IP resolution history for hamptoninnbelton.com?
    context: Reveals exploit kit infrastructure patterns and hosting relationships.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name|contains: "hamptoninnbelton"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
        - src_ip
  - question: Were any persistence mechanisms established after the connection?
    context: Identifies registry modifications that may indicate successful exploit kit payload execution.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: registry_event
      detection:
        selection:
          host.ip: '{related.ip}'
          TargetObject|contains:
          - Run
          - RunOnce
          - Services
          - Startup
          - Winlogon
          - Explorer
          - Shell
          - AppInit_DLLs
          - Image File Execution Options
          - Class
          - ContextMenuHandlers
          - ShellExecuteHooks
        condition: selection
      fields:
        - User
        - Image
        - ProcessGuid
        - TargetObject
        - Details
  - question: Did any other domains with similar naming patterns get accessed?
    context: Hunts for additional exploit kit domains using hotel chain impersonation tactics.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          src_ip: '{source.ip}'
          ssl.server_name|re|i: .*(hampton|hilton|marriott|holiday|comfort).*\.com
        filter:
          ssl.server_name|contains:
            - "hamptoninn.com"
            - "hilton.com"
            - "marriott.com"
            - "holidayinn.com"
        condition: selection and not filter
      fields:
        - ssl.server_name
        - dst_ip