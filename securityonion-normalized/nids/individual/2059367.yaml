name: ET EXPLOIT_KIT ZPHP Domain in DNS Lookup (dsdpx .top)
id: 1211665
description: |
  Detects DNS queries for dsdpx.top domain associated with ZPHP exploit kit and fake browser update campaigns.
  May trigger on legitimate research or security analysis of this infrastructure.
type: detection
detection_id: 2059367
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2025-01-21
questions:
  - question: What was the complete DNS query that triggered this alert?
    context: Reveals the exact domain query and resolution details for the ZPHP exploit kit infrastructure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: Does this host normally query .top domains or similar TLDs?
    context: Determines if queries to uncommon TLDs represent a deviation from normal DNS patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: dns
      detection:
        selection:
          dns.query.name: '{dns.query_name}'
        condition: selection
      fields:
        - dns.query.name
  - question: What process initiated the DNS query for dsdpx.top?
    context: Identifies the application responsible for querying the exploit kit domain.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this host after the DNS query?
    context: Identifies follow-up connections that may indicate successful exploit kit redirection.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts in the network querying the same exploit kit domain?
    context: Determines the scope of potential fake browser update campaign exposure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created after the DNS query?
    context: Identifies potential malware downloads from fake browser update campaigns.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any browser processes execute with suspicious command-line parameters?
    context: Detects browser exploitation attempts following exploit kit contact.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{source.ip}'
          Image|contains:
            - "chrome.exe"
            - "firefox.exe"
            - "msedge.exe"
            - "iexplore.exe"
          CommandLine|contains:
            - "--disable-web-security"
            - "--allow-running-insecure-content"
            - "--disable-extensions"
            - "--no-sandbox"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
  - question: Were any related alerts triggered involving the same IP infrastructure?
    context: Identifies other detection rules triggered by the same exploit kit campaign.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did this host query other domains resolving to the same IP addresses as dsdpx.top?
    context: Reveals additional exploit kit infrastructure used in the same campaign.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
          dns.resolved_ip: '{dns.resolved_ip}'
        filter:
          dns.query.name: "dsdpx.top"
        condition: selection and not filter
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: What is the timing pattern of DNS queries to this exploit kit domain?
    context: Analyzes whether queries follow automated patterns typical of exploit kit redirections.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Were any document files accessed before the DNS query occurred?
    context: Identifies potential initial infection vectors like malicious documents leading to exploit kit contact.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User