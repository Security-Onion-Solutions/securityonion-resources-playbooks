name: ET WEB_SPECIFIC_APPS Mitel 6800 802.1x Support Command Injection (CVE-2024-41710)
id: 1200505
description: |
  Detects POST requests to Mitel 6800 phone systems containing command injection patterns in 802.1x configuration.
  May trigger on legitimate phone configuration changes or security testing of Mitel devices.
type: detection
detection_id: 2059785
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2025-01-30
questions:
  - question: What was the complete POST request containing the 802.1x command injection attempt?
    context: Reveals the exact payload and injection pattern used against the Mitel device.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this host normally access Mitel phone administration interfaces?
    context: Determines if HTTP access to this device management interface is typical.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other requests were made to the Mitel device before this injection attempt?
    context: Identifies reconnaissance or authentication attempts preceding the exploit.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          http.uri|contains:
            - ".html"
            - ".cgi"
            - "/admin"
            - "/config"
        condition: selection
      fields:
        - http.method
        - http.uri
        - http.user_agent
        - http.status_code
  - question: Did the Mitel device respond with error codes or unusual status messages?
    context: Determines if the command injection attempt was successful or blocked.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
          http.status_code:
            - 200
            - 500
            - 403
            - 404
        condition: selection
      fields:
        - http.status_code
        - http.response.body.length
  - question: What other external connections occurred from this source IP?
    context: Identifies additional attack vectors or scanning activity from the same source.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other Mitel devices receiving similar command injection attempts?
    context: Determines if this is part of a coordinated campaign against Mitel infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          http.uri: "/8021xsupport.html"
          http.method: "POST"
        filter:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - http.user_agent
  - question: What is the pattern of requests from this source IP to VoIP infrastructure?
    context: Reveals targeting of telecommunications equipment and potential campaign scope.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port:
            - 80
            - 443
            - 8080
            - 8443
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - http.uri
        - http.user_agent
  - question: Were any other Mitel-specific endpoints accessed from this source?
    context: Identifies broader reconnaissance or exploitation attempts against Mitel devices.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          src_ip: '{source.ip}'
          http.uri|contains:
            - "mitel"
            - "phone"
            - "voip"
            - "sip"
            - "admin"
            - "config"
            - "setup"
        condition: selection
      fields:
        - dst_ip
        - http.uri
        - http.method
  - question: Are there related alerts involving CVE-2024-41710 or Mitel exploitation?
    context: Correlates with other security events targeting the same vulnerability.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the geographical and network context of the attacking IP?
    context: Provides attribution context for the command injection attempt.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.history