name: ET EXPLOIT Zyxel runCommandInShell Telnet Service Command Injection Attempt (CVE-2024-40891)
id: 1208490
description: |
  Detects command injection attempts against Zyxel devices via telnet service exploiting CVE-2024-40891.
  May trigger on legitimate administrative commands or network troubleshooting activities.
type: detection
detection_id: 2060323
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-02-24
questions:
  - question: What was the exact telnet command sequence that triggered this alert?
    context: Reveals the specific command injection payload and technique used.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally receive telnet connections from external sources?
    context: Determines if telnet access from this source represents normal administrative activity.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other network services are running on this Zyxel device?
    context: Identifies additional attack surface and potential lateral movement paths.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
          connection.state: "established"
        condition: selection
      fields:
        - src_ip
        - dst_port
        - network.protocol
        - connection.history
  - question: Were there other command injection attempts against this device?
    context: Assesses whether this is part of a systematic exploitation attempt.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: 23
        condition: selection
      fields:
        - src_ip
        - connection.state
        - connection.history
  - question: Did the device establish any new outbound connections after the injection attempt?
    context: Indicates potential reverse shell establishment or data exfiltration.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
          connection.state: "established"
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.history
  - question: Are other Zyxel devices on the network receiving similar telnet exploitation attempts?
    context: Determines scope of potential campaign targeting network infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: 23
          connection.state: "established"
        condition: selection
      fields:
        - dst_ip
        - connection.history
  - question: What is the geographic origin and reputation of the source IP?
    context: Provides context about the threat actor and potential attribution.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: Were there DNS queries for command and control domains from this network?
    context: Identifies potential C2 infrastructure setup following successful exploitation.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{network.private_ip}'
        filter:
          dns.query.name|contains:
            - ".local"
            - ".lan"
            - ".internal"
        condition: selection and not filter
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: Are there related alerts involving the same source IP targeting network infrastructure?
    context: Reveals broader scanning or exploitation patterns against network devices.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did this exploitation attempt coincide with any TFTP or file transfer activity?
    context: Indicates potential firmware modification or payload deployment attempts.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection1:
          src_ip: '{source.ip}'
          dst_port: [69, 21, 22, 80, 443]
        selection2:
          dst_ip: '{destination.ip}'
          src_port: [69, 21, 22, 80, 443]
        condition: selection1 or selection2
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - connection.state
  - question: What is the timing pattern of telnet connections from this source?
    context: Distinguishes between automated exploitation tools and manual administrative access.
    range: +/-4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description