name: ET EXPLOIT_KIT LandUpdate808 Domain in TLS SNI (iplantit.com)
id: 1203882
description: |
  Detects TLS connections to iplantit.com domain associated with LandUpdate808 exploit kit operations.
  May trigger on legitimate access to compromised websites or security research activities.
type: detection
detection_id: 2061169
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2025-01-27
questions:
  - question: What were the complete TLS connection details to iplantit.com?
    context: Reveals the specific SSL/TLS handshake patterns associated with exploit kit infrastructure.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - ssl.server_name
        - ssl.version
        - ssl.cipher
        - hash.ja3
  - question: Does this host normally access iplantit.com or similar domains?
    context: Determines if this represents a deviation from normal browsing patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: ssl
      detection:
        selection:
          src_ip: '{source.ip}'
          ssl.server_name|contains: iplantit
        condition: selection
      fields:
        - src_ip
        - ssl.server_name
  - question: What process initiated the connection to iplantit.com?
    context: Identifies the application or browser that accessed the exploit kit domain.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What DNS queries preceded this connection to iplantit.com?
    context: Shows how the host resolved the exploit kit domain and any related lookups.
    range: -5m
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
        condition: selection
      fields:
        - dns.query.name
        - dns.query.type_name
        - dns.resolved_ip
  - question: What other external connections occurred from this host after the exploit kit contact?
    context: Identifies potential payload delivery or C2 communication following exploit kit interaction.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to iplantit.com or related infrastructure?
    context: Determines the scope of potential exploit kit exposure across the organization.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What executable files were created after the connection to the exploit kit domain?
    context: Identifies malware payloads that may have been delivered by the exploit kit.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Were any browser-related processes spawning unusual child processes?
    context: Detects exploitation attempts that result in process injection or code execution.
    range: +1h
    query: "aggregation: false\nlogsource:\n  category: process_creation\ndetection:\n  browser_parents:\n    ParentImage|contains:\n      - \"chrome.exe\"\n      - \"firefox.exe\" \n      - \"msedge.exe\"\n      - \"iexplore.exe\"\n  suspicious_children:\n    Image|contains:\n      - \"powershell.exe\"\n      - \"cmd.exe\"\n      - \"wscript.exe\"\n      - \"cscript.exe\"\n      - \"mshta.exe\"\n      - \"rundll32.exe\"\n  timeframe:\n    host.ip: '{source.ip}'\n  condition: browser_parents and suspicious_children and timeframe\nfields:\n  - ParentImage\n  - Image\n  - CommandLine\n  - User\n"
  - question: Did any lateral movement occur from this host following the exploit kit contact?
    context: Assesses whether successful exploitation led to network propagation.
    range: +4h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related exploit kit alerts across the organization?
    context: Identifies coordinated exploit kit campaigns or widespread compromise attempts.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What is the timing pattern of connections to iplantit.com?
    context: Analyzes communication frequency to distinguish between automated and manual access.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What IP addresses did iplantit.com resolve to during this timeframe?
    context: Maps the exploit kit infrastructure and identifies related hosting patterns.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        selection:
          src_ip: '{source.ip}'
          dns.query.name: "iplantit.com"
        condition: selection
      fields:
        - dns.query.name
        - dns.resolved_ip
  - question: Are there other domains resolving to the same IP infrastructure as iplantit.com?
    context: Reveals additional exploit kit domains using shared hosting infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: dns
      detection:
        iplantit_resolution:
          dns.query.name: "iplantit.com"
        related_domains:
          dns.resolved_ip: '{destination.ip}'
        condition: related_domains and not iplantit_resolution
      fields:
        - dns.query.name
        - dns.resolved_ip
        - src_ip