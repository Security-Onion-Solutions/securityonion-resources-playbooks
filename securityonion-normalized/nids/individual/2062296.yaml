name: ET HUNTING PHP Serialize Object Injection M2
id: 1245766
description: |
  Detects PHP object injection attempts through serialized data in HTTP POST requests to PHP endpoints.
  May trigger on legitimate PHP applications using serialization or development/testing activities.
type: detection
detection_id: 2062296
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete PHP serialized payload in the POST request?
  context: Reveals the exact serialized object structure and potential injection content.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this host normally send POST requests to PHP applications?
  context: Determines if POST requests to PHP endpoints are typical for this source.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: http
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What PHP application or script received the serialized object injection attempt?
  context: Identifies the specific PHP endpoint that may be vulnerable to object injection.
  range: +/-15m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.method: POST
        http.uri|contains: .php
        src_ip: '{source.ip}'
    fields:
    - http.uri
    - http.virtual_host
    - http.status_code
    - http.user_agent
    logsource:
      category: network
      service: http
- question: What other POST requests to PHP scripts occurred from this source?
  context: Identifies broader patterns of PHP application interaction or scanning activity.
  range: +/-2h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        dst_ip: '{destination.ip}'
      selection:
        http.method: POST
        http.uri|contains: .php
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - http.uri
    - http.virtual_host
    - http.status_code
    logsource:
      category: network
      service: http
- question: What process initiated the connection to the PHP application?
  context: Identifies the application responsible for receiving the serialized object injection.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What files were created by the web server process after this request?
  context: Assesses whether the object injection resulted in file creation or modification.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        ProcessGuid: '{event_data.process.entity_id}'
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - User
- question: Did the web server establish any external connections after processing this request?
  context: Identifies potential remote code execution or data exfiltration attempts.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts sending similar PHP serialized injection attempts?
  context: Determines if this is part of a coordinated attack campaign against PHP applications.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What other PHP scripts on this server received POST requests during this timeframe?
  context: Reveals the scope of PHP application targeting or enumeration activity.
  range: +/-1h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.method: POST
        http.uri|contains: .php
    fields:
    - src_ip
    - http.uri
    - http.virtual_host
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Did any lateral movement occur from the web server after this injection attempt?
  context: Assesses whether successful exploitation led to internal network compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Were any new scheduled tasks or services created after this request?
  context: Identifies persistence mechanisms that may have been established through code execution.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|endswith:
        - schtasks.exe
        - taskeng.exe
        - taskhostw.exe
      condition: selection
    fields:
      - CommandLine
      - Image
      - ProcessGuid
      - User
      - ParentImage
- question: Are there related alerts involving PHP vulnerabilities across the organization?
  context: Determines if this is part of a broader campaign targeting PHP applications.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
