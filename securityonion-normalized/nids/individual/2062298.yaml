name: ET HUNTING PHP Serialize Object Injection M4
id: 1245768
description: |
  Detects PHP object injection attempts through serialized data in POST requests.
  May trigger on legitimate applications using PHP serialization or development testing.
type: detection
detection_id: 2062298
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete POST request containing the serialized PHP object?
    context: Reveals the exact payload structure and injection attempt details.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: http
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - http.method
        - http.useragent
        - http.virtual_host
        - http.uri
        - http.status_code
  - question: Does this application normally receive POST requests with serialized data?
    context: Determines if PHP serialization usage is typical for this web application.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: http
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What PHP application processed this POST request?
    context: Identifies the specific web application that may be vulnerable to object injection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other POST requests occurred to PHP endpoints from this source?
    context: Identifies additional injection attempts or reconnaissance activity.
    range: +/-2h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: http\ndetection:\n  selection:\n    src_ip: '{source.ip}'\n    http.method: \"POST\"\n    http.uri|contains: \".php\"\n  condition: selection\nfields:\n  - http.uri\n  - http.user_agent\n  - http.request.body.length\n  \n"
  - question: Did any PHP files get created or modified after this request?
    context: Identifies potential webshells or backdoors created through object injection.
    range: +1h
    query: "aggregation: false\nlogsource:\n  category: file_event\ndetection:\n  selection:\n    host.ip: '{destination.ip}'\n    file.name|endswith: \".php\"\n  condition: selection\nfields:\n  - file.path\n  - file.name\n  - Image\n  \n"
  - question: What executable files were created on the web server after this request?
    context: Detects potential malware or tools uploaded through successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts sending similar PHP serialization patterns?
    context: Determines if this is part of a broader scanning or attack campaign.
    range: +/-24h
    query: |
      aggregation: true
      logsource:
        category: alert
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        condition: selection
      fields:
        - src_ip
        - rule.name
        - rule.category
  - question: What external connections occurred from the web server after this request?
    context: Identifies potential data exfiltration or command and control communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any administrative or database connections established after this activity?
    context: Assesses potential privilege escalation or lateral movement attempts.
    range: +1h
    query: "aggregation: false\nlogsource:\n  category: network\n  service: connection\ndetection:\n  selection:\n    src_ip: '{destination.ip}'\n    dst_port:\n      - 22    # SSH\n      - 3389  # RDP\n      - 3306  # MySQL\n      - 5432  # PostgreSQL\n      - 1433  # MSSQL\n  condition: selection\nfields:\n  - dst_ip\n  - dst_port\n  - network.protocol\n  \n"
  - question: Did any lateral movement occur from the affected web server?
    context: Determines if successful exploitation led to internal network compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
