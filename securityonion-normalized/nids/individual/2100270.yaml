name: GPL MISC Teardrop attack
id: 1248756
description: |
  Detects fragmented UDP packets with overlapping fragments that match the Teardrop attack pattern.
  May trigger on legitimate fragmented UDP traffic or network issues causing unusual fragmentation.
type: detection
detection_id: 2100270
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete fragmentation pattern of the UDP packets?
    context: Reveals the specific fragmentation sequence that triggered the Teardrop detection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this source IP normally send fragmented UDP traffic to this destination?
    context: Determines if fragmented UDP patterns represent normal communication for this host pair.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other UDP connections occurred from this source around the same time?
    context: Identifies additional network activity that may be related to the attack sequence.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          network.transport: udp
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state
        - connection.orig_bytes
        - connection.resp_bytes
  - question: What other external connections occurred from this host?
    context: Identifies additional network activity that may indicate broader attack patterns.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts receiving similar fragmented UDP traffic from external sources?
    context: Determines if this is part of a coordinated denial of service campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What is the timing pattern of UDP connections from this source?
    context: Analyzes connection frequency to identify potential DoS attack patterns.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Did any services become unavailable after receiving this fragmented traffic?
    context: Assesses whether the Teardrop attack caused service disruption.
    range: +30m
    query: "aggregation: false\nlogsource:\n  category: network\n  service: connection\ndetection:\n  selection:\n    dst_ip: '{destination.ip}'\n    connection.state: \n      - \"S0\"\n      - \"REJ\"\n      - \"RSTO\"\n  condition: selection\nfields:\n  - src_ip\n  - dst_port\n  - connection.state_description\n  - connection.history\n"
  - question: Are there related denial of service alerts from this source IP?
    context: Identifies other DoS-related detections that may be part of the same attack.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What UDP ports are being targeted by this fragmented traffic?
    context: Reveals the scope of services potentially affected by the Teardrop attack.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          network.transport: udp
        condition: selection
      fields:
        - dst_port
        - connection.orig_bytes
        - connection.resp_bytes
        - connection.state
  - question: Did this host attempt to communicate with other internal systems after the attack?
    context: Determines if the attack was followed by lateral movement attempts.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
