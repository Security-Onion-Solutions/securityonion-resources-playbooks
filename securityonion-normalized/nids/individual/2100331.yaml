name: GPL SCAN cybercop query
id: 1248824
description: |
  Detects CyberCop scanner queries to finger service on port 79.
  May trigger on legitimate finger service usage or security scanning tools.
type: detection
detection_id: 2100331
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete finger query that triggered this alert?
    context: Reveals the specific scanner signature and query pattern.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally receive finger service connections?
    context: Determines if finger protocol usage is typical for this environment.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process is listening on port 79 for finger requests?
    context: Identifies the finger daemon or service handling these connections.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other external connections occurred from this scanning host?
    context: Identifies additional scanning or reconnaissance activity.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{network.private_ip}'
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - connection.state
  - question: Are other hosts being scanned by the same source?
    context: Determines scope of reconnaissance activity across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What ports are being targeted by this scanning host?
    context: Reveals the scope and pattern of port scanning activity.
    range: +/-6h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{network.private_ip}'
        condition: selection
      fields:
        - dst_port
        - connection.state
        - dst_ip
  - question: Does this scanning pattern match known security tools?
    context: Determines if this represents authorized security scanning versus malicious reconnaissance.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        common_scan_ports:
          dst_port: [21, 22, 23, 25, 53, 79, 80, 110, 135, 139, 443, 445, 993, 995, 1433, 3389]
        condition: selection and common_scan_ports
      fields:
        - dst_port
        - dst_ip
        - connection.state
  - question: Are there related security alerts from this source IP?
    context: Correlates with other detection rules triggered by the same host.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What user information was queried through the finger service?
    context: Identifies what user account information may have been disclosed.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
          dst_port: 79
        condition: selection
      fields:
        - network.bytes_sent
        - network.bytes_received
        - connection.history
