name: GPL FTP FTP file_id.diz access possible warez site
id: 1248903
description: |
  Detects FTP retrieval of file_id.diz files, which are commonly used by warez sites to describe pirated software packages.
  May also trigger on legitimate software archives or retro computing sites that use this file format.
type: detection
detection_id: 2101445
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact FTP command sequence containing the file_id.diz request?
    context: Reveals the complete FTP retrieval attempt and any associated file operations.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ftp
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally access FTP servers for file downloads?
    context: Determines if FTP file retrieval represents normal usage patterns for this system.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What process initiated the FTP connection to retrieve the file_id.diz?
    context: Identifies the application responsible for the FTP file access attempt.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other files were downloaded from this FTP server?
    context: Identifies additional files that may be part of a software package or archive.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ftp
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          ftp.command: "RETR"
        condition: selection
      fields:
        - ftp.command
        - ftp.argument
        - ftp.response_code
  - question: What other external FTP connections occurred from this host?
    context: Identifies additional FTP sites that may contain similar content or distribution patterns.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same FTP server?
    context: Determines if multiple systems are accessing the same file distribution site.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What files were created on the host after the FTP file retrieval?
    context: Identifies downloaded files that may have been extracted or installed locally.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any archive extraction or installation processes execute after the FTP download?
    context: Reveals software installation or extraction activities following file retrieval.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - winrar.exe
          - 7z.exe
          - unzip.exe
          - tar.exe
          - setup.exe
          - install.exe
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Are other hosts in the organization accessing files with similar naming patterns?
    context: Identifies broader patterns of file distribution site usage across the network.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: ftp
      detection:
        selection:
          ftp.command: "RETR"
          ftp.argument|contains:
            - "file_id"
            - "readme"
            - "nfo"
            - "diz"
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - ftp.argument
  - question: Did the FTP server provide directory listings that reveal the site structure?
    context: Analyzes FTP directory contents to understand the nature of the file distribution site.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ftp
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          ftp.command:
            - "LIST"
            - "NLST"
            - "MLSD"
        condition: selection
      fields:
        - ftp.command
        - ftp.response_code
        - ftp.data_channel
