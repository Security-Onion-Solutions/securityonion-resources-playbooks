name: GPL RPC CMSD UDP CMSD_CREATE buffer overflow attempt
id: 1228356
description: |
  Detects UDP traffic to Calendar Manager Service Daemon (CMSD) that may indicate buffer overflow exploitation attempts.
  Could represent legitimate calendar synchronization traffic or scanning/exploitation of CVE-1999-0696.
type: detection
detection_id: 2101907
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What is the complete UDP payload that triggered this CMSD buffer overflow detection?
  context: Reveals the specific RPC call structure and potential overflow data.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - src_ip
      - dst_ip
      - dst_port
- question: Does this host normally receive UDP RPC traffic on calendar services?
  context: Determines if CMSD communications are typical for this system.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What process is listening on the targeted UDP port for calendar services?
  context: Identifies the calendar daemon or service that received the potential exploit.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other UDP connections occurred from this external source?
  context: Identifies additional RPC service scanning or exploitation attempts.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other hosts receiving similar RPC CMSD traffic patterns?
  context: Determines scope of potential RPC service reconnaissance or exploitation.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      filter:
        src_ip: '{source.ip}'
      condition: selection and not filter
    fields:
      - src_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: What executable files were created after the CMSD buffer overflow attempt?
  context: Identifies potential backdoors or malware installed through RPC exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Were any scheduled tasks or cron jobs created following this activity?
  context: Checks for persistence mechanisms established after potential RPC compromise.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: process_creation
    detection:
      selection:
        host.ip: '{network.private_ip}'
        Image|endswith:
        - schtasks.exe
        - taskeng.exe
        - taskhostw.exe
      condition: selection
    fields:
      - CommandLine
      - Image
      - ProcessGuid
      - User
      - ParentImage
- question: Did any lateral movement occur from this host after the RPC attempt?
  context: Assesses whether successful exploitation led to network propagation.
  range: +4h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport
- question: Are there related alerts involving the same source IP across RPC services?
  context: Identifies broader RPC service scanning campaigns targeting multiple vulnerabilities.
  range: +/-24h
  query: |
    aggregation: false
    logsource:
      category: alert
    detection:
      selection:
        related_ip: '{related.ip}'
      filter:
        document_id: '{soc_id}'
      condition: selection and not filter
    fields:
      - rule.name
      - rule.category
      - src_ip
      - dst_ip
- question: What other RPC services were contacted from this external source?
  context: Reveals comprehensive RPC service enumeration and exploitation attempts.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_port:
        - 111
        - 135
        - 593
        - 2049
        - 4045
        network.transport: udp
        src_ip: '{source.ip}'
    fields:
    - dst_ip
    - dst_port
    - network.bytes_toserver
    - network.bytes_toclient
    logsource:
      category: network
      service: connection
- question: Did this host attempt to connect to other systems using RPC protocols?
  context: Identifies potential worm-like behavior or lateral movement via RPC exploitation.
  range: +6h
  query: |-
    aggregation: false
    detection:
      condition: selection and internal_filter
      internal_filter:
        dst_ip|cidr:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
      selection:
        dst_port:
        - 111
        - 135
        - 593
        - 2049
        - 4045
        network.transport: udp
        src_ip: '{destination.ip}'
    fields:
    - dst_ip
    - dst_port
    - connection.state
    logsource:
      category: network
      service: connection