name: GPL FTP REST overflow attempt
id: 1227188
description: |
  Detects FTP REST commands with unusually long parameters that may indicate buffer overflow attempts.
  May trigger on legitimate FTP clients using long filenames or paths in REST commands.
type: detection
detection_id: 2101974
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact FTP REST command that triggered this alert?
    context: Reveals the specific command structure and parameter length that matched the buffer overflow pattern.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ftp
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally use FTP services with this server?
    context: Determines if FTP connections to this destination are typical for this host.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What FTP client or process initiated this connection?
    context: Identifies the application responsible for sending the potentially malicious REST command.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other FTP commands were sent during this session?
    context: Provides context about the FTP session and potential attack sequence.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ftp
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          dst_port: 21
        condition: selection
      fields:
        - ftp.command
        - ftp.arg
        - ftp.response_code
  - question: Did the FTP server respond with error codes after the REST command?
    context: Determines if the server rejected the command or if exploitation may have succeeded.
    range: +15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ftp
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
          src_port: 21
        condition: selection
      fields:
        - ftp.response_code
        - ftp.response_arg
  - question: What executable files were created on the target host after this FTP activity?
    context: Identifies potential payloads that may have been uploaded or created through exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Are other hosts attempting similar FTP REST commands with long parameters?
    context: Determines if this is part of a coordinated attack campaign against FTP services.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          rule.uuid: '{rule.uuid}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_ip
        - rule.name
  - question: What other external connections occurred from this host after the FTP activity?
    context: Identifies potential data exfiltration or additional attack vectors.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Was any suspicious process activity detected on hosts involved in this FTP session?
    context: Correlates FTP overflow attempts with process execution that may indicate successful exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{related.ip}'
          CommandLine|contains:
            - "ftp"
            - "download"
            - "upload"
            - "transfer"
        condition: selection
      fields:
        - Image
        - CommandLine
        - ParentImage
        - User