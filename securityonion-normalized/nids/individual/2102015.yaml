name: GPL RPC portmap UNSET attempt UDP 111
id: 1228347
description: |
  Detects attempts to use the UNSET function on RPC portmap service (port 111).
  May indicate legitimate system administration or reconnaissance activity.
type: detection
detection_id: 2102015
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the complete RPC portmap UNSET request that triggered this alert?
    context: Understanding the full packet reveals the specific RPC operation being attempted.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally communicate with the RPC portmap service on port 111?
    context: Determines if this RPC communication pattern is typical for this environment.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What other RPC services are running on the target host?
    context: Identifies the RPC service landscape that may be exposed.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
          dst_port: [111, 135, 2049, 32768, 32769, 32770, 32771, 32772]
        condition: selection
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state
  - question: What other external connections occurred from this source host?
    context: Identifies additional network activity that may indicate reconnaissance or exploitation.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts attempting RPC portmap operations against the same target?
    context: Determines if this is part of a broader scanning or exploitation campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Did this host attempt to access other RPC-related services after the portmap query?
    context: Reveals follow-up activity that may indicate successful service enumeration.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: [135, 2049, 445, 139, 32768, 32769, 32770, 32771, 32772]
        condition: selection
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state
  - question: What is the timing pattern of RPC portmap requests from this source?
    context: Analyzes whether this represents automated scanning or manual enumeration.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: Are there related alerts indicating broader RPC-based reconnaissance?
    context: Identifies other security events that may be part of the same attack sequence.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: Did any processes on the target host respond to or log this RPC request?
    context: Identifies system-level activity that may indicate successful or failed RPC interaction.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{destination.ip}'
          Image|contains:
            - rpcbind
            - portmap
            - rpc
        condition: selection
      fields:
        - Image
        - CommandLine
        - User
        - ProcessGuid