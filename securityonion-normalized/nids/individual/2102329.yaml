name: GPL SQL probe response overflow attempt
id: 1248697
description: |
  Detects SQL server responses that contain unusually large data fields that may indicate buffer overflow exploitation attempts.
  May trigger on legitimate database responses containing large text fields or bulk data transfers.
type: detection
detection_id: 2102329
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact content and size of the SQL response that triggered this alert?
    context: Reveals the specific response pattern and payload size indicating potential overflow exploitation.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this SQL server normally send large response packets to external clients?
    context: Determines if large SQL responses represent normal database operation patterns.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What SQL queries preceded this large response packet?
    context: Identifies the database operations that generated the oversized response.
    range: -30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_ip: '{source.ip}'
          dst_port: [1433, 1434, 3306, 5432, 1521]
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.bytes
        - network.transport
  - question: What process on the SQL server was handling the connection during this response?
    context: Identifies the database service or application responsible for generating the large response.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: Did the SQL server establish any outbound connections after sending this response?
    context: Assesses whether the server was compromised and initiated external communications.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other SQL servers sending similar oversized responses?
    context: Determines if this represents a coordinated attack against multiple database servers.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any database files modified during the timeframe of this activity?
    context: Identifies potential data manipulation or malicious file creation on the database server.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .doc
          - .docx
          - .xls
          - .xlsx
          - .pdf
          - .rtf
          - .ppt
          - .pptx
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any lateral movement occur from the SQL server after this response?
    context: Detects potential compromise and subsequent lateral movement within the network.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there related alerts involving the same SQL server or client IP?
    context: Identifies additional security events that may be part of the same attack campaign.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
  - question: What is the pattern of SQL traffic volume from this server over time?
    context: Analyzes whether this represents an anomaly in database response patterns.
    range: +/-6h
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{destination.ip}'
          dst_port: [1433, 1434, 3306, 5432, 1521]
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.bytes
