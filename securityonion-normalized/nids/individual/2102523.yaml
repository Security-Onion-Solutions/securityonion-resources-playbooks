name: GPL DELETED BGP spoofed connection reset attempt
id: 1247612
description: |
  Detects connection reset attempts on BGP port 179 that may indicate BGP hijacking or denial of service attacks.
  May trigger on legitimate BGP session resets during network maintenance or routing changes.
type: detection
detection_id: 2102523
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What were the complete connection details for the BGP reset attempt?
    context: Reveals the source and destination of the BGP connection reset attack.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally establish BGP connections?
    context: Determines if BGP traffic from this source is typical for the network.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What is the pattern of BGP connections from this source?
    context: Analyzes the frequency and timing of BGP connection attempts.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{related.ip}'
          dst_ip: '{related.ip}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
        - network.protocol
        - event.duration
        - client.ip_bytes
        - server.ip_bytes
        - connection.state_description
  - question: What other network connections occurred from this external source?
    context: Identifies additional network activity that may be part of the same attack.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other BGP routers receiving similar connection reset attempts?
    context: Determines the scope of the BGP attack across the network infrastructure.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: What routing processes were active during the BGP reset attempts?
    context: Identifies BGP daemon processes that may have been targeted.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: process_creation
      detection:
        selection:
          host.ip: '{network.private_ip}'
          Image|contains:
          - bgpd
          - bird
          - quagga
          - frr
        condition: selection
      fields:
        - User
        - Image
        - CommandLine
        - ParentImage
        - ProcessGuid
  - question: Are there signs of lateral movement from hosts involved in BGP activity?
    context: Assesses whether BGP compromise led to further network intrusion.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Were any network configuration files modified around the time of BGP resets?
    context: Identifies potential persistence through routing configuration changes.
    range: +/-1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{destination.ip}'
          file.path|contains:
            - "/etc/bgp"
            - "/etc/quagga"
            - "/etc/frr"
            - "bgpd.conf"
            - "zebra.conf"
            - "bird.conf"
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - User
  - question: What is the timing pattern of these BGP connection resets?
    context: Reveals whether this is automated scanning or targeted BGP disruption.
    range: +/-2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_port: 179
          connection.state|contains: "reset"
        condition: selection
      fields:
        - dst_ip
        - connection.state
        - connection.history
        - network.bytes_toserver
        - network.bytes_toclient
  - question: Are there related network infrastructure alerts involving the same source?
    context: Identifies coordinated attacks against network infrastructure components.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip
