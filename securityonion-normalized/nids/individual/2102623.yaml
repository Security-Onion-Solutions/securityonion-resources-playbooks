name: GPL SQL dbms_repcat_sna_utl.create_snapshot_repgroup buffer overflow attempt
id: 1227246
description: |
  Detects attempts to exploit Oracle's dbms_repcat_sna_utl.create_snapshot_repgroup function with oversized parameters.
  May trigger on legitimate database administration or applications using this Oracle replication function with large parameters.
type: detection
detection_id: 2102623
detection_category: ''
detection_type: nids
contributors:
- SecurityOnionSolutions
created: 2024-01-15
questions:
- question: What was the complete SQL statement containing the dbms_repcat_sna_utl.create_snapshot_repgroup function call?
  context: Reveals the exact payload and parameter sizes used in the potential buffer overflow attempt.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
      service: http
    detection:
      selection:
        community_id: '{network.community_id}'
      condition: selection
    fields:
      - http.method
      - http.useragent
      - http.virtual_host
      - http.uri
      - http.status_code
- question: Does this client normally access Oracle database services on this server?
  context: Determines if this represents unusual database access patterns.
  range: -7d
  query: |
    aggregation: true
    logsource:
      category: network
      service: connection
    detection:
      selection:
        dst_ip: '{destination.ip}'
      condition: selection
    fields:
      - dst_ip
- question: What application or process established the connection to the Oracle database?
  context: Identifies the source application attempting to execute the Oracle function.
  range: +/-15m
  query: |
    aggregation: false
    logsource:
      category: network
    detection:
      selection:
        community_id: '{network.community_id}'
      filter:
        Image|exists: true
      condition: selection and filter
    fields:
      - hostname
      - User
      - Image
      - CommandLine
      - ProcessGuid
- question: What other Oracle database functions were called from this client?
  context: Reveals broader Oracle database interaction patterns that may indicate reconnaissance or exploitation.
  range: +/-30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{destination.ip}'
        http.request.body|contains:
        - dbms_
        - utl_
        - sys.
        src_ip: '{source.ip}'
    fields:
    - http.method
    - http.uri
    - http.request.body
    logsource:
      category: network
      service: http
- question: Did the Oracle server respond with error messages or success indicators?
  context: Determines if the function call was successful or triggered database errors.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        dst_ip: '{source.ip}'
        src_ip: '{destination.ip}'
    fields:
    - http.status_code
    - http.response.body
    logsource:
      category: network
      service: http
- question: What other external connections occurred from this client?
  context: Identifies additional network activity that may be part of a broader attack.
  range: +/-10m
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{source.ip}'
      private:
        dst_ip|cidr:
          - '10.0.0.0/8'
          - '127.0.0.0/8'
          - '172.16.0.0/12'
          - '192.168.0.0/16'
          - '169.254.0.0/16'
      filter:
        dst_ip: '{network.public_ip}'
      condition: selection and not (private or filter)
    fields:
      - dst_ip
      - dst_port
      - network.transport
      - connection.state_description
- question: Are other clients attempting to access Oracle database functions on this server?
  context: Determines if this is part of a coordinated attack against Oracle databases.
  range: +/-6h
  query: |-
    aggregation: false
    detection:
      condition: selection and not filter
      filter:
        src_ip: '{source.ip}'
      selection:
        dst_ip: '{destination.ip}'
        dst_port: '{destination.port}'
        http.request.body|contains:
        - dbms_
        - create_snapshot
        - repcat
    fields:
    - src_ip
    - http.method
    - http.uri
    - http.user_agent
    logsource:
      category: network
      service: http
- question: Are there similar Oracle exploitation attempts across other database servers?
  context: Assesses the scope of potential Oracle database targeting in the environment.
  range: +/-24h
  query: |
    aggregation: true
    logsource:
      category: alert
    detection:
      selection:
        dst_ip: '{network.public_ip}'
      condition: selection
    fields:
      - src_ip
      - rule.name
      - rule.category
- question: What files were created on the Oracle database server after this request?
  context: Identifies potential file system artifacts from successful exploitation.
  range: +1h
  query: |
    aggregation: false
    logsource:
      category: file_event
    detection:
      selection:
        host.ip: '{network.private_ip}'
        file.name|endswith:
        - .exe
        - .dll
        - .bat
        - .cmd
        - .ps1
        - .vbs
        - .js
        - .scr
        - .com
        - .pif
      condition: selection
    fields:
      - file.path
      - file.name
      - Image
      - ProcessGuid
      - User
- question: Were any new processes spawned on the Oracle database server?
  context: Detects potential code execution resulting from buffer overflow exploitation.
  range: +30m
  query: |-
    aggregation: false
    detection:
      condition: selection
      selection:
        host.ip: '{destination.ip}'
    fields:
    - Image
    - CommandLine
    - ParentImage
    - User
    logsource:
      category: process_creation
- question: Did any lateral movement occur from the Oracle database server?
  context: Identifies potential network propagation if the buffer overflow was successful.
  range: +2h
  query: |
    aggregation: false
    logsource:
      category: network
      service: connection
    detection:
      selection:
        src_ip: '{network.private_ip}'
        dst_port:
        - 445    # SMB
        - 139    # NetBIOS
        - 3389   # RDP
        - 5985   # WinRM HTTP
        - 5986   # WinRM HTTPS
        - 22     # SSH
        - 23     # Telnet
        - 135    # RPC
        - 5900   # VNC
      condition: selection
    fields:
      - src_ip
      - src_port
      - dst_ip
      - dst_port
      - network.transport