name: GPL FTP RNFR overflow attempt
id: 1227343
description: |
  Detects FTP RNFR commands with excessively long filenames that may indicate buffer overflow attempts.
  May trigger on legitimate file transfers with very long filenames or automated backup systems.
type: detection
detection_id: 2103077
detection_category: ''
detection_type: nids
contributors:
  - SecurityOnionSolutions
created: 2024-01-15
questions:
  - question: What was the exact RNFR command and filename that triggered this alert?
    context: Reveals the specific payload pattern and length that matched the overflow detection.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ftp
      detection:
        selection:
          community_id: '{network.community_id}'
        condition: selection
      fields:
        - src_ip
        - dst_ip
        - dst_port
  - question: Does this host normally use FTP services for file transfers?
    context: Determines if FTP activity represents normal operations for this system.
    range: -7d
    query: |
      aggregation: true
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{destination.ip}'
        condition: selection
      fields:
        - dst_ip
  - question: What FTP client or process initiated this connection?
    context: Identifies the application responsible for the FTP session with the suspicious command.
    range: +/-15m
    query: |
      aggregation: false
      logsource:
        category: network
      detection:
        selection:
          community_id: '{network.community_id}'
        filter:
          Image|exists: true
        condition: selection and filter
      fields:
        - hostname
        - User
        - Image
        - CommandLine
        - ProcessGuid
  - question: What other FTP commands were issued during this session?
    context: Provides context for the RNFR command within the complete FTP transaction.
    range: +/-30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ftp
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          dst_port: 21
        condition: selection
      fields:
        - ftp.command
        - ftp.arg
        - ftp.response_code
  - question: Were any files successfully transferred after the RNFR command?
    context: Determines if the FTP session completed file operations despite the suspicious command.
    range: +30m
    query: |
      aggregation: false
      logsource:
        category: network
        service: ftp
      detection:
        selection:
          src_ip: '{source.ip}'
          dst_ip: '{destination.ip}'
          ftp.command:
            - "RETR"
            - "STOR"
            - "RNTO"
        condition: selection
      fields:
        - ftp.command
        - ftp.arg
        - ftp.response_code
  - question: What other external connections occurred from this host?
    context: Identifies additional network activity that may be related to the FTP exploitation attempt.
    range: +/-10m
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{source.ip}'
        private:
          dst_ip|cidr:
            - '10.0.0.0/8'
            - '127.0.0.0/8'
            - '172.16.0.0/12'
            - '192.168.0.0/16'
            - '169.254.0.0/16'
        filter:
          dst_ip: '{network.public_ip}'
        condition: selection and not (private or filter)
      fields:
        - dst_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Are other hosts connecting to the same FTP server?
    context: Determines scope of potential FTP-based attacks or legitimate usage patterns.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          dst_ip: '{network.public_ip}'
        filter:
          src_ip: '{source.ip}'
        condition: selection and not filter
      fields:
        - src_ip
        - dst_port
        - network.transport
        - connection.state_description
  - question: Were any executable files created on this host after the FTP activity?
    context: Identifies files that may have been created through successful FTP exploitation.
    range: +1h
    query: |
      aggregation: false
      logsource:
        category: file_event
      detection:
        selection:
          host.ip: '{network.private_ip}'
          file.name|endswith:
          - .exe
          - .dll
          - .bat
          - .cmd
          - .ps1
          - .vbs
          - .js
          - .scr
          - .com
          - .pif
        condition: selection
      fields:
        - file.path
        - file.name
        - Image
        - ProcessGuid
        - User
  - question: Did any lateral movement occur from this host?
    context: Assesses whether the FTP activity was part of broader network compromise.
    range: +2h
    query: |
      aggregation: false
      logsource:
        category: network
        service: connection
      detection:
        selection:
          src_ip: '{network.private_ip}'
          dst_port:
          - 445    # SMB
          - 139    # NetBIOS
          - 3389   # RDP
          - 5985   # WinRM HTTP
          - 5986   # WinRM HTTPS
          - 22     # SSH
          - 23     # Telnet
          - 135    # RPC
          - 5900   # VNC
        condition: selection
      fields:
        - src_ip
        - src_port
        - dst_ip
        - dst_port
        - network.transport
  - question: Are there similar FTP overflow attempts across the organization?
    context: Determines if this is part of a coordinated attack against FTP services.
    range: +/-24h
    query: |
      aggregation: false
      logsource:
        category: alert
      detection:
        selection:
          related_ip: '{related.ip}'
        filter:
          document_id: '{soc_id}'
        condition: selection and not filter
      fields:
        - rule.name
        - rule.category
        - src_ip
        - dst_ip